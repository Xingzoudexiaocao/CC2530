///////////////////////////////////////////////////////////////////////////////
//
// IAR C/C++ Compiler V10.30.1.6000 for 8051              31/Oct/2019  09:20:18
// Copyright 2004-2018 IAR Systems AB.
// PC-locked license - IAR Embedded Workbench for 8051
//
//    Core               =  plain
//    Code model         =  banked
//    Data model         =  large
//    Calling convention =  xdata reentrant
//    Constant location  =  data_rom
//    Dptr setup         =  1,16
//                          
//    Source file        =  
//        C:\Users\hhhho\Desktop\Z-Stack1.2.2a-spp-v001-AD\Components\stack\zdo\ZDProfile.c
//    Command line       =  
//        -f C:\Users\hhhho\AppData\Local\Temp\EW407D.tmp
//        (C:\Users\hhhho\Desktop\Z-Stack1.2.2a-spp-v001-AD\Components\stack\zdo\ZDProfile.c
//        -D SECURE=1 -D xNV_INIT -D xNV_RESTORE -D xPOWER_SAVING -D
//        NWK_AUTO_POLL -D ZTOOL_P1 -D LCD_SUPPORTED=FALSE -D
//        MULTICAST_ENABLED=FALSE -D FEATURE_SYSTEM_STATS -lC
//        C:\Users\hhhho\Desktop\Z-Stack1.2.2a-spp-v001-AD\Projects\zstack\Prj\SampleApp\CC2530DB\EndDeviceEB\List
//        -lA
//        C:\Users\hhhho\Desktop\Z-Stack1.2.2a-spp-v001-AD\Projects\zstack\Prj\SampleApp\CC2530DB\EndDeviceEB\List
//        --diag_suppress Pe001,Pa010 -o
//        C:\Users\hhhho\Desktop\Z-Stack1.2.2a-spp-v001-AD\Projects\zstack\Prj\SampleApp\CC2530DB\EndDeviceEB\Obj
//        -e --debug --core=plain --dptr=16,1 --data_model=large
//        --code_model=banked --calling_convention=xdata_reentrant
//        --place_constants=data_rom --nr_virtual_regs 16 -f
//        C:\Users\hhhho\Desktop\Z-Stack1.2.2a-spp-v001-AD\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\..\Tools\CC2530DB\f8wEndev.cfg
//        (-DCPU32MHZ -DROOT=__near_func -DMAC_CFG_TX_DATA_MAX=3
//        -DMAC_CFG_TX_MAX=6 -DMAC_CFG_RX_MAX=3) -f
//        C:\Users\hhhho\Desktop\Z-Stack1.2.2a-spp-v001-AD\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg
//        (-DZIGBEEPRO -DSECURE=1 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR
//        -DDEFAULT_CHANLIST=0x00000800 -DZDAPP_CONFIG_PAN_ID=0xFFFF
//        -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MASK=0x007F
//        -DBEACON_REQUEST_DELAY=100 -DBEACON_REQ_DELAY_MASK=0x00FF
//        -DLINK_STATUS_JITTER_MASK=0x007F -DROUTE_EXPIRY_TIME=30
//        -DAPSC_ACK_WAIT_DURATION_POLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7
//        -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3
//        -DNWK_MAX_DATA_RETRIES=2 -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9
//        -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40 -DNWK_MAX_BINDING_ENTRIES=4
//        -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07,
//        0x09, 0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C,
//        0x0D}" -DMAC_MAX_FRAME_SIZE=116 -DZDNWKMGR_MIN_TRANSMISSIONS=20
//        "-DCONST=const __code" -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE
//        -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100
//        -DREJOIN_POLL_RATE=440 -DREJOIN_BACKOFF=900000 -DREJOIN_SCAN=900000)
//        -f
//        C:\Users\hhhho\Desktop\Z-Stack1.2.2a-spp-v001-AD\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\..\Tools\CC2530DB\f8wZCL.cfg
//        -I
//        C:\Users\hhhho\Desktop\Z-Stack1.2.2a-spp-v001-AD\Projects\zstack\Prj\SampleApp\CC2530DB\
//        -I
//        C:\Users\hhhho\Desktop\Z-Stack1.2.2a-spp-v001-AD\Projects\zstack\Prj\SampleApp\CC2530DB\..\Source\
//        -I
//        C:\Users\hhhho\Desktop\Z-Stack1.2.2a-spp-v001-AD\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\Source\
//        -I
//        C:\Users\hhhho\Desktop\Z-Stack1.2.2a-spp-v001-AD\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\..\ZMain\TI2530DB\
//        -I
//        C:\Users\hhhho\Desktop\Z-Stack1.2.2a-spp-v001-AD\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\..\..\..\Components\hal\include\
//        -I
//        C:\Users\hhhho\Desktop\Z-Stack1.2.2a-spp-v001-AD\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\
//        -I
//        C:\Users\hhhho\Desktop\Z-Stack1.2.2a-spp-v001-AD\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\..\..\..\Components\mac\include\
//        -I
//        C:\Users\hhhho\Desktop\Z-Stack1.2.2a-spp-v001-AD\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\..\..\..\Components\mac\high_level\
//        -I
//        C:\Users\hhhho\Desktop\Z-Stack1.2.2a-spp-v001-AD\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\
//        -I
//        C:\Users\hhhho\Desktop\Z-Stack1.2.2a-spp-v001-AD\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\single_chip\
//        -I
//        C:\Users\hhhho\Desktop\Z-Stack1.2.2a-spp-v001-AD\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\..\..\..\Components\mt\
//        -I
//        C:\Users\hhhho\Desktop\Z-Stack1.2.2a-spp-v001-AD\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\..\..\..\Components\osal\include\
//        -I
//        C:\Users\hhhho\Desktop\Z-Stack1.2.2a-spp-v001-AD\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\..\..\..\Components\services\saddr\
//        -I
//        C:\Users\hhhho\Desktop\Z-Stack1.2.2a-spp-v001-AD\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\..\..\..\Components\services\sdata\
//        -I
//        C:\Users\hhhho\Desktop\Z-Stack1.2.2a-spp-v001-AD\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\..\..\..\Components\stack\af\
//        -I
//        C:\Users\hhhho\Desktop\Z-Stack1.2.2a-spp-v001-AD\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\..\..\..\Components\stack\nwk\
//        -I
//        C:\Users\hhhho\Desktop\Z-Stack1.2.2a-spp-v001-AD\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\..\..\..\Components\stack\sapi\
//        -I
//        C:\Users\hhhho\Desktop\Z-Stack1.2.2a-spp-v001-AD\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\..\..\..\Components\stack\sec\
//        -I
//        C:\Users\hhhho\Desktop\Z-Stack1.2.2a-spp-v001-AD\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\..\..\..\Components\stack\sys\
//        -I
//        C:\Users\hhhho\Desktop\Z-Stack1.2.2a-spp-v001-AD\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\..\..\..\Components\stack\zcl\
//        -I
//        C:\Users\hhhho\Desktop\Z-Stack1.2.2a-spp-v001-AD\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\..\..\..\Components\stack\zdo\
//        -I
//        C:\Users\hhhho\Desktop\Z-Stack1.2.2a-spp-v001-AD\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\..\..\..\Components\zmac\
//        -I
//        C:\Users\hhhho\Desktop\Z-Stack1.2.2a-spp-v001-AD\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\..\..\..\Components\zmac\f8w\
//        -Ohz --require_prototypes)
//    Locale             =  Chinese (Simplified)_CHN.936
//    List file          =  
//        C:\Users\hhhho\Desktop\Z-Stack1.2.2a-spp-v001-AD\Projects\zstack\Prj\SampleApp\CC2530DB\EndDeviceEB\List\ZDProfile.s51
//
///////////////////////////////////////////////////////////////////////////////

        NAME ZDProfile

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__register_banks", "*"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?V0
        EXTERN ?V1
        EXTERN ?V2
        EXTERN ?V3
        EXTERN ?V4
        EXTERN ?V5
        EXTERN ?V6
        EXTERN ?V7
        EXTERN ?V8
        EXTERN ?V10
        EXTERN ?V11
        EXTERN ?V9
        EXTERN ?V12
        EXTERN ?V13
        EXTERN ?ALLOC_XSTACK8
        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?CALL_IND
        EXTERN ?DEALLOC_XSTACK8
        EXTERN ?PUSH_XSTACK8_X_FOUR
        EXTERN ?PUSH_XSTACK8_X_TWO
        EXTERN ?PUSH_XSTACK_I_ONE
        EXTERN ?PUSH_XSTACK_I_THREE
        EXTERN ?PUSH_XSTACK_I_TWO
        EXTERN ?S_SHL
        EXTERN ?US_SHR
        EXTERN ?XSP
        EXTERN ?XSTACK_DISP0_8
        EXTERN ?XSTACK_DISP101_8
        EXTERN ?XSTACK_DISP102_8
        EXTERN __INIT_XDATA_I
        EXTERN __INIT_XDATA_Z

        PUBLIC `??ZDO_RegisterForZDOMsg::?relay`
        FUNCTION `??ZDO_RegisterForZDOMsg::?relay`,0203H
        PUBLIC `??ZDO_RemoveRegisteredCB::?relay`
        FUNCTION `??ZDO_RemoveRegisteredCB::?relay`,0203H
        PUBLIC `??ZDO_SendMsgCBs::?relay`
        FUNCTION `??ZDO_SendMsgCBs::?relay`,0203H
        PUBLIC `??ZDP_BindUnbindReq::?relay`
        FUNCTION `??ZDP_BindUnbindReq::?relay`,0203H
        PUBLIC `??ZDP_DeviceAnnce::?relay`
        FUNCTION `??ZDP_DeviceAnnce::?relay`,0203H
        PUBLIC `??ZDP_EPRsp::?relay`
        FUNCTION `??ZDP_EPRsp::?relay`,0203H
        PUBLIC `??ZDP_EndDeviceBindReq::?relay`
        FUNCTION `??ZDP_EndDeviceBindReq::?relay`,0203H
        PUBLIC `??ZDP_GenericRsp::?relay`
        FUNCTION `??ZDP_GenericRsp::?relay`,0203H
        PUBLIC `??ZDP_IEEEAddrReq::?relay`
        FUNCTION `??ZDP_IEEEAddrReq::?relay`,0203H
        PUBLIC `??ZDP_IncomingData::?relay`
        FUNCTION `??ZDP_IncomingData::?relay`,0203H
        PUBLIC `??ZDP_MatchDescReq::?relay`
        FUNCTION `??ZDP_MatchDescReq::?relay`,0203H
        PUBLIC `??ZDP_MgmtBindRsp::?relay`
        FUNCTION `??ZDP_MgmtBindRsp::?relay`,0203H
        PUBLIC `??ZDP_MgmtDirectJoinReq::?relay`
        FUNCTION `??ZDP_MgmtDirectJoinReq::?relay`,0203H
        PUBLIC `??ZDP_MgmtLeaveReq::?relay`
        FUNCTION `??ZDP_MgmtLeaveReq::?relay`,0203H
        PUBLIC `??ZDP_MgmtLqiRsp::?relay`
        FUNCTION `??ZDP_MgmtLqiRsp::?relay`,0203H
        PUBLIC `??ZDP_MgmtNwkDiscReq::?relay`
        FUNCTION `??ZDP_MgmtNwkDiscReq::?relay`,0203H
        PUBLIC `??ZDP_MgmtNwkDiscRsp::?relay`
        FUNCTION `??ZDP_MgmtNwkDiscRsp::?relay`,0203H
        PUBLIC `??ZDP_MgmtNwkUpdateNotify::?relay`
        FUNCTION `??ZDP_MgmtNwkUpdateNotify::?relay`,0203H
        PUBLIC `??ZDP_MgmtNwkUpdateReq::?relay`
        FUNCTION `??ZDP_MgmtNwkUpdateReq::?relay`,0203H
        PUBLIC `??ZDP_MgmtPermitJoinReq::?relay`
        FUNCTION `??ZDP_MgmtPermitJoinReq::?relay`,0203H
        PUBLIC `??ZDP_MgmtRtgRsp::?relay`
        FUNCTION `??ZDP_MgmtRtgRsp::?relay`,0203H
        PUBLIC `??ZDP_NWKAddrOfInterestReq::?relay`
        FUNCTION `??ZDP_NWKAddrOfInterestReq::?relay`,0203H
        PUBLIC `??ZDP_NodeDescMsg::?relay`
        FUNCTION `??ZDP_NodeDescMsg::?relay`,0203H
        PUBLIC `??ZDP_NwkAddrReq::?relay`
        FUNCTION `??ZDP_NwkAddrReq::?relay`,0203H
        PUBLIC `??ZDP_ParentAnnce::?relay`
        FUNCTION `??ZDP_ParentAnnce::?relay`,0203H
        PUBLIC `??ZDP_PowerDescMsg::?relay`
        FUNCTION `??ZDP_PowerDescMsg::?relay`,0203H
        PUBLIC `??ZDP_SendData::?relay`
        FUNCTION `??ZDP_SendData::?relay`,0203H
        PUBLIC `??ZDP_ServerDiscReq::?relay`
        FUNCTION `??ZDP_ServerDiscReq::?relay`,0203H
        PUBLIC `??ZDP_ServerDiscRsp::?relay`
        FUNCTION `??ZDP_ServerDiscRsp::?relay`,0203H
        PUBLIC `??ZDP_SimpleDescMsg::?relay`
        FUNCTION `??ZDP_SimpleDescMsg::?relay`,0203H
        PUBLIC `??ZDP_SimpleDescReq::?relay`
        FUNCTION `??ZDP_SimpleDescReq::?relay`,0203H
        PUBLIC `??ZDP_UserDescRsp::?relay`
        FUNCTION `??ZDP_UserDescRsp::?relay`,0203H
        PUBLIC `??ZDP_UserDescSet::?relay`
        FUNCTION `??ZDP_UserDescSet::?relay`,0203H
        FUNCTION `??fillAndSend::?relay`,0203H
        PUBLIC `??zdpProcessAddrReq::?relay`
        FUNCTION `??zdpProcessAddrReq::?relay`,0203H
        PUBLIC ZDO_RegisterForZDOMsg
        FUNCTION ZDO_RegisterForZDOMsg,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDO_RemoveRegisteredCB
        FUNCTION ZDO_RemoveRegisteredCB,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        PUBLIC ZDO_SendMsgCBs
        FUNCTION ZDO_SendMsgCBs,0a1203H
        ARGFRAME XSTACK, 33, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 21, STACK
        PUBLIC ZDP_AF_ENDPOINT
        PUBLIC ZDP_BindUnbindReq
        FUNCTION ZDP_BindUnbindReq,0a1203H
        ARGFRAME XSTACK, 8, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 20, STACK
        PUBLIC ZDP_DeviceAnnce
        FUNCTION ZDP_DeviceAnnce,0a1203H
        ARGFRAME XSTACK, 1, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 21, STACK
        PUBLIC ZDP_EPRsp
        FUNCTION ZDP_EPRsp,0a1203H
        ARGFRAME XSTACK, 7, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 19, STACK
        PUBLIC ZDP_EndDeviceBindReq
        FUNCTION ZDP_EndDeviceBindReq,0a1203H
        ARGFRAME XSTACK, 9, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 20, STACK
        PUBLIC ZDP_GenericRsp
        FUNCTION ZDP_GenericRsp,021203H
        ARGFRAME XSTACK, 4, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC ZDP_IEEEAddrReq
        FUNCTION ZDP_IEEEAddrReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 21, STACK
        PUBLIC ZDP_IncomingData
        FUNCTION ZDP_IncomingData,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 33, STACK
        PUBLIC ZDP_MatchDescReq
        FUNCTION ZDP_MatchDescReq,0a1203H
        ARGFRAME XSTACK, 8, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC ZDP_MgmtBindRsp
        FUNCTION ZDP_MgmtBindRsp,0a1203H
        ARGFRAME XSTACK, 5, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 25, STACK
        PUBLIC ZDP_MgmtDirectJoinReq
        FUNCTION ZDP_MgmtDirectJoinReq,0a1203H
        ARGFRAME XSTACK, 1, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDP_MgmtLeaveReq
        FUNCTION ZDP_MgmtLeaveReq,0a1203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDP_MgmtLqiRsp
        FUNCTION ZDP_MgmtLqiRsp,0a1203H
        ARGFRAME XSTACK, 5, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 24, STACK
        PUBLIC ZDP_MgmtNwkDiscReq
        FUNCTION ZDP_MgmtNwkDiscReq,0a1203H
        ARGFRAME XSTACK, 4, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC ZDP_MgmtNwkDiscRsp
        FUNCTION ZDP_MgmtNwkDiscRsp,0a1203H
        ARGFRAME XSTACK, 5, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 25, STACK
        PUBLIC ZDP_MgmtNwkUpdateNotify
        FUNCTION ZDP_MgmtNwkUpdateNotify,0a1203H
        ARGFRAME XSTACK, 12, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 23, STACK
        PUBLIC ZDP_MgmtNwkUpdateReq
        FUNCTION ZDP_MgmtNwkUpdateReq,0a1203H
        ARGFRAME XSTACK, 6, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 18, STACK
        PUBLIC ZDP_MgmtPermitJoinReq
        FUNCTION ZDP_MgmtPermitJoinReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 23, STACK
        PUBLIC ZDP_MgmtRtgRsp
        FUNCTION ZDP_MgmtRtgRsp,0a1203H
        ARGFRAME XSTACK, 5, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 23, STACK
        PUBLIC ZDP_NWKAddrOfInterestReq
        FUNCTION ZDP_NWKAddrOfInterestReq,0a1203H
        ARGFRAME XSTACK, 1, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC ZDP_NodeDescMsg
        FUNCTION ZDP_NodeDescMsg,0a1203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC ZDP_NwkAddrReq
        FUNCTION ZDP_NwkAddrReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 23, STACK
        PUBLIC ZDP_ParentAnnce
        FUNCTION ZDP_ParentAnnce,0a1203H
        ARGFRAME XSTACK, 5, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 24, STACK
        PUBLIC ZDP_PowerDescMsg
        FUNCTION ZDP_PowerDescMsg,0a1203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC ZDP_SendData
        FUNCTION ZDP_SendData,0a1203H
        ARGFRAME XSTACK, 5, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDP_ServerDiscReq
        FUNCTION ZDP_ServerDiscReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 21, STACK
        PUBLIC ZDP_ServerDiscRsp
        FUNCTION ZDP_ServerDiscRsp,0a1203H
        ARGFRAME XSTACK, 4, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 13, STACK
        PUBLIC ZDP_SimpleDescMsg
        FUNCTION ZDP_SimpleDescMsg,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 22, STACK
        PUBLIC ZDP_SimpleDescReq
        FUNCTION ZDP_SimpleDescReq,0a1203H
        ARGFRAME XSTACK, 1, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC ZDP_TransID
        PUBLIC ZDP_TxOptions
        PUBLIC ZDP_UserDescRsp
        FUNCTION ZDP_UserDescRsp,0a1203H
        ARGFRAME XSTACK, 3, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 22, STACK
        PUBLIC ZDP_UserDescSet
        FUNCTION ZDP_UserDescSet,0a1203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 18, STACK
        FUNCTION fillAndSend,0a1203H
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 35, STACK
        PUBLIC zdoMsgCBs
        PUBLIC zdpMsgProcs
        PUBLIC zdpProcessAddrReq
        FUNCTION zdpProcessAddrReq,0a1603H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 17, STACK
        
          CFI Names cfiNames0
          CFI StackFrame CFA_SP SP IDATA
          CFI StackFrame CFA_PSP16 PSP16 XDATA
          CFI StackFrame CFA_XSP16 XSP16 XDATA
          CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
          CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
          CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
          CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
          CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
          CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
          CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
          CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
          CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
          CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
          CFI VirtualResource ?RET:24
          CFI Resource ?BRET_EXT:8
          CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
          CFI ResourceParts PSP16 PSPH, PSPL
          CFI ResourceParts XSP16 XSPH, XSPL
          CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign -1
          CFI ReturnAddress ?RET CODE
          CFI CFA_DOVERLAY Used
          CFI CFA_IOVERLAY Used
          CFI CFA_SP SP+-3
          CFI CFA_PSP16 PSP16+0
          CFI CFA_XSP16 XSP16+0
          CFI `PSW.CY` SameValue
          CFI `B.BR0` SameValue
          CFI `B.BR1` SameValue
          CFI `B.BR2` SameValue
          CFI `B.BR3` SameValue
          CFI `B.BR4` SameValue
          CFI `B.BR5` SameValue
          CFI `B.BR6` SameValue
          CFI `B.BR7` SameValue
          CFI `VB.BR8` SameValue
          CFI `VB.BR9` SameValue
          CFI `VB.BR10` SameValue
          CFI `VB.BR11` SameValue
          CFI `VB.BR12` SameValue
          CFI `VB.BR13` SameValue
          CFI `VB.BR14` SameValue
          CFI `VB.BR15` SameValue
          CFI VB SameValue
          CFI B Undefined
          CFI A Undefined
          CFI PSW SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R0 Undefined
          CFI R1 Undefined
          CFI R2 Undefined
          CFI R3 Undefined
          CFI R4 Undefined
          CFI R5 Undefined
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI V8 SameValue
          CFI V9 SameValue
          CFI V10 SameValue
          CFI V11 SameValue
          CFI V12 SameValue
          CFI V13 SameValue
          CFI V14 SameValue
          CFI V15 SameValue
          CFI PSPH Undefined
          CFI PSPL Undefined
          CFI XSPH Undefined
          CFI XSPL Undefined
          CFI ?RET Concat
          CFI ?BRET_EXT Frame(CFA_SP, 3)
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndCommon cfiCommon0
        
        
          CFI Common cfiCommon1 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign -1
          CFI ReturnAddress ?RET CODE
          CFI CFA_DOVERLAY Used
          CFI CFA_IOVERLAY Used
          CFI CFA_SP SP+-2
          CFI CFA_PSP16 PSP16+0
          CFI CFA_XSP16 XSP16+0
          CFI `PSW.CY` SameValue
          CFI `B.BR0` SameValue
          CFI `B.BR1` SameValue
          CFI `B.BR2` SameValue
          CFI `B.BR3` SameValue
          CFI `B.BR4` SameValue
          CFI `B.BR5` SameValue
          CFI `B.BR6` SameValue
          CFI `B.BR7` SameValue
          CFI `VB.BR8` SameValue
          CFI `VB.BR9` SameValue
          CFI `VB.BR10` SameValue
          CFI `VB.BR11` SameValue
          CFI `VB.BR12` SameValue
          CFI `VB.BR13` SameValue
          CFI `VB.BR14` SameValue
          CFI `VB.BR15` SameValue
          CFI VB SameValue
          CFI B SameValue
          CFI A SameValue
          CFI PSW SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R0 SameValue
          CFI R1 SameValue
          CFI R2 SameValue
          CFI R3 SameValue
          CFI R4 SameValue
          CFI R5 SameValue
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI V8 SameValue
          CFI V9 SameValue
          CFI V10 SameValue
          CFI V11 SameValue
          CFI V12 SameValue
          CFI V13 SameValue
          CFI V14 SameValue
          CFI V15 SameValue
          CFI PSPH Undefined
          CFI PSPL Undefined
          CFI XSPH Undefined
          CFI XSPL Undefined
          CFI ?RET Concat
          CFI ?BRET_EXT SameValue
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndCommon cfiCommon1
        
AF_DataRequest      SYMBOL "AF_DataRequest"
`??AF_DataRequest::?relay` SYMBOL "?relay", AF_DataRequest
NLME_GetExtAddr     SYMBOL "NLME_GetExtAddr"
`??NLME_GetExtAddr::?relay` SYMBOL "?relay", NLME_GetExtAddr
NLME_GetShortAddr   SYMBOL "NLME_GetShortAddr"
`??NLME_GetShortAddr::?relay` SYMBOL "?relay", NLME_GetShortAddr
ZDApp_InMsgCB       SYMBOL "ZDApp_InMsgCB"
`??ZDApp_InMsgCB::?relay` SYMBOL "?relay", ZDApp_InMsgCB
`?<Name ZDO_ProcessActiveEPR 8>` SYMBOL "ZDO_ProcessActiveEPReq"
`??ZDO_ProcessActiveEPReq::?relay` SYMBOL "?relay", `?<Name ZDO_ProcessActiveEPR 8>`
`?<Name ZDO_ProcessMatchDesc 10>` SYMBOL "ZDO_ProcessMatchDescReq"
`??ZDO_ProcessMatchDescReq::?relay` SYMBOL "?relay", `?<Name ZDO_ProcessMatchDesc 10>`
`?<Name ZDO_ProcessNodeDescR 12>` SYMBOL "ZDO_ProcessNodeDescReq"
`??ZDO_ProcessNodeDescReq::?relay` SYMBOL "?relay", `?<Name ZDO_ProcessNodeDescR 12>`
`?<Name ZDO_ProcessPowerDesc 14>` SYMBOL "ZDO_ProcessPowerDescReq"
`??ZDO_ProcessPowerDescReq::?relay` SYMBOL "?relay", `?<Name ZDO_ProcessPowerDesc 14>`
`?<Name ZDO_ProcessSimpleDes 16>` SYMBOL "ZDO_ProcessSimpleDescReq"
`??ZDO_ProcessSimpleDescReq::?relay` SYMBOL "?relay", `?<Name ZDO_ProcessSimpleDes 16>`
osal_buffer_uint32  SYMBOL "osal_buffer_uint32"
`??osal_buffer_uint32::?relay` SYMBOL "?relay", osal_buffer_uint32
osal_mem_alloc      SYMBOL "osal_mem_alloc"
`??osal_mem_alloc::?relay` SYMBOL "?relay", osal_mem_alloc
osal_mem_free       SYMBOL "osal_mem_free"
`??osal_mem_free::?relay` SYMBOL "?relay", osal_mem_free
osal_memcpy         SYMBOL "osal_memcpy"
`??osal_memcpy::?relay` SYMBOL "?relay", osal_memcpy
osal_memset         SYMBOL "osal_memset"
`??osal_memset::?relay` SYMBOL "?relay", osal_memset
osal_msg_allocate   SYMBOL "osal_msg_allocate"
`??osal_msg_allocate::?relay` SYMBOL "?relay", osal_msg_allocate
osal_msg_send       SYMBOL "osal_msg_send"
`??osal_msg_send::?relay` SYMBOL "?relay", osal_msg_send
sAddrExtCmp         SYMBOL "sAddrExtCmp"
`??sAddrExtCmp::?relay` SYMBOL "?relay", sAddrExtCmp
sAddrExtCpy         SYMBOL "sAddrExtCpy"
`??sAddrExtCpy::?relay` SYMBOL "?relay", sAddrExtCpy
ZDO_RegisterForZDOMsg SYMBOL "ZDO_RegisterForZDOMsg"
`??ZDO_RegisterForZDOMsg::?relay` SYMBOL "?relay", ZDO_RegisterForZDOMsg
ZDO_RemoveRegisteredCB SYMBOL "ZDO_RemoveRegisteredCB"
`??ZDO_RemoveRegisteredCB::?relay` SYMBOL "?relay", ZDO_RemoveRegisteredCB
ZDO_SendMsgCBs      SYMBOL "ZDO_SendMsgCBs"
`??ZDO_SendMsgCBs::?relay` SYMBOL "?relay", ZDO_SendMsgCBs
ZDP_BindUnbindReq   SYMBOL "ZDP_BindUnbindReq"
`??ZDP_BindUnbindReq::?relay` SYMBOL "?relay", ZDP_BindUnbindReq
ZDP_DeviceAnnce     SYMBOL "ZDP_DeviceAnnce"
`??ZDP_DeviceAnnce::?relay` SYMBOL "?relay", ZDP_DeviceAnnce
ZDP_EPRsp           SYMBOL "ZDP_EPRsp"
`??ZDP_EPRsp::?relay` SYMBOL "?relay", ZDP_EPRsp
ZDP_EndDeviceBindReq SYMBOL "ZDP_EndDeviceBindReq"
`??ZDP_EndDeviceBindReq::?relay` SYMBOL "?relay", ZDP_EndDeviceBindReq
ZDP_GenericRsp      SYMBOL "ZDP_GenericRsp"
`??ZDP_GenericRsp::?relay` SYMBOL "?relay", ZDP_GenericRsp
ZDP_IEEEAddrReq     SYMBOL "ZDP_IEEEAddrReq"
`??ZDP_IEEEAddrReq::?relay` SYMBOL "?relay", ZDP_IEEEAddrReq
ZDP_IncomingData    SYMBOL "ZDP_IncomingData"
`??ZDP_IncomingData::?relay` SYMBOL "?relay", ZDP_IncomingData
ZDP_MatchDescReq    SYMBOL "ZDP_MatchDescReq"
`??ZDP_MatchDescReq::?relay` SYMBOL "?relay", ZDP_MatchDescReq
ZDP_MgmtBindRsp     SYMBOL "ZDP_MgmtBindRsp"
`??ZDP_MgmtBindRsp::?relay` SYMBOL "?relay", ZDP_MgmtBindRsp
ZDP_MgmtDirectJoinReq SYMBOL "ZDP_MgmtDirectJoinReq"
`??ZDP_MgmtDirectJoinReq::?relay` SYMBOL "?relay", ZDP_MgmtDirectJoinReq
ZDP_MgmtLeaveReq    SYMBOL "ZDP_MgmtLeaveReq"
`??ZDP_MgmtLeaveReq::?relay` SYMBOL "?relay", ZDP_MgmtLeaveReq
ZDP_MgmtLqiRsp      SYMBOL "ZDP_MgmtLqiRsp"
`??ZDP_MgmtLqiRsp::?relay` SYMBOL "?relay", ZDP_MgmtLqiRsp
ZDP_MgmtNwkDiscReq  SYMBOL "ZDP_MgmtNwkDiscReq"
`??ZDP_MgmtNwkDiscReq::?relay` SYMBOL "?relay", ZDP_MgmtNwkDiscReq
ZDP_MgmtNwkDiscRsp  SYMBOL "ZDP_MgmtNwkDiscRsp"
`??ZDP_MgmtNwkDiscRsp::?relay` SYMBOL "?relay", ZDP_MgmtNwkDiscRsp
ZDP_MgmtNwkUpdateNotify SYMBOL "ZDP_MgmtNwkUpdateNotify"
`??ZDP_MgmtNwkUpdateNotify::?relay` SYMBOL "?relay", ZDP_MgmtNwkUpdateNotify
ZDP_MgmtNwkUpdateReq SYMBOL "ZDP_MgmtNwkUpdateReq"
`??ZDP_MgmtNwkUpdateReq::?relay` SYMBOL "?relay", ZDP_MgmtNwkUpdateReq
ZDP_MgmtPermitJoinReq SYMBOL "ZDP_MgmtPermitJoinReq"
`??ZDP_MgmtPermitJoinReq::?relay` SYMBOL "?relay", ZDP_MgmtPermitJoinReq
ZDP_MgmtRtgRsp      SYMBOL "ZDP_MgmtRtgRsp"
`??ZDP_MgmtRtgRsp::?relay` SYMBOL "?relay", ZDP_MgmtRtgRsp
ZDP_NWKAddrOfInterestReq SYMBOL "ZDP_NWKAddrOfInterestReq"
`??ZDP_NWKAddrOfInterestReq::?relay` SYMBOL "?relay", ZDP_NWKAddrOfInterestReq
ZDP_NodeDescMsg     SYMBOL "ZDP_NodeDescMsg"
`??ZDP_NodeDescMsg::?relay` SYMBOL "?relay", ZDP_NodeDescMsg
ZDP_NwkAddrReq      SYMBOL "ZDP_NwkAddrReq"
`??ZDP_NwkAddrReq::?relay` SYMBOL "?relay", ZDP_NwkAddrReq
ZDP_ParentAnnce     SYMBOL "ZDP_ParentAnnce"
`??ZDP_ParentAnnce::?relay` SYMBOL "?relay", ZDP_ParentAnnce
ZDP_PowerDescMsg    SYMBOL "ZDP_PowerDescMsg"
`??ZDP_PowerDescMsg::?relay` SYMBOL "?relay", ZDP_PowerDescMsg
ZDP_SendData        SYMBOL "ZDP_SendData"
`??ZDP_SendData::?relay` SYMBOL "?relay", ZDP_SendData
ZDP_ServerDiscReq   SYMBOL "ZDP_ServerDiscReq"
`??ZDP_ServerDiscReq::?relay` SYMBOL "?relay", ZDP_ServerDiscReq
ZDP_ServerDiscRsp   SYMBOL "ZDP_ServerDiscRsp"
`??ZDP_ServerDiscRsp::?relay` SYMBOL "?relay", ZDP_ServerDiscRsp
ZDP_SimpleDescMsg   SYMBOL "ZDP_SimpleDescMsg"
`??ZDP_SimpleDescMsg::?relay` SYMBOL "?relay", ZDP_SimpleDescMsg
ZDP_SimpleDescReq   SYMBOL "ZDP_SimpleDescReq"
`??ZDP_SimpleDescReq::?relay` SYMBOL "?relay", ZDP_SimpleDescReq
ZDP_UserDescRsp     SYMBOL "ZDP_UserDescRsp"
`??ZDP_UserDescRsp::?relay` SYMBOL "?relay", ZDP_UserDescRsp
ZDP_UserDescSet     SYMBOL "ZDP_UserDescSet"
`??ZDP_UserDescSet::?relay` SYMBOL "?relay", ZDP_UserDescSet
zdpProcessAddrReq   SYMBOL "zdpProcessAddrReq"
`??zdpProcessAddrReq::?relay` SYMBOL "?relay", zdpProcessAddrReq

        EXTERN `??AF_DataRequest::?relay`
        FUNCTION `??AF_DataRequest::?relay`,00H
        EXTERN `??NLME_GetExtAddr::?relay`
        FUNCTION `??NLME_GetExtAddr::?relay`,00H
        EXTERN `??NLME_GetShortAddr::?relay`
        FUNCTION `??NLME_GetShortAddr::?relay`,00H
        EXTERN `??ZDApp_InMsgCB::?relay`
        FUNCTION `??ZDApp_InMsgCB::?relay`,00H
        EXTERN `??ZDO_ProcessActiveEPReq::?relay`
        FUNCTION `??ZDO_ProcessActiveEPReq::?relay`,00H
        EXTERN `??ZDO_ProcessMatchDescReq::?relay`
        FUNCTION `??ZDO_ProcessMatchDescReq::?relay`,00H
        EXTERN `??ZDO_ProcessNodeDescReq::?relay`
        FUNCTION `??ZDO_ProcessNodeDescReq::?relay`,00H
        EXTERN `??ZDO_ProcessPowerDescReq::?relay`
        FUNCTION `??ZDO_ProcessPowerDescReq::?relay`,00H
        EXTERN `??ZDO_ProcessSimpleDescReq::?relay`
        FUNCTION `??ZDO_ProcessSimpleDescReq::?relay`,00H
        EXTERN `??osal_buffer_uint32::?relay`
        FUNCTION `??osal_buffer_uint32::?relay`,00H
        EXTERN `??osal_mem_alloc::?relay`
        FUNCTION `??osal_mem_alloc::?relay`,00H
        EXTERN `??osal_mem_free::?relay`
        FUNCTION `??osal_mem_free::?relay`,00H
        EXTERN `??osal_memcpy::?relay`
        FUNCTION `??osal_memcpy::?relay`,00H
        EXTERN `??osal_memset::?relay`
        FUNCTION `??osal_memset::?relay`,00H
        EXTERN `??osal_msg_allocate::?relay`
        FUNCTION `??osal_msg_allocate::?relay`,00H
        EXTERN `??osal_msg_send::?relay`
        FUNCTION `??osal_msg_send::?relay`,00H
        EXTERN `??sAddrExtCmp::?relay`
        FUNCTION `??sAddrExtCmp::?relay`,00H
        EXTERN `??sAddrExtCpy::?relay`
        FUNCTION `??sAddrExtCpy::?relay`,00H
        EXTERN AF_DataRequest
        FUNCTION AF_DataRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 35, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_GetExtAddr
        FUNCTION NLME_GetExtAddr,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_GetShortAddr
        FUNCTION NLME_GetShortAddr,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDAppNwkAddr
        EXTERN ZDApp_InMsgCB
        FUNCTION ZDApp_InMsgCB,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 33, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDApp_epDesc
        EXTERN osal_buffer_uint32
        FUNCTION osal_buffer_uint32,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_mem_alloc
        FUNCTION osal_mem_alloc,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_mem_free
        FUNCTION osal_mem_free,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_memcpy
        FUNCTION osal_memcpy,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_memset
        FUNCTION osal_memset,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_allocate
        FUNCTION osal_msg_allocate,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_send
        FUNCTION osal_msg_send,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN sAddrExtCmp
        FUNCTION sAddrExtCmp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN sAddrExtCpy
        FUNCTION sAddrExtCpy,0202H
        ARGFRAME ISTACK, 1, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN saveExtAddr

// C:\Users\hhhho\Desktop\Z-Stack1.2.2a-spp-v001-AD\Components\stack\zdo\ZDProfile.c
//    1 /**************************************************************************************************
//    2   Filename:       ZDProfile.c
//    3   Revised:        $Date: 2015-10-14 11:48:06 -0700 (Wed, 14 Oct 2015) $
//    4   Revision:       $Revision: 44530 $
//    5 
//    6   Description:    This is the Zigbee Device Profile.
//    7 
//    8 
//    9   Copyright 2004-2015 Texas Instruments Incorporated. All rights reserved.
//   10 
//   11   IMPORTANT: Your use of this Software is limited to those specific rights
//   12   granted under the terms of a software license agreement between the user
//   13   who downloaded the software, his/her employer (which must be your employer)
//   14   and Texas Instruments Incorporated (the "License").  You may not use this
//   15   Software unless you agree to abide by the terms of the License. The License
//   16   limits your use, and you acknowledge, that the Software may not be modified,
//   17   copied or distributed unless embedded on a Texas Instruments microcontroller
//   18   or used solely and exclusively in conjunction with a Texas Instruments radio
//   19   frequency transceiver, which is integrated into your product.  Other than for
//   20   the foregoing purpose, you may not use, reproduce, copy, prepare derivative
//   21   works of, modify, distribute, perform, display or sell this Software and/or
//   22   its documentation for any purpose.
//   23 
//   24   YOU FURTHER ACKNOWLEDGE AND AGREE THAT THE SOFTWARE AND DOCUMENTATION ARE
//   25   PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,
//   26   INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY, TITLE,
//   27   NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL
//   28   TEXAS INSTRUMENTS OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER CONTRACT,
//   29   NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR OTHER
//   30   LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
//   31   INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE
//   32   OR CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT
//   33   OF SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
//   34   (INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
//   35 
//   36   Should you have any questions regarding your right to use this Software,
//   37   contact Texas Instruments Incorporated at www.TI.com.
//   38 **************************************************************************************************/
//   39 
//   40 /*********************************************************************
//   41  * INCLUDES
//   42  */
//   43 #include "ZComDef.h"
//   44 #include "OSAL.h"
//   45 #include "AF.h"
//   46 #include "NLMEDE.h"
//   47 #include "nwk_util.h"
//   48 #include "APS.h"
//   49 
//   50 #include "AddrMgr.h"
//   51 #include "ZDConfig.h"
//   52 #include "ZDProfile.h"
//   53 #include "ZDObject.h"
//   54 #include "ZDNwkMgr.h"
//   55 
//   56 #if defined( LCD_SUPPORTED )
//   57   #include "OnBoard.h"
//   58 #endif
//   59 
//   60 #include "nwk_util.h"
//   61 
//   62 #if defined( MT_ZDO_FUNC )
//   63   #include "MT_ZDO.h"
//   64 #endif
//   65 
//   66 /*********************************************************************
//   67  * MACROS
//   68  */
//   69 
//   70 #define ZADDR_TO_AFADDR( pZADDR, AFADDR ) {                            \ 
//   71   (AFADDR).endPoint = ZDP_AF_ENDPOINT;                                 \ 
//   72   (AFADDR).addrMode = (afAddrMode_t)(pZADDR)->addrMode;                \ 
//   73   (AFADDR).addr.shortAddr = (pZADDR)->addr.shortAddr;                  \ 
//   74 }
//   75 
//   76 #define FillAndSendBuffer( TRANSSEQ, ADDR, ID, LEN, BUF ) {     \ 
//   77   afStatus_t stat;                                    \ 
//   78   ZDP_TmpBuf = (BUF)+1;                               \ 
//   79   stat = fillAndSend( (TRANSSEQ), (ADDR), (ID), (LEN) );          \ 
//   80   osal_mem_free( (BUF) );                             \ 
//   81   ZDP_TmpBuf = ZDP_Buf+1;                             \ 
//   82   return stat;                                        \ 
//   83 }
//   84 
//   85 #define FillAndSendTxOptions( TRANSSEQ, ADDR, ID, LEN, TxO ) {  \ 
//   86   afStatus_t stat;                                    \ 
//   87   ZDP_TxOptions = (TxO);                              \ 
//   88   stat = fillAndSend( (TRANSSEQ), (ADDR), (ID), (LEN) );          \ 
//   89   ZDP_TxOptions = AF_TX_OPTIONS_NONE;                 \ 
//   90   return stat;                                        \ 
//   91 }
//   92 
//   93 #define FillAndSendBufferTxOptions( TRANSSEQ, ADDR, ID, LEN, BUF, TxO ) { \ 
//   94   afStatus_t stat;                                    \ 
//   95   ZDP_TmpBuf = (BUF)+1;                               \ 
//   96   ZDP_TxOptions = (TxO);                              \ 
//   97   stat = fillAndSend( (TRANSSEQ), (ADDR), (ID), (LEN) );          \ 
//   98   osal_mem_free( (BUF) );                             \ 
//   99   ZDP_TmpBuf = ZDP_Buf+1;                             \ 
//  100   ZDP_TxOptions = AF_TX_OPTIONS_NONE;                 \ 
//  101   return stat;                                        \ 
//  102 }
//  103 
//  104 /*********************************************************************
//  105  * CONSTANTS
//  106  */
//  107 
//  108 #define ZDP_BUF_SZ          80
//  109 

        RSEG CODE_C:CODE:REORDER:NOROOT(0)
        DATA8
//  110 CONST byte ZDP_AF_ENDPOINT = 0;
ZDP_AF_ENDPOINT:
        DB 0
//  111 
//  112 // Routing table options
//  113 #define ZP_RTG_RECORD       0x04       // Routing table indication that a route record is needed
//  114 #define ZP_MTO_ROUTE_RC     0x08       // Concentrator with routing cache
//  115 #define ZP_MTO_ROUTE_NRC    0x10       // Concentrator with limited cache
//  116 
//  117 
//  118 /*********************************************************************
//  119  * TYPEDEFS
//  120  */
//  121 typedef struct
//  122 {
//  123   void *next;
//  124   uint8 taskID;
//  125   uint16 clusterID;
//  126 } ZDO_MsgCB_t;
//  127 
//  128 
//  129 /*********************************************************************
//  130  * GLOBAL VARIABLES
//  131  */
//  132 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  133 byte ZDP_TransID = 0;
ZDP_TransID:
        DS 1
        REQUIRE __INIT_XDATA_Z
//  134 
//  135 /*********************************************************************
//  136  * EXTERNAL VARIABLES
//  137  */
//  138 
//  139 extern endPointDesc_t ZDApp_epDesc;
//  140 
//  141 /*********************************************************************
//  142  * EXTERNAL FUNCTIONS
//  143  */
//  144 
//  145 /*********************************************************************
//  146  * LOCAL FUNCTIONS
//  147  */
//  148 
//  149 static afStatus_t fillAndSend( uint8 *transSeq, zAddrType_t *addr, cId_t clusterID, byte len );
//  150 uint8 ZDO_SendMsgCBs( zdoIncomingMsg_t *inMsg );
//  151 void zdpProcessAddrReq( zdoIncomingMsg_t *inMsg );
//  152 
//  153 /*********************************************************************
//  154  * LOCAL VARIABLES
//  155  */
//  156 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  157 static uint8  ZDP_Buf[ ZDP_BUF_SZ ];
ZDP_Buf:
        DS 80
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_I:XDATA:NOROOT(0)
//  158 static uint8 *ZDP_TmpBuf = ZDP_Buf+1;
ZDP_TmpBuf:
        DATA16
        DS 2
        REQUIRE `?<Initializer for ZDP_TmpBuf>`
        REQUIRE __INIT_XDATA_I
//  159 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  160 byte ZDP_TxOptions = AF_TX_OPTIONS_NONE;
ZDP_TxOptions:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//  161 ZDO_MsgCB_t *zdoMsgCBs = (ZDO_MsgCB_t *)NULL;
zdoMsgCBs:
        DS 2
        REQUIRE __INIT_XDATA_Z
//  162 
//  163 /*********************************************************************
//  164  * ZDO Message Processing table
//  165  */
//  166 
//  167 typedef void (*pfnZDPMsgProcessor)( zdoIncomingMsg_t *inMsg );
//  168 
//  169 typedef struct
//  170 {
//  171   uint16                clusterID;
//  172   pfnZDPMsgProcessor    pFn;
//  173 } zdpMsgProcItem_t;
//  174 

        RSEG CODE_C:CODE:REORDER:NOROOT(0)
        DATA8
//  175 CONST zdpMsgProcItem_t zdpMsgProcs[] =
zdpMsgProcs:
        DATA16
        DW 1
        DW `??zdpProcessAddrReq::?relay`
        DW 2
        DW `??ZDO_ProcessNodeDescReq::?relay`
        DW 3
        DW `??ZDO_ProcessPowerDescReq::?relay`
        DW 4
        DW `??ZDO_ProcessSimpleDescReq::?relay`
        DW 5
        DW `??ZDO_ProcessActiveEPReq::?relay`
        DW 6
        DW `??ZDO_ProcessMatchDescReq::?relay`
        DW 65535
        DW 0H
//  176 {
//  177 #if ( RFD_RCVC_ALWAYS_ON==TRUE ) || ( ZG_BUILD_RTR_TYPE )
//  178   // These aren't processed by sleeping end devices.
//  179   { NWK_addr_req,           zdpProcessAddrReq },
//  180   { Device_annce,           ZDO_ProcessDeviceAnnce },
//  181 #endif
//  182 #if ( ZG_BUILD_RTR_TYPE )
//  183   // These aren't processed by end devices.
//  184   { Parent_annce,           ZDO_ProcessParentAnnce },
//  185   { Parent_annce_rsp,       ZDO_ProcessParentAnnceRsp },
//  186 #endif
//  187   { IEEE_addr_req,          zdpProcessAddrReq },
//  188   { Node_Desc_req,          ZDO_ProcessNodeDescReq },
//  189   { Power_Desc_req,         ZDO_ProcessPowerDescReq },
//  190   { Simple_Desc_req,        ZDO_ProcessSimpleDescReq },
//  191   { Active_EP_req,          ZDO_ProcessActiveEPReq },
//  192   { Match_Desc_req,         ZDO_ProcessMatchDescReq },
//  193 #if defined ( ZDO_MGMT_NWKDISC_RESPONSE )
//  194   { Mgmt_NWK_Disc_req,      ZDO_ProcessMgmtNwkDiscReq },
//  195 #endif
//  196 #if defined ( ZDO_MGMT_LQI_RESPONSE ) && ( ZG_BUILD_RTR_TYPE )
//  197   { Mgmt_Lqi_req,           ZDO_ProcessMgmtLqiReq },
//  198 #endif
//  199 #if defined ( ZDO_MGMT_RTG_RESPONSE ) && ( ZG_BUILD_RTR_TYPE )
//  200   { Mgmt_Rtg_req,           ZDO_ProcessMgmtRtgReq },
//  201 #endif
//  202 #if defined ( ZDO_MGMT_BIND_RESPONSE ) && defined ( REFLECTOR )
//  203   { Mgmt_Bind_req,          ZDO_ProcessMgmtBindReq },
//  204 #endif
//  205 #if defined ( ZDO_MGMT_JOINDIRECT_RESPONSE ) && ( ZG_BUILD_RTR_TYPE )
//  206   { Mgmt_Direct_Join_req,   ZDO_ProcessMgmtDirectJoinReq },
//  207 #endif
//  208 #if defined ( ZDO_MGMT_LEAVE_RESPONSE )
//  209   { Mgmt_Leave_req,         ZDO_ProcessMgmtLeaveReq },
//  210 #endif
//  211 #if defined ( ZDO_MGMT_PERMIT_JOIN_RESPONSE )  && ( ZG_BUILD_RTR_TYPE )
//  212   { Mgmt_Permit_Join_req,   ZDO_ProcessMgmtPermitJoinReq },
//  213 #endif
//  214 #if defined ( ZDO_USERDESC_RESPONSE )
//  215   { User_Desc_req,          ZDO_ProcessUserDescReq },
//  216 #endif
//  217 #if defined ( ZDO_USERDESCSET_RESPONSE )
//  218   { User_Desc_set,          ZDO_ProcessUserDescSet },
//  219 #endif
//  220 #if defined ( ZDO_SERVERDISC_RESPONSE )
//  221   { Server_Discovery_req,   ZDO_ProcessServerDiscReq },
//  222 #endif
//  223   {0xFFFF, NULL} // Last
//  224 };
//  225 
//  226 /*********************************************************************
//  227  * @fn          fillAndSend
//  228  *
//  229  * @brief       Combined to reduce space
//  230  *
//  231  * @param
//  232  * @param
//  233  *
//  234  * @return      afStatus_t
//  235  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  236 static afStatus_t fillAndSend( uint8 *transSeq, zAddrType_t *addr, cId_t clusterID, byte len )
fillAndSend:
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function fillAndSend
        CODE
//  237 {
        FUNCALL fillAndSend, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL fillAndSend, AF_DataRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 35, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 35, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        MOV       A,#-0xe
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 12
        MOV       A,#-0xc
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
        MOV       ?V0,R2
        MOV       ?V1,R3
        MOV       A,R4
        MOV       R6,A
        MOV       A,R5
        MOV       R7,A
        MOV       ?V4,R1
//  238   afAddrType_t afAddr;
//  239 
//  240   osal_memset( &afAddr, 0, sizeof(afAddrType_t) );
        ; Setup parameters for call to function osal_memset
        MOV       R4,#0xc
        MOV       R5,#0x0
        MOV       R1,#0x0
        MOV       R2,?XSP + 0
        MOV       R3,?XSP + 1
        LCALL     `??osal_memset::?relay`; Banked call to: osal_memset
//  241   ZADDR_TO_AFADDR( addr, afAddr );
        MOV       A,#0x9
        LCALL     ?XSTACK_DISP0_8
        CLR       A
        LCALL     ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_18:
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ?Subroutine45 & 0xFFFF
??CrossCallReturnLabel_69:
        LCALL     ?Subroutine26 & 0xFFFF
//  242 
//  243   *(ZDP_TmpBuf-1) = *transSeq;
??CrossCallReturnLabel_26:
        MOV       DPTR,#ZDP_TmpBuf
        MOVX      A,@DPTR
        ADD       A,#-0x1
        MOV       ?V2,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,#-0x1
        MOV       ?V3,A
        MOV       DPL,?V0
        MOV       DPH,?V1
        MOVX      A,@DPTR
        MOV       DPL,?V2
        MOV       DPH,?V3
        MOVX      @DPTR,A
//  244 
//  245   return AF_DataRequest( &afAddr, &ZDApp_epDesc, clusterID,
//  246                            (uint16)(len+1), (uint8*)(ZDP_TmpBuf-1),
//  247                            transSeq, ZDP_TxOptions,  AF_DEFAULT_RADIUS );
        ; Setup parameters for call to function AF_DataRequest
        MOV       ?V5,#0x1e
        MOV       R0,#?V5
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 27)
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 29)
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 31)
        MOV       A,?V4
        ADD       A,#0x1
        MOV       ?V0,A
        CLR       A
        ADDC      A,#0x0
        MOV       ?V1,A
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 33)
        MOV       A,#0x21
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 35)
        MOV       DPTR,#ZDP_TxOptions
        MOVX      A,@DPTR
        MOV       R1,A
        MOV       R4,#ZDApp_epDesc & 0xff
        MOV       R5,#(ZDApp_epDesc >> 8) & 0xff
        MOV       A,#0x9
        LCALL     ?XSTACK_DISP101_8
        LCALL     `??AF_DataRequest::?relay`; Banked call to: AF_DataRequest
        MOV       A,#0x9
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
        MOV       A,#0xc
        LJMP      ?Subroutine0 & 0xFFFF
//  248 
//  249 }
          CFI EndBlock cfiBlock0
//  250 
//  251 /*********************************************************************
//  252  * @fn          ZDP_SendData
//  253  *
//  254  * @brief       This builds and send a request message that has
//  255  *              NWKAddrOfInterest as its only parameter.
//  256  *
//  257  * @param       dstAddr - destination address
//  258  * @param       cmd - clusterID
//  259  * @param       dataLen - number of bytes of data
//  260  * @param       data - pointer to the data
//  261  * @param       SecurityEnable - Security Options
//  262  *
//  263  * @return      afStatus_t
//  264  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  265 afStatus_t ZDP_SendData( uint8 *TransSeq, zAddrType_t *dstAddr, uint16 cmd,
ZDP_SendData:
          CFI Block cfiBlock1 Using cfiCommon0
          CFI Function ZDP_SendData
        CODE
//  266                         byte len, uint8 *buf, byte SecurityEnable )
//  267 {
        FUNCALL ZDP_SendData, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV       A,R1
        MOV       R7,A
//  268   uint8 *pBuf = ZDP_TmpBuf;
        MOV       DPTR,#ZDP_TmpBuf
        LCALL     ?Subroutine46 & 0xFFFF
//  269   byte cnt = len;
??CrossCallReturnLabel_71:
        MOV       A,R1
        MOV       R6,A
        MOV       A,#0xe
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine131_0 & 0xFFFF
??CrossCallReturnLabel_271:
        SJMP      ??ZDP_SendData_0
//  270 
//  271   while ( cnt-- )
//  272   {
//  273     *pBuf++ = *buf++;
??ZDP_SendData_1:
        MOV       DPL,R0
        MOV       DPH,R1
        MOVX      A,@DPTR
        MOV       DPL,?V2
        MOV       DPH,?V3
        LCALL     ??Subroutine127_0 & 0xFFFF
//  274   }
??CrossCallReturnLabel_255:
        MOV       R0,DPL
        MOV       R1,DPH
        MOV       DPL,?V2
        MOV       DPH,?V3
        INC       DPTR
        MOV       ?V2,DPL
        MOV       ?V3,DPH
??ZDP_SendData_0:
        MOV       A,#-0x1
        ADD       A,R6
        MOV       R6,A
        INC       A
        JNZ       ??ZDP_SendData_1
//  275 
//  276   FillAndSendTxOptions( TransSeq, dstAddr, cmd, len, ((SecurityEnable) ? AF_EN_SECURITY : 0) );
        MOV       A,#0x10
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       DPTR,#ZDP_TxOptions
        JZ        ??ZDP_SendData_2
        MOV       A,#0x40
        SJMP      ??ZDP_SendData_3
??ZDP_SendData_2:
        CLR       A
??ZDP_SendData_3:
        MOVX      @DPTR,A
        ; Setup parameters for call to function fillAndSend
        MOV       A,#0xc
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        MOV       A,R7
        MOV       R1,A
        LCALL     ??Subroutine123_0 & 0xFFFF
??CrossCallReturnLabel_221:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
        MOV       A,R1
        MOV       R1,A
        MOV       DPTR,#ZDP_TxOptions
        CLR       A
        MOVX      @DPTR,A
        LJMP      ??Subroutine101_0 & 0xFFFF
//  277 }
          CFI EndBlock cfiBlock1
//  278 
//  279 /*********************************************************************
//  280  * @fn          ZDP_NWKAddrOfInterestReq
//  281  *
//  282  * @brief       This builds and send a request message that has
//  283  *              NWKAddrOfInterest as its only parameter.
//  284  *
//  285  * @param       dstAddr - destination address
//  286  * @param       nwkAddr - 16 bit address
//  287  * @param       SecurityEnable - Security Options
//  288  *
//  289  * @return      afStatus_t
//  290  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  291 afStatus_t ZDP_NWKAddrOfInterestReq( zAddrType_t *dstAddr, uint16 nwkAddr,
ZDP_NWKAddrOfInterestReq:
          CFI Block cfiBlock2 Using cfiCommon0
          CFI Function ZDP_NWKAddrOfInterestReq
        CODE
//  292                                      byte cmd, byte SecurityEnable )
//  293 {
        FUNCALL ZDP_NWKAddrOfInterestReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
//  294   (void)SecurityEnable;  // Intentionally unreferenced parameter
//  295 
//  296   ZDP_TmpBuf[0] = LO_UINT16( nwkAddr );
        LCALL     ?Subroutine16 & 0xFFFF
//  297   ZDP_TmpBuf[1] = HI_UINT16( nwkAddr );
??CrossCallReturnLabel_14:
        MOVX      @DPTR,A
//  298 
//  299   return fillAndSend( &ZDP_TransID, dstAddr, cmd, 2 );
        ; Setup parameters for call to function fillAndSend
        MOV       A,R1
        MOV       ?V0,A
        MOV       ?V1,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 12)
        MOV       R1,#0x2
        LJMP      ?Subroutine8 & 0xFFFF
//  300 }
          CFI EndBlock cfiBlock2
//  301 
//  302 /*********************************************************************
//  303  * Address Requests
//  304  */
//  305 
//  306 /*********************************************************************
//  307  * @fn          ZDP_NwkAddrReq
//  308  *
//  309  * @brief       This builds and send a NWK_addr_req message.  This
//  310  *              function sends a broadcast message looking for a 16
//  311  *              bit address with a 64 bit address as bait.
//  312  *
//  313  * @param       IEEEAddress - looking for this device
//  314  * @param       SecurityEnable - Security Options
//  315  *
//  316  * @return      afStatus_t
//  317  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  318 afStatus_t ZDP_NwkAddrReq( uint8 *IEEEAddress, byte ReqType,
ZDP_NwkAddrReq:
          CFI Block cfiBlock3 Using cfiCommon0
          CFI Function ZDP_NwkAddrReq
        CODE
//  319                            byte StartIndex, byte SecurityEnable )
//  320 {
        FUNCALL ZDP_NwkAddrReq, sAddrExtCmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_NwkAddrReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_NwkAddrReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 9
        MOV       A,#-0x9
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       A,R2
        MOV       R6,A
        MOV       A,R3
        MOV       R7,A
        MOV       ?V2,R1
        MOV       ?V3,R4
//  321   uint8 *pBuf = ZDP_TmpBuf;
        MOV       DPTR,#ZDP_TmpBuf
        LCALL     ?Subroutine57 & 0xFFFF
//  322   byte len = Z_EXTADDR_LEN + 1 + 1;  // IEEEAddress + ReqType + StartIndex.
//  323   zAddrType_t dstAddr;
//  324 
//  325   (void)SecurityEnable;  // Intentionally unreferenced parameter
//  326 
//  327   if ( osal_ExtAddrEqual( saveExtAddr, IEEEAddress ) == FALSE )
??CrossCallReturnLabel_88:
        MOV       R4,A
        MOV       A,R3
        MOV       R5,A
        MOV       R2,#saveExtAddr & 0xff
        MOV       R3,#(saveExtAddr >> 8) & 0xff
        LCALL     `??sAddrExtCmp::?relay`; Banked call to: sAddrExtCmp
        MOV       A,R1
        JNZ       ??ZDP_NwkAddrReq_0
//  328   {
//  329     dstAddr.addrMode = AddrBroadcast;
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine88 & 0xFFFF
//  330     dstAddr.addr.shortAddr = NWK_BROADCAST_SHORTADDR_DEVRXON;
//  331   }
??CrossCallReturnLabel_137:
        SJMP      ??ZDP_NwkAddrReq_1
//  332   else
//  333   {
//  334     dstAddr.addrMode = Addr16Bit;
??ZDP_NwkAddrReq_0:
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        MOV       A,#0x2
        MOVX      @DPTR,A
//  335     dstAddr.addr.shortAddr = ZDAppNwkAddr.addr.shortAddr;
        MOV       DPTR,#ZDAppNwkAddr
        LCALL     ?Subroutine45 & 0xFFFF
//  336   }
??CrossCallReturnLabel_70:
        MOV       A,R0
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R1
??ZDP_NwkAddrReq_1:
        MOVX      @DPTR,A
//  337 
//  338   pBuf = osal_cpyExtAddr( pBuf, IEEEAddress );
        ; Setup parameters for call to function sAddrExtCpy
        MOV       A,R6
        MOV       R4,A
        MOV       A,R7
        MOV       R5,A
        MOV       R2,?V0
        MOV       R3,?V1
        LCALL     ?Subroutine71 & 0xFFFF
//  339 
//  340   *pBuf++ = ReqType;
??CrossCallReturnLabel_115:
        MOV       A,?V2
        MOVX      @DPTR,A
//  341   *pBuf++ = StartIndex;
        INC       DPTR
        MOV       A,?V3
        MOVX      @DPTR,A
//  342 
//  343   return fillAndSend( &ZDP_TransID, &dstAddr, NWK_addr_req, len );
        ; Setup parameters for call to function fillAndSend
        CLR       A
        MOV       ?V0,A
        MOV       ?V1,A
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       R1,#0xa
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP102_8
          CFI EndBlock cfiBlock3
        REQUIRE ?Subroutine9
        ; // Fall through to label ?Subroutine9
//  344 }

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine9:
          CFI Block cfiBlock4 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 23)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        LCALL     ??Subroutine122_0 & 0xFFFF
??CrossCallReturnLabel_214:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       A,#0x9
        SJMP      ??Subroutine100_0
          CFI EndBlock cfiBlock4

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine45:
          CFI Block cfiCond5 Using cfiCommon0
          CFI Function fillAndSend
          CFI Conditional ??CrossCallReturnLabel_69
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond6 Using cfiCommon0
          CFI (cfiCond6) Function ZDP_NwkAddrReq
          CFI (cfiCond6) Conditional ??CrossCallReturnLabel_70
          CFI (cfiCond6) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond6) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond6) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond6) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond6) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond6) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond6) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond6) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond6) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond6) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond6) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond6) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond6) CFA_SP SP+-2
          CFI (cfiCond6) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker7 Using cfiCommon1
          CFI (cfiPicker7) NoFunction
          CFI (cfiPicker7) Picker
        LCALL     ??Subroutine129_0 & 0xFFFF
??CrossCallReturnLabel_285:
        MOV       R1,A
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        RET
          CFI EndBlock cfiCond5
          CFI EndBlock cfiCond6
          CFI EndBlock cfiPicker7

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine1:
          CFI Block cfiBlock8 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       ?V3,#0x0
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        MOV       R1,#0x9
          CFI EndBlock cfiBlock8
        REQUIRE ??Subroutine99_0
        ; // Fall through to label ??Subroutine99_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine99_0:
          CFI Block cfiBlock9 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        LCALL     ?Subroutine67 & 0xFFFF
??CrossCallReturnLabel_211:
          CFI EndBlock cfiBlock9
        REQUIRE ??Subroutine100_0
        ; // Fall through to label ??Subroutine100_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine100_0:
          CFI Block cfiBlock10 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 21)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL     ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock10
        REQUIRE ??Subroutine101_0
        ; // Fall through to label ??Subroutine101_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine101_0:
          CFI Block cfiBlock11 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       R7,#0x4
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock11
//  345 
//  346 /*********************************************************************
//  347  * @fn          ZDP_IEEEAddrReq
//  348  *
//  349  * @brief       This builds and send a IEEE_addr_req message.  This
//  350  *              function sends a unicast message looking for a 64
//  351  *              bit IEEE address with a 16 bit address as bait.
//  352  *
//  353  * @param       ReqType - ZDP_IEEEADDR_REQTYPE_SINGLE or
//  354  *                        ZDP_IEEEADDR_REQTYPE_EXTENDED
//  355  * @param       SecurityEnable - Security Options
//  356  *
//  357  * @return      afStatus_t
//  358  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  359 afStatus_t ZDP_IEEEAddrReq( uint16 shortAddr, byte ReqType,
ZDP_IEEEAddrReq:
          CFI Block cfiBlock12 Using cfiCommon0
          CFI Function ZDP_IEEEAddrReq
        CODE
//  360                             byte StartIndex, byte SecurityEnable )
//  361 {
        FUNCALL ZDP_IEEEAddrReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 9
        MOV       A,#-0x9
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
        LCALL     ?Subroutine55 & 0xFFFF
//  362   uint8 *pBuf = ZDP_TmpBuf;
//  363   byte len = 2 + 1 + 1;  // shortAddr + ReqType + StartIndex.
//  364   zAddrType_t dstAddr;
//  365 
//  366   (void)SecurityEnable;  // Intentionally unreferenced parameter
//  367 
//  368   dstAddr.addrMode = (afAddrMode_t)Addr16Bit;
??CrossCallReturnLabel_267:
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        MOV       A,#0x2
        MOVX      @DPTR,A
//  369   dstAddr.addr.shortAddr = shortAddr;
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOV       A,R2
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R3
        MOVX      @DPTR,A
//  370 
//  371   *pBuf++ = LO_UINT16( shortAddr );
        MOV       A,R2
        MOV       DPL,R0
        MOV       DPH,R1
        MOVX      @DPTR,A
//  372   *pBuf++ = HI_UINT16( shortAddr );
        MOV       A,R3
        LCALL     ?Subroutine31 & 0xFFFF
//  373 
//  374   *pBuf++ = ReqType;
??CrossCallReturnLabel_39:
        MOVX      @DPTR,A
//  375   *pBuf++ = StartIndex;
        MOV       A,R4
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
//  376 
//  377   return fillAndSend( &ZDP_TransID, &dstAddr, IEEE_addr_req, len );
        ; Setup parameters for call to function fillAndSend
        MOV       ?V0,#0x1
        MOV       ?V1,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       R1,#0x4
        LJMP      ?Subroutine2 & 0xFFFF
//  378 }
          CFI EndBlock cfiBlock12
//  379 
//  380 /*********************************************************************
//  381  * @fn          ZDP_MatchDescReq
//  382  *
//  383  * @brief       This builds and send a Match_Desc_req message.  This
//  384  *              function sends a broadcast or unicast message
//  385  *              requesting the list of endpoint/interfaces that
//  386  *              match profile ID and cluster IDs.
//  387  *
//  388  * @param       dstAddr - destination address
//  389  * @param       nwkAddr - network address of interest
//  390  * @param       ProfileID - Profile ID
//  391  * @param       NumInClusters - number of input clusters
//  392  * @param       InClusterList - input cluster ID list
//  393  * @param       NumOutClusters - number of output clusters
//  394  * @param       OutClusterList - output cluster ID list
//  395  * @param       SecurityEnable - Security Options
//  396  *
//  397  * @return      afStatus_t
//  398  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  399 afStatus_t ZDP_MatchDescReq( zAddrType_t *dstAddr, uint16 nwkAddr,
ZDP_MatchDescReq:
          CFI Block cfiBlock13 Using cfiCommon0
          CFI Function ZDP_MatchDescReq
        CODE
//  400                                 uint16 ProfileID,
//  401                                 byte NumInClusters, cId_t *InClusterList,
//  402                                 byte NumOutClusters, cId_t *OutClusterList,
//  403                                 byte SecurityEnable )
//  404 {
        FUNCALL ZDP_MatchDescReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        MOV       A,#-0xe
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
        LCALL     ?Subroutine55 & 0xFFFF
//  405   uint8 *pBuf = ZDP_TmpBuf;
??CrossCallReturnLabel_268:
        MOV       A,#0x12
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       ?V0,A
//  406   // nwkAddr+ProfileID+NumInClusters+NumOutClusters.
//  407   byte i, len = 2 + 2 + 1 + 1;  // nwkAddr+ProfileID+NumInClusters+NumOutClusters.
//  408 
//  409   (void)SecurityEnable;  // Intentionally unreferenced parameter
//  410 
//  411   len += (NumInClusters + NumOutClusters) * sizeof(uint16);
        MOV       A,R6
        ADD       A,?V0
        CLR       C
        RLC       A
        ADD       A,#0x6
        MOV       R7,A
//  412 
//  413   if ( len >= ZDP_BUF_SZ-1 )
        CLR       C
        SUBB      A,#0x4f
        JC        ??ZDP_MatchDescReq_0
//  414   {
//  415     return afStatus_MEM_FAIL;
        MOV       R1,#0x10
        LJMP      ??ZDP_MatchDescReq_1 & 0xFFFF
//  416   }
//  417 
//  418   // The spec changed in Zigbee 2007 (2.4.3.1.7.1) to not allow sending
//  419   // this command to 0xFFFF.  So, here we will filter this and replace
//  420   // with 0xFFFD to only send to devices with RX ON.  This includes the
//  421   // network address of interest.
//  422   if ( ((dstAddr->addrMode == AddrBroadcast) || (dstAddr->addrMode == Addr16Bit))
//  423       && (dstAddr->addr.shortAddr == NWK_BROADCAST_SHORTADDR_DEVALL) )
??ZDP_MatchDescReq_0:
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V1,A
        MOV       A,#0xf
        XRL       A,?V1
        JZ        ??ZDP_MatchDescReq_2
        MOV       A,#0x2
        XRL       A,?V1
        JNZ       ??ZDP_MatchDescReq_3
??ZDP_MatchDescReq_2:
        MOV       DPL,R2
        MOV       DPH,R3
        MOVX      A,@DPTR
        CPL       A
        JNZ       ??ZDP_MatchDescReq_4
        INC       DPTR
        MOVX      A,@DPTR
        CPL       A
??ZDP_MatchDescReq_4:
        JNZ       ??ZDP_MatchDescReq_3
//  424   {
//  425     dstAddr->addr.shortAddr = NWK_BROADCAST_SHORTADDR_DEVRXON;
        MOV       DPL,R2
        MOV       DPH,R3
        MOV       A,#-0x3
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,#-0x1
        MOVX      @DPTR,A
//  426   }
//  427   if ( nwkAddr == NWK_BROADCAST_SHORTADDR_DEVALL )
??ZDP_MatchDescReq_3:
        MOV       A,#-0x1
        XRL       A,R4
        JNZ       ??ZDP_MatchDescReq_5
        MOV       A,#-0x1
        XRL       A,R5
??ZDP_MatchDescReq_5:
        JNZ       ??ZDP_MatchDescReq_6
//  428   {
//  429     nwkAddr = NWK_BROADCAST_SHORTADDR_DEVRXON;
        MOV       R4,#-0x3
        MOV       R5,#-0x1
//  430   }
//  431 
//  432   *pBuf++ = LO_UINT16( nwkAddr );   // NWKAddrOfInterest
??ZDP_MatchDescReq_6:
        MOV       A,R4
        MOV       DPL,R0
        MOV       DPH,R1
        MOVX      @DPTR,A
//  433   *pBuf++ = HI_UINT16( nwkAddr );
        MOV       A,R5
        INC       DPTR
        MOVX      @DPTR,A
        MOV       A,#0xe
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine40 & 0xFFFF
//  434 
//  435   *pBuf++ = LO_UINT16( ProfileID );   // Profile ID
??CrossCallReturnLabel_57:
        MOV       A,R4
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        LCALL     ?Subroutine33 & 0xFFFF
//  436   *pBuf++ = HI_UINT16( ProfileID );
??CrossCallReturnLabel_43:
        LCALL     ?Subroutine31 & 0xFFFF
//  437 
//  438   *pBuf++ = NumInClusters; // Input cluster list
??CrossCallReturnLabel_40:
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
        MOV       A,R0
        ADD       A,#0x5
        MOV       R0,A
        JNC       ??ZDP_MatchDescReq_7
        INC       R1
//  439   if ( NumInClusters )
??ZDP_MatchDescReq_7:
        MOV       A,R6
        JZ        ??ZDP_MatchDescReq_8
//  440   {
//  441     for (i=0; i<NumInClusters; ++i)  {
        MOV       ?V1,#0x0
        MOV       A,#0x10
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine40 & 0xFFFF
//  442       *pBuf++ = LO_UINT16( InClusterList[i] );
??CrossCallReturnLabel_58:
        LCALL     ?Subroutine10 & 0xFFFF
//  443       *pBuf++ = HI_UINT16( InClusterList[i] );
//  444     }
??CrossCallReturnLabel_0:
        JNC       ??ZDP_MatchDescReq_9
        INC       R1
??ZDP_MatchDescReq_9:
        INC       ?V1
        MOV       A,?V1
        CLR       C
        SUBB      A,R6
        JC        ??CrossCallReturnLabel_58
//  445   }
//  446 
//  447   *pBuf++ = NumOutClusters; // Output cluster list
??ZDP_MatchDescReq_8:
        MOV       DPL,R0
        MOV       DPH,R1
        MOV       A,?V0
        MOVX      @DPTR,A
        INC       DPTR
        MOV       R0,DPL
        MOV       R1,DPH
//  448   if ( NumOutClusters )
        JZ        ??ZDP_MatchDescReq_10
//  449   {
//  450     for (i=0; i<NumOutClusters; ++i)  {
        MOV       ?V1,#0x0
        MOV       A,#0x13
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine40 & 0xFFFF
//  451       *pBuf++ = LO_UINT16( OutClusterList[i] );
??CrossCallReturnLabel_59:
        LCALL     ?Subroutine10 & 0xFFFF
//  452       *pBuf++ = HI_UINT16( OutClusterList[i] );
//  453     }
??CrossCallReturnLabel_1:
        JNC       ??ZDP_MatchDescReq_11
        INC       R1
??ZDP_MatchDescReq_11:
        INC       ?V1
        MOV       A,?V1
        CLR       C
        SUBB      A,?V0
        JC        ??CrossCallReturnLabel_59
//  454   }
//  455 
//  456   return fillAndSend( &ZDP_TransID, dstAddr, Match_Desc_req, len );
??ZDP_MatchDescReq_10:
        ; Setup parameters for call to function fillAndSend
        MOV       ?V0,#0x6
        MOV       ?V1,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 16)
        MOV       A,R7
        MOV       R1,A
        MOV       A,R2
        MOV       R4,A
        MOV       A,R3
        LCALL     ??Subroutine121_0 & 0xFFFF
??CrossCallReturnLabel_213:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 14)
??ZDP_MatchDescReq_1:
        SJMP      ??Subroutine102_0
//  457 }
          CFI EndBlock cfiBlock13

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine31:
          CFI Block cfiCond14 Using cfiCommon0
          CFI Function ZDP_IEEEAddrReq
          CFI Conditional ??CrossCallReturnLabel_39
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond15 Using cfiCommon0
          CFI (cfiCond15) Function ZDP_MatchDescReq
          CFI (cfiCond15) Conditional ??CrossCallReturnLabel_40
          CFI (cfiCond15) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond15) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond15) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond15) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond15) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond15) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond15) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond15) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond15) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond15) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond15) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond15) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond15) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond15) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond15) CFA_SP SP+-2
          CFI (cfiCond15) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker16 Using cfiCommon1
          CFI (cfiPicker16) NoFunction
          CFI (cfiPicker16) Picker
        INC       DPTR
        MOVX      @DPTR,A
        MOV       A,R6
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond14
          CFI EndBlock cfiCond15
          CFI EndBlock cfiPicker16

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine10:
          CFI Block cfiCond17 Using cfiCommon0
          CFI Function ZDP_MatchDescReq
          CFI Conditional ??CrossCallReturnLabel_0
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond18 Using cfiCommon0
          CFI (cfiCond18) Function ZDP_MatchDescReq
          CFI (cfiCond18) Conditional ??CrossCallReturnLabel_1
          CFI (cfiCond18) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond18) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond18) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond18) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond18) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond18) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond18) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond18) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond18) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond18) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond18) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond18) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond18) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond18) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond18) CFA_SP SP+-2
          CFI (cfiCond18) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker19 Using cfiCommon1
          CFI (cfiPicker19) NoFunction
          CFI (cfiPicker19) Picker
        MOV       A,?V1
        LCALL     ?Subroutine96 & 0xFFFF
??CrossCallReturnLabel_152:
        MOV       A,R4
        ADD       A,?V2
        MOV       ?V2,A
        MOV       A,R5
        ADDC      A,?V3
        MOV       ?V3,A
        MOV       DPL,?V2
        LCALL     ?Subroutine80 & 0xFFFF
??CrossCallReturnLabel_198:
        MOVX      @DPTR,A
        MOV       DPL,?V2
        MOV       DPH,?V3
        LCALL     ?Subroutine77 & 0xFFFF
??CrossCallReturnLabel_127:
        RET
          CFI EndBlock cfiCond17
          CFI EndBlock cfiCond18
          CFI EndBlock cfiPicker19

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine0:
          CFI Block cfiBlock20 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 26)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL     ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock20
        REQUIRE ??Subroutine102_0
        ; // Fall through to label ??Subroutine102_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine102_0:
          CFI Block cfiBlock21 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       R7,#0x6
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock21
//  458 
//  459 /*********************************************************************
//  460  * @fn          ZDP_SimpleDescReq
//  461  *
//  462  * @brief       This builds and send a NWK_Simple_Desc_req
//  463  *              message.  This function sends unicast message to the
//  464  *              destination device.
//  465  *
//  466  * @param       dstAddr - destination address
//  467  * @param       nwkAddr - 16 bit address
//  468  * @param       epIntf - endpoint/interface
//  469  * @param       SecurityEnable - Security Options
//  470  *
//  471  * @return      afStatus_t
//  472  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  473 afStatus_t ZDP_SimpleDescReq( zAddrType_t *dstAddr, uint16 nwkAddr,
ZDP_SimpleDescReq:
          CFI Block cfiBlock22 Using cfiCommon0
          CFI Function ZDP_SimpleDescReq
        CODE
//  474                                     byte endPoint, byte SecurityEnable )
//  475 
//  476 {
        FUNCALL ZDP_SimpleDescReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
//  477   (void)SecurityEnable;  // Intentionally unreferenced parameter
//  478 
//  479   ZDP_TmpBuf[0] = LO_UINT16( nwkAddr );
        LCALL     ?Subroutine16 & 0xFFFF
//  480   ZDP_TmpBuf[1] = HI_UINT16( nwkAddr );
??CrossCallReturnLabel_15:
        LCALL     ?Subroutine12 & 0xFFFF
//  481   ZDP_TmpBuf[2] = endPoint;
//  482 
//  483   return fillAndSend( &ZDP_TransID, dstAddr, Simple_Desc_req, 3 );
??CrossCallReturnLabel_4:
        ; Setup parameters for call to function fillAndSend
        MOV       ?V0,#0x4
        MOV       ?V1,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 12)
        MOV       R1,#0x3
        LJMP      ?Subroutine8 & 0xFFFF
//  484 }
          CFI EndBlock cfiBlock22

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine16:
          CFI Block cfiCond23 Using cfiCommon0
          CFI Function ZDP_NWKAddrOfInterestReq
          CFI Conditional ??CrossCallReturnLabel_14
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond24 Using cfiCommon0
          CFI (cfiCond24) Function ZDP_SimpleDescReq
          CFI (cfiCond24) Conditional ??CrossCallReturnLabel_15
          CFI (cfiCond24) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond24) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond24) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond24) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond24) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond24) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond24) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond24) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond24) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond24) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond24) CFA_SP SP+-2
          CFI (cfiCond24) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker25 Using cfiCommon1
          CFI (cfiPicker25) NoFunction
          CFI (cfiPicker25) Picker
        MOV       DPTR,#ZDP_TmpBuf
        LCALL     ?Subroutine83 & 0xFFFF
??CrossCallReturnLabel_182:
        MOV       A,R4
        LCALL     ?Subroutine76 & 0xFFFF
??CrossCallReturnLabel_124:
        MOV       A,R5
        RET
          CFI EndBlock cfiCond23
          CFI EndBlock cfiCond24
          CFI EndBlock cfiPicker25

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine2:
          CFI Block cfiBlock26 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 21)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP102_8
        LCALL     ??Subroutine122_0 & 0xFFFF
??CrossCallReturnLabel_215:
        LCALL     ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock26
        REQUIRE ??Subroutine103_0
        ; // Fall through to label ??Subroutine103_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine103_0:
          CFI Block cfiBlock27 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 19)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       A,#0x9
          CFI EndBlock cfiBlock27
        REQUIRE ??Subroutine104_0
        ; // Fall through to label ??Subroutine104_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine104_0:
          CFI Block cfiBlock28 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Valid
        MOV       R7,#0x2
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock28
//  485 
//  486 /*********************************************************************
//  487  * @fn          ZDP_UserDescSet
//  488  *
//  489  * @brief       This builds and send a User_Desc_set message to set
//  490  *              the user descriptor.  This function sends unicast
//  491  *              message to the destination device.
//  492  *
//  493  * @param       dstAddr - destination address
//  494  * @param       nwkAddr - 16 bit address
//  495  * @param       UserDescriptor - user descriptor
//  496  * @param       SecurityEnable - Security Options
//  497  *
//  498  * @return      afStatus_t
//  499  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  500 afStatus_t ZDP_UserDescSet( zAddrType_t *dstAddr, uint16 nwkAddr,
ZDP_UserDescSet:
          CFI Block cfiBlock29 Using cfiCommon0
          CFI Function ZDP_UserDescSet
        CODE
//  501                           UserDescriptorFormat_t *UserDescriptor,
//  502                           byte SecurityEnable )
//  503 {
        FUNCALL ZDP_UserDescSet, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_UserDescSet, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_UserDescSet, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        MOV       A,#-0xf
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
        ; Saved register size: 15
        ; Auto size: 0
        LCALL     ?Subroutine84 & 0xFFFF
//  504   uint8 *pBuf = ZDP_TmpBuf;
??CrossCallReturnLabel_280:
        MOV       ?V2,R0
        MOV       ?V3,A
        MOV       A,#0xf
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine36 & 0xFFFF
//  505   byte len = (UserDescriptor->len < AF_MAX_USER_DESCRIPTOR_LEN) ?
//  506               UserDescriptor->len : AF_MAX_USER_DESCRIPTOR_LEN;
??CrossCallReturnLabel_47:
        MOV       R2,A
        CLR       C
        SUBB      A,#0x10
        JNC       ??ZDP_UserDescSet_0
        MOV       ?V0,R2
        SJMP      ??ZDP_UserDescSet_1
??ZDP_UserDescSet_0:
        MOV       ?V0,#0x10
//  507   byte addrLen = 2;
//  508 
//  509   (void)SecurityEnable;  // Intentionally unreferenced parameter
//  510 
//  511   *pBuf++ = LO_UINT16( nwkAddr );
??ZDP_UserDescSet_1:
        MOV       A,R4
        MOV       DPL,?V2
        MOV       DPH,?V3
        MOVX      @DPTR,A
//  512   *pBuf++ = HI_UINT16( nwkAddr );
        MOV       A,R5
        INC       DPTR
        LCALL     ?Subroutine28 & 0xFFFF
//  513 
//  514   *pBuf++ = len;
??CrossCallReturnLabel_35:
        MOV       A,?V0
        LCALL     ??Subroutine127_0 & 0xFFFF
//  515   addrLen = 3;
//  516 
//  517   pBuf = osal_memcpy( pBuf, UserDescriptor->desc, len );
??CrossCallReturnLabel_254:
        MOV       R1,DPL
        MOV       R2,DPH
        MOV       ?V4,R1
        MOV       ?V5,R2
        MOV       ?V6,#0x0
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 18)
        MOV       R4,?V0
        MOV       R5,#0x0
        MOV       A,?V2
        ADD       A,#0x3
        MOV       R2,A
        CLR       A
        ADDC      A,?V3
        MOV       R3,A
        LCALL     ??Subroutine112_0 & 0xFFFF
??CrossCallReturnLabel_172:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
//  518   osal_memset( pBuf, AF_USER_DESCRIPTOR_FILL, AF_MAX_USER_DESCRIPTOR_LEN-len );
        ; Setup parameters for call to function osal_memset
        MOV       R0,?V0
        MOV       A,#0x10
        CLR       C
        SUBB      A,R0
        MOV       R4,A
        SUBB      A,0xE0 /* A   */
        MOV       R5,A
        MOV       R1,#0x20
        LCALL     `??osal_memset::?relay`; Banked call to: osal_memset
//  519 
//  520   return fillAndSend( &ZDP_TransID, dstAddr, User_Desc_set, (AF_MAX_USER_DESCRIPTOR_LEN + addrLen) );
        ; Setup parameters for call to function fillAndSend
        MOV       ?V2,#0x14
        MOV       ?V3,#0x0
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 17)
        MOV       R1,#0x13
        LCALL     ?Subroutine67 & 0xFFFF
??CrossCallReturnLabel_212:
          CFI EndBlock cfiBlock29
        REQUIRE ?Subroutine3
        ; // Fall through to label ?Subroutine3
//  521 }

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine3:
          CFI Block cfiBlock30 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 17)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL     ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock30
        REQUIRE ??Subroutine105_0
        ; // Fall through to label ??Subroutine105_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine105_0:
          CFI Block cfiBlock31 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       R7,#0x7
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock31
//  522 
//  523 /*********************************************************************
//  524  * @fn          ZDP_ServerDiscReq
//  525  *
//  526  * @brief       Build and send a Server_Discovery_req request message.
//  527  *
//  528  * @param       serverMask - 16-bit bit-mask of server services being sought.
//  529  * @param       SecurityEnable - Security Options
//  530  *
//  531  * @return      afStatus_t
//  532  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  533 afStatus_t ZDP_ServerDiscReq( uint16 serverMask, byte SecurityEnable )
ZDP_ServerDiscReq:
          CFI Block cfiBlock32 Using cfiCommon0
          CFI Function ZDP_ServerDiscReq
        CODE
//  534 {
        FUNCALL ZDP_ServerDiscReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 9
        MOV       A,#-0x9
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
        LCALL     ?Subroutine55 & 0xFFFF
//  535   uint8 *pBuf = ZDP_TmpBuf;
//  536   zAddrType_t dstAddr;
//  537 
//  538   dstAddr.addrMode = AddrBroadcast;
??CrossCallReturnLabel_269:
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine17 & 0xFFFF
//  539   dstAddr.addr.shortAddr = NWK_BROADCAST_SHORTADDR_DEVRXON;
//  540 
//  541   *pBuf++ = LO_UINT16( serverMask );
??CrossCallReturnLabel_16:
        MOV       A,R2
        MOV       DPL,R0
        MOV       DPH,R1
        MOVX      @DPTR,A
//  542   *pBuf = HI_UINT16( serverMask );
        MOV       A,R3
        INC       DPTR
        MOVX      @DPTR,A
//  543 
//  544   FillAndSendTxOptions( &ZDP_TransID, &dstAddr, Server_Discovery_req, 2,
//  545              ((SecurityEnable) ? AF_EN_SECURITY : AF_TX_OPTIONS_NONE) );
        MOV       A,R6
        MOV       DPTR,#ZDP_TxOptions
        JZ        ??ZDP_ServerDiscReq_0
        MOV       A,#0x40
        SJMP      ??ZDP_ServerDiscReq_1
??ZDP_ServerDiscReq_0:
        CLR       A
??ZDP_ServerDiscReq_1:
        MOVX      @DPTR,A
        ; Setup parameters for call to function fillAndSend
        MOV       ?V0,#0x15
        MOV       ?V1,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       R1,#0x2
        MOV       A,R1
        LCALL     ?XSTACK_DISP102_8
        LCALL     ??Subroutine122_0 & 0xFFFF
??CrossCallReturnLabel_216:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
        MOV       A,R1
        MOV       R1,A
        MOV       DPTR,#ZDP_TxOptions
        CLR       A
        MOVX      @DPTR,A
        LJMP      ??Subroutine103_0 & 0xFFFF
//  546 }
          CFI EndBlock cfiBlock32
//  547 
//  548 /*********************************************************************
//  549  * @fn          ZDP_DeviceAnnce
//  550  *
//  551  * @brief       This builds and send a Device_Annce message.  This
//  552  *              function sends a broadcast message.
//  553  *
//  554  * @param       nwkAddr - 16 bit address of the device
//  555  * @param       IEEEAddr - 64 bit address of the device
//  556  * @param       capabilities - device capabilities.  This field is only
//  557  *                 sent for v1.1 networks.
//  558  * @param       SecurityEnable - Security Options
//  559  *
//  560  * @return      afStatus_t
//  561  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  562 afStatus_t ZDP_DeviceAnnce( uint16 nwkAddr, uint8 *IEEEAddr,
ZDP_DeviceAnnce:
          CFI Block cfiBlock33 Using cfiCommon0
          CFI Function ZDP_DeviceAnnce
        CODE
//  563                               byte capabilities, byte SecurityEnable )
//  564 {
        FUNCALL ZDP_DeviceAnnce, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 19, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_DeviceAnnce, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 9
        MOV       A,#-0x9
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
        MOV       A,R1
        MOV       R6,A
//  565   zAddrType_t dstAddr;
//  566   uint8 len;
//  567 
//  568   (void)SecurityEnable;  // Intentionally unreferenced parameter
//  569 
//  570   dstAddr.addrMode = (afAddrMode_t)AddrBroadcast;
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine17 & 0xFFFF
//  571   dstAddr.addr.shortAddr = NWK_BROADCAST_SHORTADDR_DEVRXON;
//  572 
//  573   ZDP_TmpBuf[0] = LO_UINT16( nwkAddr );
??CrossCallReturnLabel_17:
        LCALL     ?Subroutine41 & 0xFFFF
??CrossCallReturnLabel_177:
        MOV       A,R2
        LCALL     ?Subroutine19 & 0xFFFF
//  574   ZDP_TmpBuf[1] = HI_UINT16( nwkAddr );
??CrossCallReturnLabel_20:
        MOV       A,R3
        MOVX      @DPTR,A
//  575   osal_cpyExtAddr( &ZDP_TmpBuf[2], IEEEAddr );
        ; Setup parameters for call to function sAddrExtCpy
        MOV       DPTR,#ZDP_TmpBuf
        MOVX      A,@DPTR
        ADD       A,#0x2
        MOV       R2,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,#0x0
        MOV       R3,A
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
//  576   len = 2 + Z_EXTADDR_LEN;
//  577 
//  578   ZDP_TmpBuf[10] = capabilities;
        LCALL     ??Subroutine128_0 & 0xFFFF
??CrossCallReturnLabel_286:
        XCH       A,R0
        ADD       A,#0xa
        MOV       DPL,A
        CLR       A
        ADDC      A,R0
        MOV       DPH,A
        MOV       A,R6
        MOVX      @DPTR,A
//  579   len++;
//  580 
//  581   return fillAndSend( &ZDP_TransID, &dstAddr, Device_annce, len );
        ; Setup parameters for call to function fillAndSend
        MOV       ?V0,#0x13
        MOV       ?V1,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       R1,#0xb
        LJMP      ?Subroutine2 & 0xFFFF
//  582 }
          CFI EndBlock cfiBlock33

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine17:
          CFI Block cfiCond34 Using cfiCommon0
          CFI Function ZDP_ServerDiscReq
          CFI Conditional ??CrossCallReturnLabel_16
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond35 Using cfiCommon0
          CFI (cfiCond35) Function ZDP_DeviceAnnce
          CFI (cfiCond35) Conditional ??CrossCallReturnLabel_17
          CFI (cfiCond35) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond35) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond35) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond35) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond35) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond35) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond35) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond35) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond35) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond35) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond35) CFA_SP SP+-2
          CFI (cfiCond35) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker36 Using cfiCommon1
          CFI (cfiPicker36) NoFunction
          CFI (cfiPicker36) Picker
        LCALL     ?Subroutine88 & 0xFFFF
??CrossCallReturnLabel_138:
        MOVX      @DPTR,A
        RET
          CFI EndBlock cfiCond34
          CFI EndBlock cfiCond35
          CFI EndBlock cfiPicker36

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine88:
          CFI Block cfiCond37 Using cfiCommon0
          CFI Function ZDP_NwkAddrReq
          CFI Conditional ??CrossCallReturnLabel_137
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond38 Using cfiCommon0
          CFI (cfiCond38) Function ZDP_ServerDiscReq
          CFI (cfiCond38) Conditional ??CrossCallReturnLabel_138, ??CrossCallReturnLabel_16
          CFI (cfiCond38) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond38) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond38) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond38) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond38) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond38) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond38) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond38) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond38) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond38) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond38) CFA_SP SP+-4
          CFI (cfiCond38) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond39 Using cfiCommon0
          CFI (cfiCond39) Function ZDP_DeviceAnnce
          CFI (cfiCond39) Conditional ??CrossCallReturnLabel_138, ??CrossCallReturnLabel_17
          CFI (cfiCond39) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond39) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond39) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond39) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond39) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond39) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond39) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond39) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond39) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond39) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond39) CFA_SP SP+-4
          CFI (cfiCond39) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker40 Using cfiCommon1
          CFI (cfiPicker40) NoFunction
          CFI (cfiPicker40) Picker
        MOV       A,#0xf
        MOVX      @DPTR,A
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOV       A,#-0x3
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,#-0x1
        RET
          CFI EndBlock cfiCond37
          CFI EndBlock cfiCond38
          CFI EndBlock cfiCond39
          CFI EndBlock cfiPicker40
//  583 
//  584 /*********************************************************************
//  585  * @fn          ZDP_ParentAnnce
//  586  *
//  587  * @brief       This builds and send a Parent_Annce and Parent_Annce_Rsp
//  588  *              messages, it will depend on the clusterID parameter.
//  589  *
//  590  * @param       TransSeq - ZDP Transaction Sequence Number
//  591  * @param       dstAddr - destination address
//  592  * @param       numberOfChildren - 8 bit number of children
//  593  * @param       childInfo - list of children information (ExtAddr and Age)
//  594  * @param       clusterID - Parent_annce or Parent_annce_rsp
//  595  * @param       SecurityEnable - Security Options
//  596  *
//  597  * @return      afStatus_t
//  598  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  599 afStatus_t ZDP_ParentAnnce( uint8 *TransSeq,
ZDP_ParentAnnce:
          CFI Block cfiBlock41 Using cfiCommon0
          CFI Function ZDP_ParentAnnce
        CODE
//  600                             zAddrType_t *dstAddr,
//  601                             uint8 numberOfChildren,
//  602                             uint8 *childInfo,
//  603                             cId_t clusterID,
//  604                             uint8 SecurityEnable )
//  605 {
        FUNCALL ZDP_ParentAnnce, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_ParentAnnce, osal_buffer_uint32
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_ParentAnnce, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V10
        REQUIRE ?V11
        MOV       A,#-0x14
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
        ; Saved register size: 20
        ; Auto size: 0
        MOV       ?V2,R2
        MOV       ?V3,R3
        MOV       A,R4
        MOV       R6,A
        MOV       A,R5
        MOV       R7,A
        MOV       ?V8,R1
//  606   uint8 *pBuf = ZDP_TmpBuf;
        LCALL     ?Subroutine51 & 0xFFFF
//  607   ZDO_ChildInfo_t *pChildInfo;
//  608   uint8 i, len;
//  609 
//  610   (void)SecurityEnable;  // Intentionally unreferenced parameter
//  611 
//  612   // NumberOfChildren + ( numberOfChildren * ChildInfo).
//  613   len = 1 + ( numberOfChildren * sizeof(ZDO_ChildInfo_t) );
??CrossCallReturnLabel_264:
        MOV       B,#0xc
        MOV       A,R1
        MUL       AB
        INC       A
        MOV       ?V6,A
//  614 
//  615   if ( len >= ZDP_BUF_SZ-1 )
        SUBB      A,#0x4f
        JC        ??ZDP_ParentAnnce_0
//  616   {
//  617     return afStatus_MEM_FAIL;
        MOV       R1,#0x10
        LJMP      ??ZDP_ParentAnnce_1 & 0xFFFF
//  618   }
//  619 
//  620   pChildInfo = (ZDO_ChildInfo_t *)childInfo;
//  621 
//  622   if ( dstAddr->addrMode == AddrBroadcast )
??ZDP_ParentAnnce_0:
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,#0xf
        JNZ       ??ZDP_ParentAnnce_2
//  623   {
//  624     // Make sure is sent to 0xFFFC
//  625     dstAddr->addr.shortAddr = NWK_BROADCAST_SHORTADDR_DEVZCZR;
        MOV       DPL,R4
        MOV       DPH,R5
        MOV       A,#-0x4
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,#-0x1
        MOVX      @DPTR,A
//  626   }
//  627 
//  628   *pBuf++ = numberOfChildren;
??ZDP_ParentAnnce_2:
        MOV       DPL,R2
        MOV       DPH,R3
        MOV       A,R1
        LCALL     ??Subroutine106_0 & 0xFFFF
//  629 
//  630   for ( i = 0; i < numberOfChildren; i++ )
??CrossCallReturnLabel_153:
        MOV       ?V7,#0x0
        MOV       A,#0x14
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine58 & 0xFFFF
??CrossCallReturnLabel_90:
        SJMP      ??ZDP_ParentAnnce_3
//  631   {
//  632     pBuf = osal_cpyExtAddr( pBuf, pChildInfo[i].extAddr );
??ZDP_ParentAnnce_4:
        MOV       A,?V7
        MOV       B,#0xc
        MUL       AB
        MOV       R0,A
        MOV       R1,B
        MOV       A,?V0
        ADD       A,R0
        MOV       ?V4,A
        MOV       A,?V1
        ADDC      A,R1
        MOV       ?V5,A
        ; Setup parameters for call to function sAddrExtCpy
        MOV       R4,?V4
        MOV       R5,A
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
//  633 
//  634     pBuf = osal_buffer_uint32( pBuf, pChildInfo[i].age );
        ; Setup parameters for call to function osal_buffer_uint32
        MOV       DPL,?V4
        MOV       DPH,?V5
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ?PUSH_XSTACK8_X_FOUR
          CFI CFA_XSP16 add(XSP16, 24)
        LCALL     `??osal_buffer_uint32::?relay`; Banked call to: osal_buffer_uint32
        MOV       A,#0x4
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 20)
//  635   }
        INC       ?V7
??ZDP_ParentAnnce_3:
        MOV       A,?V7
        CLR       C
        SUBB      A,?V8
        JC        ??ZDP_ParentAnnce_4
//  636 
//  637   return fillAndSend( TransSeq, dstAddr, clusterID, len );
        ; Setup parameters for call to function fillAndSend
        MOV       A,#0x16
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       R1,?V6
        MOV       A,R6
        MOV       R4,A
        MOV       A,R7
        MOV       R5,A
        MOV       R2,?V2
        MOV       R3,?V3
        LCALL     ??Subroutine123_0 & 0xFFFF
??CrossCallReturnLabel_222:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 20)
??ZDP_ParentAnnce_1:
          CFI EndBlock cfiBlock41
        REQUIRE ?Subroutine4
        ; // Fall through to label ?Subroutine4
//  638 }

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine4:
          CFI Block cfiBlock42 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       R7,#0xc
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock42
//  639 
//  640 /*********************************************************************
//  641  * Address Responses
//  642  */
//  643 
//  644 /*********************************************************************
//  645  * @fn      zdpProcessAddrReq
//  646  *
//  647  * @brief   Process an incoming NWK_addr_req or IEEE_addr_req message and then
//  648  *          build and send a corresponding NWK_addr_rsp or IEEE_addr_rsp msg.
//  649  *
//  650  * @param   inMsg - incoming message
//  651  *
//  652  * @return  none
//  653  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  654 void zdpProcessAddrReq( zdoIncomingMsg_t *inMsg )
zdpProcessAddrReq:
          CFI Block cfiBlock43 Using cfiCommon0
          CFI Function zdpProcessAddrReq
        CODE
//  655 {
        FUNCALL zdpProcessAddrReq, sAddrExtCmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zdpProcessAddrReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zdpProcessAddrReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        MOV       A,#-0xf
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
        ; Saved register size: 15
        ; Auto size: 0
        MOV       ?V0,R2
        MOV       ?V1,R3
//  656   associated_devices_t *pAssoc;
//  657   uint8 reqType;
//  658   uint16 aoi = INVALID_NODE_ADDR;
        MOV       R6,#-0x2
        MOV       R7,#-0x1
//  659   uint8 *ieee = NULL;
        MOV       ?V2,#0x0
        MOV       ?V3,#0x0
//  660 
//  661   reqType = inMsg->asdu[(inMsg->clusterID == NWK_addr_req) ? Z_EXTADDR_LEN : sizeof( uint16 ) ];
        MOV       A,R2
        ADD       A,#0xc
        MOV       ?V4,A
        CLR       A
        ADDC      A,?V1
        MOV       ?V5,A
        MOV       DPL,?V4
        MOV       DPH,A
        LCALL     ??Subroutine130_0 & 0xFFFF
??CrossCallReturnLabel_260:
        MOV       A,R2
        ORL       A,R3
        JNZ       ??zdpProcessAddrReq_0
        MOV       R4,#0x8
        SJMP      ??zdpProcessAddrReq_1
??zdpProcessAddrReq_0:
        MOV       R4,#0x2
??zdpProcessAddrReq_1:
        MOV       A,?V0
        ADD       A,#0x13
        MOV       DPL,A
        CLR       A
        ADDC      A,?V1
        MOV       DPH,A
        LCALL     ??Subroutine110_0 & 0xFFFF
??CrossCallReturnLabel_161:
        ADD       A,R4
        MOV       DPL,A
        CLR       A
        ADDC      A,R1
        MOV       DPH,A
        MOVX      A,@DPTR
        MOV       ?V6,A
//  662 
//  663   if ( inMsg->clusterID == NWK_addr_req )
        MOV       A,R2
        ORL       A,R3
        JNZ       ??zdpProcessAddrReq_2
//  664 
//  665   {
//  666     ieee = inMsg->asdu;
        MOV       ?V2,R0
        MOV       ?V3,R1
//  667 
//  668     if ( osal_ExtAddrEqual( saveExtAddr, ieee ) )
        ; Setup parameters for call to function sAddrExtCmp
        MOV       R4,?V2
        MOV       R5,?V3
        MOV       R2,#saveExtAddr & 0xff
        MOV       R3,#(saveExtAddr >> 8) & 0xff
        LCALL     `??sAddrExtCmp::?relay`; Banked call to: sAddrExtCmp
        MOV       A,R1
        JZ        ??zdpProcessAddrReq_3
//  669     {
//  670       aoi = ZDAppNwkAddr.addr.shortAddr;
        LCALL     ?Subroutine37 & 0xFFFF
//  671     }
//  672     // Handle response for sleeping end devices
//  673     else if ( (ZSTACK_ROUTER_BUILD)
//  674       && (((pAssoc = AssocGetWithExt( ieee )) != NULL)
//  675              && (pAssoc->nodeRelation == CHILD_RFD)) )
//  676     {
//  677       aoi = pAssoc->shortAddr;
//  678       if ( reqType != ZDP_ADDR_REQTYPE_SINGLE )
//  679         reqType = 0xFF; // Force Invalid
//  680     }
//  681   }
??CrossCallReturnLabel_249:
        SJMP      ??zdpProcessAddrReq_4
//  682   else  // if ( inMsg->clusterID == IEEE_addr_req )
//  683   {
//  684     aoi = BUILD_UINT16( inMsg->asdu[0], inMsg->asdu[1] );
??zdpProcessAddrReq_2:
        MOV       DPL,R0
        MOV       DPH,R1
        MOVX      A,@DPTR
        MOV       R2,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R0,A
        CLR       A
        XCH       A,R0
        MOV       R1,A
        MOV       A,R2
        ADD       A,R0
        MOV       R6,A
        CLR       A
        ADDC      A,R1
        MOV       R7,A
//  685 
//  686     if ( aoi == ZDAppNwkAddr.addr.shortAddr )
        MOV       DPTR,#ZDAppNwkAddr
        MOVX      A,@DPTR
        XRL       A,R6
        JNZ       ??zdpProcessAddrReq_5
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R7
??zdpProcessAddrReq_5:
        JNZ       ??zdpProcessAddrReq_3
//  687     {
//  688       ieee = saveExtAddr;
        MOV       ?V2,#saveExtAddr & 0xff
        MOV       ?V3,#(saveExtAddr >> 8) & 0xff
//  689     }
//  690     else if ( (ZSTACK_ROUTER_BUILD)
//  691       && (((pAssoc = AssocGetWithShort( aoi )) != NULL)
//  692              && (pAssoc->nodeRelation == CHILD_RFD)) )
//  693     {
//  694       AddrMgrEntry_t addrEntry;
//  695       addrEntry.user = ADDRMGR_USER_DEFAULT;
//  696       addrEntry.index = pAssoc->addrIdx;
//  697       if ( AddrMgrEntryGet( &addrEntry ) )
//  698       {
//  699         ieee = addrEntry.extAddr;
//  700       }
//  701 
//  702       if ( reqType != ZDP_ADDR_REQTYPE_SINGLE )
//  703         reqType = 0xFF; // Force Invalid
//  704     }
//  705   }
//  706 
//  707   if ( ((aoi != INVALID_NODE_ADDR) && (ieee != NULL)) || (inMsg->wasBroadcast == FALSE) )
??zdpProcessAddrReq_4:
        MOV       A,#-0x2
        XRL       A,R6
        JNZ       ??zdpProcessAddrReq_6
        MOV       A,#-0x1
        XRL       A,R7
??zdpProcessAddrReq_6:
        JZ        ??zdpProcessAddrReq_3
        MOV       A,?V2
        ORL       A,?V3
        JNZ       ??zdpProcessAddrReq_7
??zdpProcessAddrReq_3:
        MOV       A,?V0
        ADD       A,#0xb
        MOV       DPL,A
        CLR       A
        ADDC      A,?V1
        MOV       DPH,A
        MOVX      A,@DPTR
        JNZ       ??zdpProcessAddrReq_8
//  708   {
//  709     uint8 stat;
//  710     uint8 *pBuf = ZDP_TmpBuf;
??zdpProcessAddrReq_7:
        LCALL     ?Subroutine51 & 0xFFFF
//  711     // Status + IEEE-Addr + Nwk-Addr.
//  712     uint8 len = 1 + Z_EXTADDR_LEN + 2;
//  713 
//  714     // If aoi and iee are both setup, we found results
//  715     if ( (aoi != INVALID_NODE_ADDR) && (ieee != NULL) )
??CrossCallReturnLabel_265:
        MOV       A,#-0x2
        XRL       A,R6
        JNZ       ??zdpProcessAddrReq_9
        MOV       A,#-0x1
        XRL       A,R7
??zdpProcessAddrReq_9:
        JZ        ??zdpProcessAddrReq_10
        MOV       A,?V2
        ORL       A,?V3
        JZ        ??zdpProcessAddrReq_10
//  716     {
//  717       stat = ((reqType == ZDP_ADDR_REQTYPE_SINGLE) || (reqType == ZDP_ADDR_REQTYPE_EXTENDED))
//  718                     ? ZDP_SUCCESS : ZDP_INVALID_REQTYPE;
        MOV       A,?V6
        JZ        ??zdpProcessAddrReq_11
        MOV       A,#0x1
        XRL       A,?V6
        JNZ       ??zdpProcessAddrReq_12
??zdpProcessAddrReq_11:
        MOV       R0,#0x0
        SJMP      ??zdpProcessAddrReq_13
??zdpProcessAddrReq_12:
        MOV       R0,#-0x80
        SJMP      ??zdpProcessAddrReq_13
//  719     }
//  720     else
//  721     {
//  722       // not found and the req was unicast to this device
//  723       stat = ZDP_DEVICE_NOT_FOUND;
??zdpProcessAddrReq_10:
        MOV       R0,#-0x7f
//  724 
//  725       // Fill in the missing field with this device's address
//  726       if ( inMsg->clusterID == NWK_addr_req )
        MOV       DPL,?V4
        MOV       DPH,?V5
        LCALL     ?Subroutine40 & 0xFFFF
??CrossCallReturnLabel_60:
        MOV       A,R4
        ORL       A,R5
        JNZ       ??zdpProcessAddrReq_14
//  727       {
//  728         aoi = ZDAppNwkAddr.addr.shortAddr;
        LCALL     ?Subroutine37 & 0xFFFF
//  729       }
??CrossCallReturnLabel_250:
        SJMP      ??zdpProcessAddrReq_13
//  730       else
//  731       {
//  732         ieee = saveExtAddr;
??zdpProcessAddrReq_14:
        MOV       ?V2,#saveExtAddr & 0xff
        MOV       ?V3,#(saveExtAddr >> 8) & 0xff
//  733       }
//  734     }
//  735 
//  736     *pBuf++ = stat;
??zdpProcessAddrReq_13:
        MOV       A,R0
        LCALL     ?Subroutine20 & 0xFFFF
//  737 
//  738     pBuf = osal_cpyExtAddr( pBuf, ieee );
??CrossCallReturnLabel_155:
        ; Setup parameters for call to function sAddrExtCpy
        MOV       R4,?V2
        MOV       R5,?V3
        LCALL     ?Subroutine71 & 0xFFFF
//  739 
//  740     *pBuf++ = LO_UINT16( aoi );
??CrossCallReturnLabel_116:
        MOV       A,R6
        MOVX      @DPTR,A
//  741     *pBuf++ = HI_UINT16( aoi );
        MOV       A,R7
        INC       DPTR
        MOVX      @DPTR,A
//  742 
//  743     if ( ZSTACK_ROUTER_BUILD )
//  744     {
//  745       if ( (reqType == ZDP_ADDR_REQTYPE_EXTENDED) && (aoi == ZDAppNwkAddr.addr.shortAddr)
//  746            && (stat == ZDP_SUCCESS) )
//  747       {
//  748         uint8  cnt = 0;
//  749         uint16 *list = AssocMakeList( &cnt );
//  750 
//  751         if ( list != NULL )
//  752         {
//  753           byte idx = inMsg->asdu[(((inMsg->clusterID == NWK_addr_req) ? Z_EXTADDR_LEN : sizeof( uint16 )) + 1)];
//  754           uint16 *pList = list + idx;
//  755 
//  756           // NumAssocDev field is only present on success.
//  757           if ( cnt > idx )
//  758           {
//  759             cnt -= idx;
//  760             len += (cnt * sizeof( uint16 ));
//  761           }
//  762           else
//  763           {
//  764             cnt = 0;
//  765           }
//  766           *pBuf++ = cnt;
//  767           len++;
//  768 
//  769           // StartIndex field is only present if NumAssocDev field is non-zero.
//  770           *pBuf++ = idx;
//  771           len++;
//  772 
//  773           while ( cnt != 0 )
//  774           {
//  775             *pBuf++ = LO_UINT16( *pList );
//  776             *pBuf++ = HI_UINT16( *pList );
//  777             pList++;
//  778             cnt--;
//  779           }
//  780 
//  781           osal_mem_free( (uint8 *)list );
//  782         }
//  783         else
//  784         {
//  785           // NumAssocDev field is only present on success.
//  786           *pBuf++ = 0;
//  787           len++;
//  788         }
//  789       }
//  790     }
//  791 
//  792     ZDP_TxOptions = AF_MSG_ACK_REQUEST;
        MOV       DPTR,#ZDP_TxOptions
        MOV       A,#0x10
        MOVX      @DPTR,A
//  793     fillAndSend( &(inMsg->TransSeq), &(inMsg->srcAddr), (cId_t)(inMsg->clusterID | ZDO_RESPONSE_BIT), len );
        ; Setup parameters for call to function fillAndSend
        MOV       DPL,?V4
        MOV       DPH,?V5
        MOVX      A,@DPTR
        MOV       ?V2,A
        INC       DPTR
        MOVX      A,@DPTR
        ORL       A,#0x80
        MOV       ?V3,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 17)
        MOV       R1,#0xb
        LCALL     ?Subroutine72 & 0xFFFF
??CrossCallReturnLabel_118:
        LCALL     ??Subroutine123_0 & 0xFFFF
??CrossCallReturnLabel_223:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
//  794     ZDP_TxOptions = AF_TX_OPTIONS_NONE;
        MOV       DPTR,#ZDP_TxOptions
        CLR       A
        MOVX      @DPTR,A
//  795   }
//  796 }
??zdpProcessAddrReq_8:
        LJMP      ??Subroutine105_0 & 0xFFFF
          CFI EndBlock cfiBlock43

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine71:
          CFI Block cfiCond44 Using cfiCommon0
          CFI Function ZDP_NwkAddrReq
          CFI Conditional ??CrossCallReturnLabel_115
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond45 Using cfiCommon0
          CFI (cfiCond45) Function zdpProcessAddrReq
          CFI (cfiCond45) Conditional ??CrossCallReturnLabel_116
          CFI (cfiCond45) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond45) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond45) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond45) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond45) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond45) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond45) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond45) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond45) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond45) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond45) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond45) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond45) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond45) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond45) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond45) CFA_SP SP+-2
          CFI (cfiCond45) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond46 Using cfiCommon0
          CFI (cfiCond46) Function ZDP_BindUnbindReq
          CFI (cfiCond46) Conditional ??CrossCallReturnLabel_117
          CFI (cfiCond46) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond46) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond46) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond46) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond46) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond46) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond46) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond46) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond46) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond46) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond46) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond46) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond46) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond46) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond46) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond46) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond46) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond46) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond46) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker47 Using cfiCommon1
          CFI (cfiPicker47) NoFunction
          CFI (cfiPicker47) Picker
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
        MOV       DPL,R2
        MOV       DPH,R3
        RET
          CFI EndBlock cfiCond44
          CFI EndBlock cfiCond45
          CFI EndBlock cfiCond46
          CFI EndBlock cfiPicker47

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine20:
          CFI Block cfiCond48 Using cfiCommon0
          CFI Function zdpProcessAddrReq
          CFI Conditional ??CrossCallReturnLabel_155
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond49 Using cfiCommon0
          CFI (cfiCond49) Function ZDP_MgmtBindRsp
          CFI (cfiCond49) Conditional ??CrossCallReturnLabel_156
          CFI (cfiCond49) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond49) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond49) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond49) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond49) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond49) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond49) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond49) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond49) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond49) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond49) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond49) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond49) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond49) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond49) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond49) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond49) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond49) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond49) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond49) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond49) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond49) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond49) CFA_SP SP+-2
          CFI (cfiCond49) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker50 Using cfiCommon1
          CFI (cfiPicker50) NoFunction
          CFI (cfiPicker50) Picker
        MOV       DPL,R2
        MOV       DPH,R3
          CFI EndBlock cfiCond48
          CFI EndBlock cfiCond49
          CFI EndBlock cfiPicker50
        REQUIRE ??Subroutine106_0
        ; // Fall through to label ??Subroutine106_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine106_0:
          CFI Block cfiCond51 Using cfiCommon0
          CFI Function ZDP_ParentAnnce
          CFI Conditional ??CrossCallReturnLabel_153
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond52 Using cfiCommon0
          CFI (cfiCond52) Function ZDP_MgmtNwkUpdateNotify
          CFI (cfiCond52) Conditional ??CrossCallReturnLabel_154
          CFI (cfiCond52) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond52) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond52) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond52) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond52) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond52) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond52) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond52) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond52) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond52) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond52) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond52) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond52) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond52) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond52) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond52) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond52) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond52) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond52) CFA_SP SP+-2
          CFI (cfiCond52) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond53 Using cfiCommon0
          CFI (cfiCond53) Function zdpProcessAddrReq
          CFI (cfiCond53) Conditional ??CrossCallReturnLabel_155
          CFI (cfiCond53) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond53) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond53) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond53) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond53) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond53) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond53) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond53) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond53) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond53) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond53) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond53) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond53) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond53) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond53) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond53) CFA_SP SP+-2
          CFI (cfiCond53) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond54 Using cfiCommon0
          CFI (cfiCond54) Function ZDP_MgmtBindRsp
          CFI (cfiCond54) Conditional ??CrossCallReturnLabel_156
          CFI (cfiCond54) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond54) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond54) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond54) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond54) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond54) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond54) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond54) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond54) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond54) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond54) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond54) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond54) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond54) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond54) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond54) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond54) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond54) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond54) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond54) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond54) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond54) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond54) CFA_SP SP+-2
          CFI (cfiCond54) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker55 Using cfiCommon1
          CFI (cfiPicker55) NoFunction
          CFI (cfiPicker55) Picker
        MOVX      @DPTR,A
        INC       DPTR
        MOV       R2,DPL
        MOV       R3,DPH
        RET
          CFI EndBlock cfiCond51
          CFI EndBlock cfiCond52
          CFI EndBlock cfiCond53
          CFI EndBlock cfiCond54
          CFI EndBlock cfiPicker55
//  797 
//  798 /*********************************************************************
//  799  * @fn          ZDP_NodeDescMsg
//  800  *
//  801  * @brief       Builds and sends a Node Descriptor message, unicast to the
//  802  *              specified device.
//  803  *
//  804  * @param       inMsg - incoming message
//  805  * @param       nwkAddr - 16 bit network address for device
//  806  * @param       pNodeDesc - pointer to the node descriptor
//  807  *
//  808  * @return      afStatus_t
//  809  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  810 afStatus_t ZDP_NodeDescMsg( zdoIncomingMsg_t *inMsg,
ZDP_NodeDescMsg:
          CFI Block cfiBlock56 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
        CODE
//  811                            uint16 nwkAddr, NodeDescriptorFormat_t *pNodeDesc )
//  812 {
        FUNCALL ZDP_NodeDescMsg, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
//  813   uint8 *pBuf = ZDP_TmpBuf;
        MOV       DPTR,#ZDP_TmpBuf
        LCALL     ??Subroutine125_0 & 0xFFFF
//  814   byte len;
//  815 
//  816   len = 1 + 2 + 13;  // Status + nwkAddr + Node descriptor
//  817 
//  818   *pBuf++ = ZDP_SUCCESS;
??CrossCallReturnLabel_244:
        MOV       DPL,R6
        MOV       DPH,A
        CLR       A
        MOVX      @DPTR,A
//  819 
//  820   *pBuf++ = LO_UINT16( nwkAddr );
        MOV       A,R4
        INC       DPTR
        MOVX      @DPTR,A
//  821   *pBuf++ = HI_UINT16( nwkAddr );
        MOV       A,R5
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
        MOV       A,#0xa
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine36 & 0xFFFF
//  822 
//  823   *pBuf++ = (byte)((pNodeDesc->ComplexDescAvail << 3) |
//  824                      (pNodeDesc->UserDescAvail << 4) |
//  825                      (pNodeDesc->LogicalType & 0x07));
??CrossCallReturnLabel_48:
        ANL       A,#0x1f
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ?Subroutine25 & 0xFFFF
//  826 
//  827   *pBuf++ = (byte)((pNodeDesc->FrequencyBand << 3) | (pNodeDesc->APSFlags & 0x07));
??CrossCallReturnLabel_251:
        LCALL     ?Subroutine39 & 0xFFFF
??CrossCallReturnLabel_52:
        LCALL     ?Subroutine25 & 0xFFFF
//  828   *pBuf++ = pNodeDesc->CapabilityFlags;
??CrossCallReturnLabel_252:
        LCALL     ?Subroutine82 & 0xFFFF
??CrossCallReturnLabel_204:
        LCALL     ?Subroutine24 & 0xFFFF
//  829   *pBuf++ = pNodeDesc->ManufacturerCode[0];
??CrossCallReturnLabel_157:
        LCALL     ?Subroutine39 & 0xFFFF
??CrossCallReturnLabel_53:
        LCALL     ?Subroutine24 & 0xFFFF
//  830   *pBuf++ = pNodeDesc->ManufacturerCode[1];
??CrossCallReturnLabel_158:
        LCALL     ?Subroutine82 & 0xFFFF
??CrossCallReturnLabel_205:
        LCALL     ?Subroutine23 & 0xFFFF
//  831   *pBuf++ = pNodeDesc->MaxBufferSize;
??CrossCallReturnLabel_24:
        LCALL     ?Subroutine39 & 0xFFFF
??CrossCallReturnLabel_54:
        LCALL     ?Subroutine23 & 0xFFFF
//  832   *pBuf++ = pNodeDesc->MaxInTransferSize[0];
??CrossCallReturnLabel_25:
        INC       DPTR
        LCALL     ?Subroutine38 & 0xFFFF
??CrossCallReturnLabel_50:
        LCALL     ?Subroutine21 & 0xFFFF
//  833   *pBuf++ = pNodeDesc->MaxInTransferSize[1];
??CrossCallReturnLabel_22:
        LCALL     ?Subroutine38 & 0xFFFF
??CrossCallReturnLabel_51:
        INC       DPTR
        MOVX      @DPTR,A
//  834 
//  835   *pBuf++ = LO_UINT16( pNodeDesc->ServerMask );
        MOV       A,R0
        ADD       A,#0x8
        MOV       R4,A
        CLR       A
        ADDC      A,R1
        MOV       R5,A
        MOV       DPL,R4
        MOV       DPH,A
        MOVX      A,@DPTR
        MOV       ?V0,A
        MOV       A,R6
        ADD       A,#0xb
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
        MOV       DPH,A
        MOV       A,?V0
        LCALL     ??Subroutine111_0 & 0xFFFF
//  836   *pBuf++ = HI_UINT16( pNodeDesc->ServerMask );
??CrossCallReturnLabel_169:
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,R6
        ADD       A,#0xc
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
        MOV       DPH,A
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine21 & 0xFFFF
//  837   *pBuf++ = pNodeDesc->MaxOutTransferSize[0];
??CrossCallReturnLabel_23:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,R6
        ADD       A,#0xd
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
        MOV       DPH,A
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
//  838   *pBuf++ = pNodeDesc->MaxOutTransferSize[1];
        MOV       A,R0
        ADD       A,#0xb
        MOV       DPL,A
        CLR       A
        ADDC      A,R1
        MOV       DPH,A
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,R6
        ADD       A,#0xe
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
        MOV       DPH,A
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
//  839   *pBuf = pNodeDesc->DescriptorCapability;
        MOV       A,R0
        ADD       A,#0xc
        MOV       DPL,A
        CLR       A
        ADDC      A,R1
        MOV       DPH,A
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,R6
        ADD       A,#0xf
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
        MOV       DPH,A
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
//  840 
//  841   return fillAndSend( &(inMsg->TransSeq), &(inMsg->srcAddr), Node_Desc_rsp, len );
        ; Setup parameters for call to function fillAndSend
        MOV       ?V0,#0x2
        MOV       ?V1,#-0x80
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 12)
        MOV       R1,#0x10
        LCALL     ?Subroutine74 & 0xFFFF
??CrossCallReturnLabel_120:
        JNC       ??ZDP_NodeDescMsg_0
        INC       R3
??ZDP_NodeDescMsg_0:
        SJMP      ??Subroutine109_0
//  842 }
          CFI EndBlock cfiBlock56

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine38:
          CFI Block cfiCond57 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
          CFI Conditional ??CrossCallReturnLabel_50
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond58 Using cfiCommon0
          CFI (cfiCond58) Function ZDP_NodeDescMsg
          CFI (cfiCond58) Conditional ??CrossCallReturnLabel_51
          CFI (cfiCond58) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond58) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond58) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond58) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond58) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond58) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond58) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond58) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond58) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond58) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond58) CFA_SP SP+-2
          CFI (cfiCond58) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker59 Using cfiCommon1
          CFI (cfiPicker59) NoFunction
          CFI (cfiPicker59) Picker
        LCALL     ??Subroutine119_0 & 0xFFFF
??CrossCallReturnLabel_202:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond57
          CFI EndBlock cfiCond58
          CFI EndBlock cfiPicker59

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine36:
          CFI Block cfiCond60 Using cfiCommon0
          CFI Function ZDP_UserDescSet
          CFI Conditional ??CrossCallReturnLabel_47
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond61 Using cfiCommon0
          CFI (cfiCond61) Function ZDP_NodeDescMsg
          CFI (cfiCond61) Conditional ??CrossCallReturnLabel_48
          CFI (cfiCond61) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond61) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond61) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond61) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond61) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond61) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond61) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond61) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond61) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond61) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond61) CFA_SP SP+-2
          CFI (cfiCond61) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond62 Using cfiCommon0
          CFI (cfiCond62) Function ZDP_PowerDescMsg
          CFI (cfiCond62) Conditional ??CrossCallReturnLabel_49
          CFI (cfiCond62) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond62) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond62) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond62) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond62) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond62) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond62) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond62) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond62) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond62) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond62) CFA_SP SP+-2
          CFI (cfiCond62) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker63 Using cfiCommon1
          CFI (cfiPicker63) NoFunction
          CFI (cfiPicker63) Picker
        LCALL     ??Subroutine129_0 & 0xFFFF
??CrossCallReturnLabel_284:
        MOV       R1,A
        MOV       DPL,R0
        MOV       DPH,A
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond60
          CFI EndBlock cfiCond61
          CFI EndBlock cfiCond62
          CFI EndBlock cfiPicker63

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine24:
          CFI Block cfiCond64 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
          CFI Conditional ??CrossCallReturnLabel_157
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond65 Using cfiCommon0
          CFI (cfiCond65) Function ZDP_NodeDescMsg
          CFI (cfiCond65) Conditional ??CrossCallReturnLabel_158
          CFI (cfiCond65) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond65) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond65) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond65) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond65) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond65) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond65) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond65) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond65) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond65) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond65) CFA_SP SP+-2
          CFI (cfiCond65) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker66 Using cfiCommon1
          CFI (cfiPicker66) NoFunction
          CFI (cfiPicker66) Picker
        INC       DPTR
        INC       DPTR
        INC       DPTR
          CFI EndBlock cfiCond64
          CFI EndBlock cfiCond65
          CFI EndBlock cfiPicker66
        REQUIRE ??Subroutine107_0
        ; // Fall through to label ??Subroutine107_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine107_0:
          CFI Block cfiCond67 Using cfiCommon0
          CFI Function ZDP_MgmtRtgRsp
          CFI Conditional ??CrossCallReturnLabel_159
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond68 Using cfiCommon0
          CFI (cfiCond68) Function ZDP_NodeDescMsg
          CFI (cfiCond68) Conditional ??CrossCallReturnLabel_157
          CFI (cfiCond68) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond68) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond68) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond68) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond68) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond68) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond68) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond68) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond68) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond68) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond68) CFA_SP SP+-2
          CFI (cfiCond68) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond69 Using cfiCommon0
          CFI (cfiCond69) Function ZDP_NodeDescMsg
          CFI (cfiCond69) Conditional ??CrossCallReturnLabel_158
          CFI (cfiCond69) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond69) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond69) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond69) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond69) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond69) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond69) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond69) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond69) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond69) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond69) CFA_SP SP+-2
          CFI (cfiCond69) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker70 Using cfiCommon1
          CFI (cfiPicker70) NoFunction
          CFI (cfiPicker70) Picker
        LCALL     ?Subroutine90 & 0xFFFF
??CrossCallReturnLabel_256:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond67
          CFI EndBlock cfiCond68
          CFI EndBlock cfiCond69
          CFI EndBlock cfiPicker70

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine90:
          CFI Block cfiCond71 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
          CFI Conditional ??CrossCallReturnLabel_256, ??CrossCallReturnLabel_157
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond72 Using cfiCommon0
          CFI (cfiCond72) Function ZDP_NodeDescMsg
          CFI (cfiCond72) Conditional ??CrossCallReturnLabel_256, ??CrossCallReturnLabel_158
          CFI (cfiCond72) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond72) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond72) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond72) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond72) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond72) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond72) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond72) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond72) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond72) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond72) CFA_SP SP+-4
          CFI (cfiCond72) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond73 Using cfiCommon0
          CFI (cfiCond73) Function ZDP_MgmtRtgRsp
          CFI (cfiCond73) Conditional ??CrossCallReturnLabel_256, ??CrossCallReturnLabel_159
          CFI (cfiCond73) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond73) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond73) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond73) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond73) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond73) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond73) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond73) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond73) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond73) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond73) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond73) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond73) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond73) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond73) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond73) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond73) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond73) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond73) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond73) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond73) CFA_SP SP+-4
          CFI (cfiCond73) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond74 Using cfiCommon0
          CFI (cfiCond74) Function ZDP_PowerDescMsg
          CFI (cfiCond74) Conditional ??CrossCallReturnLabel_257
          CFI (cfiCond74) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond74) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond74) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond74) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond74) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond74) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond74) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond74) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond74) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond74) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond74) CFA_SP SP+-2
          CFI (cfiCond74) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker75 Using cfiCommon1
          CFI (cfiPicker75) NoFunction
          CFI (cfiPicker75) Picker
        INC       DPTR
        INC       DPTR
          CFI EndBlock cfiCond71
          CFI EndBlock cfiCond72
          CFI EndBlock cfiCond73
          CFI EndBlock cfiCond74
          CFI EndBlock cfiPicker75
        REQUIRE ??Subroutine108_0
        ; // Fall through to label ??Subroutine108_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine108_0:
          CFI Block cfiCond76 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
          CFI Conditional ??CrossCallReturnLabel_258, ??CrossCallReturnLabel_251
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond77 Using cfiCommon0
          CFI (cfiCond77) Function ZDP_NodeDescMsg
          CFI (cfiCond77) Conditional ??CrossCallReturnLabel_258, ??CrossCallReturnLabel_252
          CFI (cfiCond77) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond77) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond77) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond77) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond77) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond77) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond77) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond77) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond77) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond77) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond77) CFA_SP SP+-4
          CFI (cfiCond77) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond78 Using cfiCommon0
          CFI (cfiCond78) Function ZDP_MgmtBindRsp
          CFI (cfiCond78) Conditional ??CrossCallReturnLabel_258, ??CrossCallReturnLabel_253
          CFI (cfiCond78) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond78) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond78) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond78) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond78) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond78) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond78) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond78) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond78) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond78) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond78) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond78) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond78) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond78) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond78) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond78) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond78) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond78) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond78) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond78) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond78) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond78) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond78) CFA_SP SP+-4
          CFI (cfiCond78) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond79 Using cfiCommon0
          CFI (cfiCond79) Function ZDP_SendData
          CFI (cfiCond79) Conditional ??CrossCallReturnLabel_258, ??CrossCallReturnLabel_255
          CFI (cfiCond79) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond79) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond79) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond79) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond79) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond79) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond79) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond79) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond79) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond79) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond79) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond79) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond79) CFA_SP SP+-4
          CFI (cfiCond79) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond80 Using cfiCommon0
          CFI (cfiCond80) Function ZDP_UserDescSet
          CFI (cfiCond80) Conditional ??CrossCallReturnLabel_258, ??CrossCallReturnLabel_254
          CFI (cfiCond80) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond80) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond80) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond80) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond80) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond80) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond80) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond80) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond80) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond80) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond80) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond80) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond80) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond80) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond80) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond80) CFA_SP SP+-4
          CFI (cfiCond80) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond81 Using cfiCommon0
          CFI (cfiCond81) Function ZDP_IncomingData
          CFI (cfiCond81) Conditional ??CrossCallReturnLabel_259
          CFI (cfiCond81) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond81) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond81) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond81) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond81) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond81) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond81) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond81) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond81) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond81) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond81) CFA_SP SP+-2
          CFI (cfiCond81) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond82 Using cfiCommon0
          CFI (cfiCond82) Function ZDP_NodeDescMsg
          CFI (cfiCond82) Conditional ??CrossCallReturnLabel_256, ??CrossCallReturnLabel_157
          CFI (cfiCond82) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond82) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond82) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond82) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond82) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond82) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond82) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond82) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond82) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond82) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond82) CFA_SP SP+-4
          CFI (cfiCond82) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond83 Using cfiCommon0
          CFI (cfiCond83) Function ZDP_NodeDescMsg
          CFI (cfiCond83) Conditional ??CrossCallReturnLabel_256, ??CrossCallReturnLabel_158
          CFI (cfiCond83) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond83) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond83) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond83) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond83) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond83) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond83) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond83) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond83) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond83) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond83) CFA_SP SP+-4
          CFI (cfiCond83) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond84 Using cfiCommon0
          CFI (cfiCond84) Function ZDP_MgmtRtgRsp
          CFI (cfiCond84) Conditional ??CrossCallReturnLabel_256, ??CrossCallReturnLabel_159
          CFI (cfiCond84) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond84) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond84) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond84) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond84) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond84) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond84) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond84) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond84) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond84) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond84) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond84) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond84) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond84) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond84) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond84) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond84) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond84) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond84) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond84) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond84) CFA_SP SP+-4
          CFI (cfiCond84) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond85 Using cfiCommon0
          CFI (cfiCond85) Function ZDP_PowerDescMsg
          CFI (cfiCond85) Conditional ??CrossCallReturnLabel_257
          CFI (cfiCond85) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond85) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond85) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond85) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond85) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond85) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond85) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond85) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond85) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond85) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond85) CFA_SP SP+-2
          CFI (cfiCond85) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker86 Using cfiCommon1
          CFI (cfiPicker86) NoFunction
          CFI (cfiPicker86) Picker
        MOVX      @DPTR,A
        ; Setup parameters for call to function osal_memcpy
        MOV       DPL,R0
        MOV       DPH,R1
        RET
          CFI EndBlock cfiCond76
          CFI EndBlock cfiCond77
          CFI EndBlock cfiCond78
          CFI EndBlock cfiCond79
          CFI EndBlock cfiCond80
          CFI EndBlock cfiCond81
          CFI EndBlock cfiCond82
          CFI EndBlock cfiCond83
          CFI EndBlock cfiCond84
          CFI EndBlock cfiCond85
          CFI EndBlock cfiPicker86

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine23:
          CFI Block cfiCond87 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
          CFI Conditional ??CrossCallReturnLabel_24
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond88 Using cfiCommon0
          CFI (cfiCond88) Function ZDP_NodeDescMsg
          CFI (cfiCond88) Conditional ??CrossCallReturnLabel_25
          CFI (cfiCond88) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond88) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond88) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond88) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond88) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond88) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond88) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond88) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond88) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond88) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond88) CFA_SP SP+-2
          CFI (cfiCond88) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker89 Using cfiCommon1
          CFI (cfiPicker89) NoFunction
          CFI (cfiPicker89) Picker
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine89 & 0xFFFF
??CrossCallReturnLabel_139:
        RET
          CFI EndBlock cfiCond87
          CFI EndBlock cfiCond88
          CFI EndBlock cfiPicker89

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine89:
          CFI Block cfiCond90 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
          CFI Conditional ??CrossCallReturnLabel_139, ??CrossCallReturnLabel_24
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond91 Using cfiCommon0
          CFI (cfiCond91) Function ZDP_NodeDescMsg
          CFI (cfiCond91) Conditional ??CrossCallReturnLabel_139, ??CrossCallReturnLabel_25
          CFI (cfiCond91) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond91) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond91) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond91) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond91) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond91) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond91) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond91) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond91) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond91) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond91) CFA_SP SP+-4
          CFI (cfiCond91) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond92 Using cfiCommon0
          CFI (cfiCond92) Function ZDP_NodeDescMsg
          CFI (cfiCond92) Conditional ??CrossCallReturnLabel_140, ??CrossCallReturnLabel_22
          CFI (cfiCond92) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond92) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond92) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond92) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond92) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond92) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond92) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond92) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond92) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond92) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond92) CFA_SP SP+-4
          CFI (cfiCond92) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond93 Using cfiCommon0
          CFI (cfiCond93) Function ZDP_NodeDescMsg
          CFI (cfiCond93) Conditional ??CrossCallReturnLabel_140, ??CrossCallReturnLabel_23
          CFI (cfiCond93) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond93) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond93) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond93) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond93) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond93) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond93) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond93) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond93) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond93) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond93) CFA_SP SP+-4
          CFI (cfiCond93) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker94 Using cfiCommon1
          CFI (cfiPicker94) NoFunction
          CFI (cfiPicker94) Picker
        MOVX      @DPTR,A
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond90
          CFI EndBlock cfiCond91
          CFI EndBlock cfiCond92
          CFI EndBlock cfiCond93
          CFI EndBlock cfiPicker94

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine21:
          CFI Block cfiCond95 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
          CFI Conditional ??CrossCallReturnLabel_22
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond96 Using cfiCommon0
          CFI (cfiCond96) Function ZDP_NodeDescMsg
          CFI (cfiCond96) Conditional ??CrossCallReturnLabel_23
          CFI (cfiCond96) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond96) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond96) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond96) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond96) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond96) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond96) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond96) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond96) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond96) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond96) CFA_SP SP+-2
          CFI (cfiCond96) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker97 Using cfiCommon1
          CFI (cfiPicker97) NoFunction
          CFI (cfiPicker97) Picker
        LCALL     ?Subroutine89 & 0xFFFF
??CrossCallReturnLabel_140:
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond95
          CFI EndBlock cfiCond96
          CFI EndBlock cfiPicker97

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine8:
          CFI Block cfiBlock98 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       A,R2
        MOV       R4,A
        MOV       A,R3
        MOV       R5,A
        MOV       R2,#ZDP_TransID & 0xff
        MOV       R3,#(ZDP_TransID >> 8) & 0xff
          CFI EndBlock cfiBlock98
        REQUIRE ??Subroutine109_0
        ; // Fall through to label ??Subroutine109_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine109_0:
          CFI Block cfiBlock99 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        LCALL     ??Subroutine123_0 & 0xFFFF
??CrossCallReturnLabel_224:
        LJMP      ??Subroutine104_0 & 0xFFFF
          CFI EndBlock cfiBlock99
//  843 
//  844 /*********************************************************************
//  845  * @fn          ZDP_PowerDescMsg
//  846  *
//  847  * @brief       Builds and sends a Power Descriptor message, unicast to the
//  848  *              specified device.
//  849  *
//  850  * @param       inMsg - incoming message (request)
//  851  * @param       nwkAddr - 16 bit network address for device
//  852  * @param       pPowerDesc - pointer to the node descriptor
//  853  *
//  854  * @return      afStatus_t
//  855  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  856 afStatus_t ZDP_PowerDescMsg( zdoIncomingMsg_t *inMsg,
ZDP_PowerDescMsg:
          CFI Block cfiBlock100 Using cfiCommon0
          CFI Function ZDP_PowerDescMsg
        CODE
//  857                      uint16 nwkAddr, NodePowerDescriptorFormat_t *pPowerDesc )
//  858 {
        FUNCALL ZDP_PowerDescMsg, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
//  859   uint8 *pBuf = ZDP_TmpBuf;
        LCALL     ?Subroutine54 & 0xFFFF
??CrossCallReturnLabel_162:
        MOV       R6,A
        MOV       A,R1
        MOV       R7,A
//  860   byte len = 1 + 2 + 2;  // Status + nwkAddr + Node Power descriptor.
//  861 
//  862   *pBuf++ = ZDP_SUCCESS;
        MOV       DPL,R0
        MOV       DPH,A
        CLR       A
        MOVX      @DPTR,A
//  863 
//  864   *pBuf++ = LO_UINT16( nwkAddr );
        MOV       A,R4
        LCALL     ?Subroutine33 & 0xFFFF
//  865   *pBuf++ = HI_UINT16( nwkAddr );
??CrossCallReturnLabel_44:
        MOVX      @DPTR,A
        MOV       A,#0xa
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine36 & 0xFFFF
//  866 
//  867   *pBuf++ = (byte)((pPowerDesc->AvailablePowerSources << 4)
//  868                     | (pPowerDesc->PowerMode & 0x0F));
??CrossCallReturnLabel_49:
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        LCALL     ?Subroutine90 & 0xFFFF
//  869   *pBuf++ = (byte)((pPowerDesc->CurrentPowerSourceLevel << 4)
//  870                     | (pPowerDesc->CurrentPowerSource & 0x0F));
??CrossCallReturnLabel_257:
        LCALL     ?Subroutine58 & 0xFFFF
??CrossCallReturnLabel_91:
        ANL       A,#0xf
        MOV       R1,A
        MOV       A,#0xc
        MOV       R0,#?V0
        LCALL     ?US_SHR
        MOV       A,?V0
        SWAP      A
        ORL       A,R1
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
//  871 
//  872   return fillAndSend( &(inMsg->TransSeq), &(inMsg->srcAddr), Power_Desc_rsp, len );
        ; Setup parameters for call to function fillAndSend
        MOV       ?V0,#0x3
        MOV       ?V1,#-0x80
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 12)
        MOV       R1,#0x5
        LCALL     ?Subroutine74 & 0xFFFF
??CrossCallReturnLabel_121:
        JNC       ??ZDP_PowerDescMsg_0
        INC       R3
??ZDP_PowerDescMsg_0:
        SJMP      ??Subroutine109_0
//  873 }
          CFI EndBlock cfiBlock100

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine74:
          CFI Block cfiCond101 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
          CFI Conditional ??CrossCallReturnLabel_120
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond102 Using cfiCommon0
          CFI (cfiCond102) Function ZDP_PowerDescMsg
          CFI (cfiCond102) Conditional ??CrossCallReturnLabel_121
          CFI (cfiCond102) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond102) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond102) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond102) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond102) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond102) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond102) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond102) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond102) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond102) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond102) CFA_SP SP+-2
          CFI (cfiCond102) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker103 Using cfiCommon1
          CFI (cfiPicker103) NoFunction
          CFI (cfiPicker103) Picker
        MOV       A,R2
        ADD       A,#0x2
        MOV       R4,A
        CLR       A
        ADDC      A,R3
        MOV       R5,A
        MOV       A,R2
        ADD       A,#0xf
        MOV       R2,A
        RET
          CFI EndBlock cfiCond101
          CFI EndBlock cfiCond102
          CFI EndBlock cfiPicker103

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine54:
          CFI Block cfiCond104 Using cfiCommon0
          CFI Function ZDP_PowerDescMsg
          CFI Conditional ??CrossCallReturnLabel_162
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond105 Using cfiCommon0
          CFI (cfiCond105) Function ZDP_ServerDiscRsp
          CFI (cfiCond105) Conditional ??CrossCallReturnLabel_163
          CFI (cfiCond105) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond105) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond105) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond105) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond105) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond105) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond105) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond105) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond105) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond105) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond105) CFA_SP SP+-2
          CFI (cfiCond105) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiPicker106 Using cfiCommon1
          CFI (cfiPicker106) NoFunction
          CFI (cfiPicker106) Picker
        MOV       DPTR,#ZDP_TmpBuf
          CFI EndBlock cfiCond104
          CFI EndBlock cfiCond105
          CFI EndBlock cfiPicker106
        REQUIRE ??Subroutine110_0
        ; // Fall through to label ??Subroutine110_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine110_0:
          CFI Block cfiCond107 Using cfiCommon0
          CFI Function zdpProcessAddrReq
          CFI Conditional ??CrossCallReturnLabel_161
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond108 Using cfiCommon0
          CFI (cfiCond108) Function ZDO_RemoveRegisteredCB
          CFI (cfiCond108) Conditional ??CrossCallReturnLabel_160
          CFI (cfiCond108) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond108) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond108) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond108) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond108) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond108) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond108) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond108) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond108) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond108) CFA_SP SP+-2
          CFI (cfiCond108) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond109 Using cfiCommon0
          CFI (cfiCond109) Function ZDP_PowerDescMsg
          CFI (cfiCond109) Conditional ??CrossCallReturnLabel_162
          CFI (cfiCond109) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond109) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond109) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond109) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond109) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond109) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond109) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond109) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond109) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond109) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond109) CFA_SP SP+-2
          CFI (cfiCond109) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond110 Using cfiCommon0
          CFI (cfiCond110) Function ZDP_ServerDiscRsp
          CFI (cfiCond110) Conditional ??CrossCallReturnLabel_163
          CFI (cfiCond110) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond110) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond110) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond110) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond110) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond110) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond110) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond110) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond110) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond110) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond110) CFA_SP SP+-2
          CFI (cfiCond110) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiPicker111 Using cfiCommon1
          CFI (cfiPicker111) NoFunction
          CFI (cfiPicker111) Picker
        LCALL     ?Subroutine81 & 0xFFFF
??CrossCallReturnLabel_164:
        RET
          CFI EndBlock cfiCond107
          CFI EndBlock cfiCond108
          CFI EndBlock cfiCond109
          CFI EndBlock cfiCond110
          CFI EndBlock cfiPicker111

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine81:
          CFI Block cfiCond112 Using cfiCommon0
          CFI Function ZDP_PowerDescMsg
          CFI Conditional ??CrossCallReturnLabel_164, ??CrossCallReturnLabel_162
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond113 Using cfiCommon0
          CFI (cfiCond113) Function ZDP_ServerDiscRsp
          CFI (cfiCond113) Conditional ??CrossCallReturnLabel_164, ??CrossCallReturnLabel_163
          CFI (cfiCond113) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond113) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond113) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond113) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond113) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond113) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond113) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond113) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond113) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond113) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond113) CFA_SP SP+-4
          CFI (cfiCond113) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond114 Using cfiCommon0
          CFI (cfiCond114) Function zdpProcessAddrReq
          CFI (cfiCond114) Conditional ??CrossCallReturnLabel_164, ??CrossCallReturnLabel_161
          CFI (cfiCond114) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond114) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond114) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond114) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond114) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond114) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond114) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond114) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond114) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond114) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond114) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond114) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond114) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond114) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond114) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond114) CFA_SP SP+-4
          CFI (cfiCond114) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond115 Using cfiCommon0
          CFI (cfiCond115) Function ZDO_RemoveRegisteredCB
          CFI (cfiCond115) Conditional ??CrossCallReturnLabel_164, ??CrossCallReturnLabel_160
          CFI (cfiCond115) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond115) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond115) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond115) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond115) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond115) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond115) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond115) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond115) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond115) CFA_SP SP+-4
          CFI (cfiCond115) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond116 Using cfiCommon0
          CFI (cfiCond116) Function ZDP_EPRsp
          CFI (cfiCond116) Conditional ??CrossCallReturnLabel_166, ??CrossCallReturnLabel_84
          CFI (cfiCond116) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond116) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond116) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond116) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond116) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond116) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond116) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond116) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond116) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond116) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond116) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond116) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond116) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond116) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond116) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond116) CFA_SP SP+-4
          CFI (cfiCond116) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond117 Using cfiCommon0
          CFI (cfiCond117) Function ZDP_EndDeviceBindReq
          CFI (cfiCond117) Conditional ??CrossCallReturnLabel_166, ??CrossCallReturnLabel_85
          CFI (cfiCond117) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond117) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond117) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond117) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond117) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond117) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond117) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond117) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond117) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond117) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond117) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond117) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond117) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond117) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond117) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond117) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond117) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond117) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond117) CFA_SP SP+-4
          CFI (cfiCond117) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond118 Using cfiCommon0
          CFI (cfiCond118) Function ZDP_ServerDiscRsp
          CFI (cfiCond118) Conditional ??CrossCallReturnLabel_165, ??CrossCallReturnLabel_76
          CFI (cfiCond118) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond118) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond118) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond118) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond118) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond118) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond118) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond118) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond118) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond118) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond118) CFA_SP SP+-4
          CFI (cfiCond118) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond119 Using cfiCommon0
          CFI (cfiCond119) Function ZDP_MgmtNwkUpdateReq
          CFI (cfiCond119) Conditional ??CrossCallReturnLabel_165, ??CrossCallReturnLabel_77
          CFI (cfiCond119) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond119) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond119) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond119) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond119) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond119) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond119) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond119) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond119) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond119) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond119) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond119) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond119) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond119) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond119) CFA_SP SP+-4
          CFI (cfiCond119) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker120 Using cfiCommon1
          CFI (cfiPicker120) NoFunction
          CFI (cfiPicker120) Picker
        MOVX      A,@DPTR
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R1,A
        MOV       A,R0
        RET
          CFI EndBlock cfiCond112
          CFI EndBlock cfiCond113
          CFI EndBlock cfiCond114
          CFI EndBlock cfiCond115
          CFI EndBlock cfiCond116
          CFI EndBlock cfiCond117
          CFI EndBlock cfiCond118
          CFI EndBlock cfiCond119
          CFI EndBlock cfiPicker120

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine33:
          CFI Block cfiCond121 Using cfiCommon0
          CFI Function ZDP_MatchDescReq
          CFI Conditional ??CrossCallReturnLabel_43
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond122 Using cfiCommon0
          CFI (cfiCond122) Function ZDP_PowerDescMsg
          CFI (cfiCond122) Conditional ??CrossCallReturnLabel_44
          CFI (cfiCond122) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond122) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond122) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond122) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond122) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond122) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond122) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond122) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond122) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond122) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond122) CFA_SP SP+-2
          CFI (cfiCond122) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker123 Using cfiCommon1
          CFI (cfiPicker123) NoFunction
          CFI (cfiPicker123) Picker
        INC       DPTR
        MOVX      @DPTR,A
        MOV       A,R5
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond121
          CFI EndBlock cfiCond122
          CFI EndBlock cfiPicker123
//  874 
//  875 /*********************************************************************
//  876  * @fn          ZDP_SimpleDescMsg
//  877  *
//  878  * @brief       Builds and sends a Simple Descriptor message, unicast to the
//  879  *              specified device.
//  880  *
//  881  * @param       inMsg - incoming message (request)
//  882  * @param       Status - message status (ZDP_SUCCESS or other)
//  883  * @param       pSimpleDesc - pointer to the node descriptor
//  884  *
//  885  * @return      afStatus_t
//  886  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  887 afStatus_t ZDP_SimpleDescMsg( zdoIncomingMsg_t *inMsg, byte Status,
ZDP_SimpleDescMsg:
          CFI Block cfiBlock124 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
        CODE
//  888                               SimpleDescriptionFormat_t *pSimpleDesc )
//  889 {
        FUNCALL ZDP_SimpleDescMsg, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        MOV       A,#-0x14
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
        ; Saved register size: 20
        ; Auto size: 0
        MOV       ?V0,R2
        MOV       ?V1,R3
        LCALL     ?Subroutine55 & 0xFFFF
//  890   uint8 *pBuf = ZDP_TmpBuf;
//  891   uint8 i, len;
//  892 
//  893   if ( Status == ZDP_SUCCESS && pSimpleDesc )
??CrossCallReturnLabel_270:
        MOV       A,R4
        ADD       A,#0x9
        MOV       R2,A
        CLR       A
        ADDC      A,R5
        MOV       ?V4,R2
        MOV       ?V5,A
        MOV       A,R4
        ADD       A,#0x6
        MOV       R2,A
        CLR       A
        ADDC      A,R5
        MOV       ?V6,R2
        MOV       ?V7,A
        MOV       A,R6
        JNZ       ??ZDP_SimpleDescMsg_0
        MOV       A,R4
        ORL       A,R5
        JZ        ??ZDP_SimpleDescMsg_0
//  894   {
//  895     // Status + NWKAddrOfInterest + desc length + empty simple descriptor.
//  896     len = 1 + 2 + 1 + 8;
//  897     len += (pSimpleDesc->AppNumInClusters + pSimpleDesc->AppNumOutClusters) * sizeof ( uint16 );
        MOV       DPL,?V4
        MOV       DPH,?V5
        MOVX      A,@DPTR
        MOV       R2,A
        MOV       DPL,?V6
        MOV       DPH,?V7
        MOVX      A,@DPTR
        ADD       A,R2
        CLR       C
        RLC       A
        ADD       A,#0xc
        MOV       R2,A
//  898   }
//  899   else
//  900   {
//  901     len = 1 + 2 + 1; // Status + desc length
//  902   }
//  903   if ( len >= ZDP_BUF_SZ-1 )
        CLR       C
        SUBB      A,#0x4f
        JC        ??ZDP_SimpleDescMsg_1
//  904   {
//  905     return afStatus_MEM_FAIL;
        MOV       R1,#0x10
        LJMP      ??ZDP_SimpleDescMsg_2 & 0xFFFF
//  906   }
??ZDP_SimpleDescMsg_0:
        MOV       R2,#0x4
//  907 
//  908   *pBuf++ = Status;
??ZDP_SimpleDescMsg_1:
        MOV       A,R6
        MOV       DPL,R0
        MOV       DPH,R1
        MOVX      @DPTR,A
//  909 
//  910   *pBuf++ = LO_UINT16( ZDAppNwkAddr.addr.shortAddr );
        MOV       DPTR,#ZDAppNwkAddr
        LCALL     ??Subroutine117_0 & 0xFFFF
??CrossCallReturnLabel_192:
        INC       DPTR
        MOVX      @DPTR,A
//  911   *pBuf++ = HI_UINT16( ZDAppNwkAddr.addr.shortAddr );
        MOV       DPTR,#ZDAppNwkAddr + 1
        LCALL     ?Subroutine60 & 0xFFFF
??CrossCallReturnLabel_96:
        MOVX      @DPTR,A
//  912 
//  913   if ( len > 4 )
        MOV       A,R0
        ADD       A,#0x3
        MOV       DPL,A
        CLR       A
        ADDC      A,R1
        MOV       DPH,A
        MOV       A,R2
        CLR       C
        SUBB      A,#0x5
        JNC       $+5
        LJMP      ??ZDP_SimpleDescMsg_3 & 0xFFFF
//  914   {
//  915     *pBuf++ = len - 4;   // Simple descriptor length
        MOV       A,#-0x4
        ADD       A,R2
        MOVX      @DPTR,A
//  916 
//  917     *pBuf++ = pSimpleDesc->EndPoint;
        MOV       DPL,R4
        MOV       DPH,R5
        LCALL     ?Subroutine60 & 0xFFFF
??CrossCallReturnLabel_97:
        LCALL     ?Subroutine29 & 0xFFFF
//  918     *pBuf++ = LO_UINT16( pSimpleDesc->AppProfId );
??CrossCallReturnLabel_167:
        MOV       ?V2,DPL
        MOV       ?V3,DPH
        LCALL     ??Subroutine117_0 & 0xFFFF
??CrossCallReturnLabel_193:
        LCALL     ?Subroutine11 & 0xFFFF
//  919     *pBuf++ = HI_UINT16( pSimpleDesc->AppProfId );
??CrossCallReturnLabel_2:
        MOVX      @DPTR,A
//  920     *pBuf++ = LO_UINT16( pSimpleDesc->AppDeviceId );
        MOV       A,R4
        ADD       A,#0x3
        MOV       ?V2,A
        CLR       A
        ADDC      A,R5
        MOV       ?V3,A
        MOV       DPL,?V2
        MOV       DPH,A
        LCALL     ?Subroutine60 & 0xFFFF
??CrossCallReturnLabel_98:
        LCALL     ?Subroutine11 & 0xFFFF
//  921     *pBuf++ = HI_UINT16( pSimpleDesc->AppDeviceId );
??CrossCallReturnLabel_3:
        LCALL     ?Subroutine29 & 0xFFFF
//  922 
//  923     *pBuf++ = (byte)(pSimpleDesc->AppDevVer & 0x0F);
??CrossCallReturnLabel_168:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        ANL       A,#0xf
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
//  924 
//  925     *pBuf++ = pSimpleDesc->AppNumInClusters;
        MOV       DPL,?V6
        MOV       DPH,?V7
        LCALL     ?Subroutine52 & 0xFFFF
??CrossCallReturnLabel_82:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
        MOV       A,R0
        ADD       A,#0xb
        MOV       R0,A
        JNC       ??ZDP_SimpleDescMsg_4
        INC       R1
//  926     if ( pSimpleDesc->AppNumInClusters )
??ZDP_SimpleDescMsg_4:
        MOV       DPL,?V6
        MOV       DPH,?V7
        MOVX      A,@DPTR
        JZ        ??ZDP_SimpleDescMsg_5
//  927     {
//  928       for (i=0; i<pSimpleDesc->AppNumInClusters; ++i)
        MOV       R3,#0x0
        MOV       A,R4
        ADD       A,#0x7
        MOV       ?V2,A
        CLR       A
        ADDC      A,R5
        MOV       ?V8,?V2
        MOV       ?V9,A
        SJMP      ??ZDP_SimpleDescMsg_6
//  929       {
//  930         *pBuf++ = LO_UINT16( pSimpleDesc->pAppInClusterList[i] );
??ZDP_SimpleDescMsg_7:
        MOV       A,R3
        LCALL     ?Subroutine96 & 0xFFFF
??CrossCallReturnLabel_151:
        LCALL     ?Subroutine62 & 0xFFFF
??CrossCallReturnLabel_99:
        LCALL     ?Subroutine35 & 0xFFFF
//  931         *pBuf++ = HI_UINT16( pSimpleDesc->pAppInClusterList[i] );
??CrossCallReturnLabel_190:
        LCALL     ?Subroutine62 & 0xFFFF
//  932       }
??CrossCallReturnLabel_100:
        LCALL     ?Subroutine47 & 0xFFFF
??CrossCallReturnLabel_74:
        JNC       ??ZDP_SimpleDescMsg_8
        INC       R1
??ZDP_SimpleDescMsg_8:
        INC       R3
??ZDP_SimpleDescMsg_6:
        MOV       DPL,?V6
        MOV       DPH,?V7
        MOVX      A,@DPTR
        MOV       R7,A
        MOV       A,R3
        CLR       C
        SUBB      A,R7
        JC        ??ZDP_SimpleDescMsg_7
//  933     }
//  934 
//  935     *pBuf++ = pSimpleDesc->AppNumOutClusters;
??ZDP_SimpleDescMsg_5:
        MOV       DPL,?V4
        MOV       DPH,?V5
        LCALL     ??Subroutine115_0 & 0xFFFF
??CrossCallReturnLabel_186:
        INC       DPTR
        MOV       R0,DPL
        MOV       R1,DPH
//  936     if ( pSimpleDesc->AppNumOutClusters )
        MOV       DPL,?V4
        MOV       DPH,?V5
        MOVX      A,@DPTR
        JZ        ??ZDP_SimpleDescMsg_9
//  937     {
//  938       for (i=0; i<pSimpleDesc->AppNumOutClusters; ++i)
        MOV       R3,#0x0
        MOV       A,R4
        ADD       A,#0xa
        JNC       ??ZDP_SimpleDescMsg_10
        INC       R5
??ZDP_SimpleDescMsg_10:
        MOV       ?V2,A
        MOV       ?V3,R5
??ZDP_SimpleDescMsg_11:
        MOV       DPL,?V4
        MOV       DPH,?V5
        MOVX      A,@DPTR
        MOV       R4,A
        MOV       A,R3
        CLR       C
        SUBB      A,R4
        JNC       ??ZDP_SimpleDescMsg_9
//  939       {
//  940         *pBuf++ = LO_UINT16( pSimpleDesc->pAppOutClusterList[i] );
        MOV       A,R3
        ADD       A,0xE0 /* A   */
        MOV       R4,A
        CLR       A
        RLC       A
        MOV       R5,A
        MOV       DPL,?V2
        MOV       DPH,?V3
        MOVX      A,@DPTR
        ADD       A,R4
        MOV       R7,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,R5
        LCALL     ?Subroutine35 & 0xFFFF
//  941         *pBuf++ = HI_UINT16( pSimpleDesc->pAppOutClusterList[i] );
??CrossCallReturnLabel_191:
        MOV       DPL,?V2
        MOV       DPH,?V3
        MOVX      A,@DPTR
        ADD       A,R4
        MOV       R7,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,R5
        LCALL     ?Subroutine47 & 0xFFFF
//  942       }
??CrossCallReturnLabel_75:
        JNC       ??ZDP_SimpleDescMsg_12
        INC       R1
??ZDP_SimpleDescMsg_12:
        INC       R3
        SJMP      ??ZDP_SimpleDescMsg_11
//  943     }
//  944   }
//  945 
//  946   else
//  947   {
//  948     *pBuf = 0; // Description Length = 0;
??ZDP_SimpleDescMsg_3:
        CLR       A
        MOVX      @DPTR,A
//  949   }
//  950 
//  951   return fillAndSend( &(inMsg->TransSeq), &(inMsg->srcAddr), Simple_Desc_rsp, len );
??ZDP_SimpleDescMsg_9:
        ; Setup parameters for call to function fillAndSend
        MOV       ?V2,#0x4
        MOV       ?V3,#-0x80
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       A,R2
        MOV       R1,A
        LCALL     ?Subroutine72 & 0xFFFF
??CrossCallReturnLabel_119:
        LCALL     ??Subroutine123_0 & 0xFFFF
??CrossCallReturnLabel_225:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 20)
??ZDP_SimpleDescMsg_2:
        LJMP      ?Subroutine4 & 0xFFFF
//  952 }
          CFI EndBlock cfiBlock124

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine96:
          CFI Block cfiCond125 Using cfiCommon0
          CFI Function ZDP_MatchDescReq
          CFI Conditional ??CrossCallReturnLabel_152, ??CrossCallReturnLabel_0
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond126 Using cfiCommon0
          CFI (cfiCond126) Function ZDP_MatchDescReq
          CFI (cfiCond126) Conditional ??CrossCallReturnLabel_152, ??CrossCallReturnLabel_1
          CFI (cfiCond126) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond126) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond126) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond126) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond126) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond126) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond126) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond126) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond126) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond126) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond126) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond126) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond126) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond126) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond126) CFA_SP SP+-4
          CFI (cfiCond126) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond127 Using cfiCommon0
          CFI (cfiCond127) Function ZDP_SimpleDescMsg
          CFI (cfiCond127) Conditional ??CrossCallReturnLabel_151
          CFI (cfiCond127) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond127) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond127) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond127) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond127) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond127) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond127) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond127) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond127) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond127) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond127) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond127) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond127) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond127) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond127) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond127) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond127) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond127) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond127) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond127) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond127) CFA_SP SP+-2
          CFI (cfiCond127) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker128 Using cfiCommon1
          CFI (cfiPicker128) NoFunction
          CFI (cfiPicker128) Picker
        ADD       A,0xE0 /* A   */
        MOV       ?V2,A
        CLR       A
        RLC       A
        MOV       ?V3,A
        RET
          CFI EndBlock cfiCond125
          CFI EndBlock cfiCond126
          CFI EndBlock cfiCond127
          CFI EndBlock cfiPicker128

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine72:
          CFI Block cfiCond129 Using cfiCommon0
          CFI Function zdpProcessAddrReq
          CFI Conditional ??CrossCallReturnLabel_118
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond130 Using cfiCommon0
          CFI (cfiCond130) Function ZDP_SimpleDescMsg
          CFI (cfiCond130) Conditional ??CrossCallReturnLabel_119
          CFI (cfiCond130) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond130) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond130) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond130) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond130) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond130) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond130) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond130) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond130) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond130) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond130) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond130) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond130) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond130) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond130) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond130) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond130) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond130) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond130) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond130) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond130) CFA_SP SP+-2
          CFI (cfiCond130) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker131 Using cfiCommon1
          CFI (cfiPicker131) NoFunction
          CFI (cfiPicker131) Picker
        MOV       A,?V0
        ADD       A,#0x2
        MOV       R4,A
        CLR       A
        ADDC      A,?V1
        MOV       R5,A
        MOV       A,?V0
        ADD       A,#0xf
        MOV       R2,A
        CLR       A
        ADDC      A,?V1
        MOV       R3,A
        RET
          CFI EndBlock cfiCond129
          CFI EndBlock cfiCond130
          CFI EndBlock cfiPicker131

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine62:
          CFI Block cfiCond132 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
          CFI Conditional ??CrossCallReturnLabel_99
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond133 Using cfiCommon0
          CFI (cfiCond133) Function ZDP_SimpleDescMsg
          CFI (cfiCond133) Conditional ??CrossCallReturnLabel_100
          CFI (cfiCond133) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond133) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond133) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond133) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond133) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond133) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond133) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond133) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond133) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond133) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond133) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond133) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond133) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond133) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond133) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond133) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond133) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond133) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond133) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond133) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond133) CFA_SP SP+-2
          CFI (cfiCond133) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker134 Using cfiCommon1
          CFI (cfiPicker134) NoFunction
          CFI (cfiPicker134) Picker
        MOV       DPL,?V8
        MOV       DPH,?V9
        MOVX      A,@DPTR
        ADD       A,?V2
        MOV       R7,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,?V3
        RET
          CFI EndBlock cfiCond132
          CFI EndBlock cfiCond133
          CFI EndBlock cfiPicker134

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine60:
          CFI Block cfiCond135 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
          CFI Conditional ??CrossCallReturnLabel_96
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond136 Using cfiCommon0
          CFI (cfiCond136) Function ZDP_SimpleDescMsg
          CFI (cfiCond136) Conditional ??CrossCallReturnLabel_97
          CFI (cfiCond136) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond136) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond136) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond136) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond136) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond136) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond136) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond136) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond136) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond136) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond136) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond136) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond136) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond136) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond136) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond136) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond136) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond136) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond136) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond136) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond136) CFA_SP SP+-2
          CFI (cfiCond136) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond137 Using cfiCommon0
          CFI (cfiCond137) Function ZDP_SimpleDescMsg
          CFI (cfiCond137) Conditional ??CrossCallReturnLabel_98
          CFI (cfiCond137) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond137) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond137) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond137) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond137) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond137) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond137) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond137) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond137) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond137) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond137) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond137) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond137) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond137) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond137) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond137) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond137) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond137) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond137) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond137) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond137) CFA_SP SP+-2
          CFI (cfiCond137) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker138 Using cfiCommon1
          CFI (cfiPicker138) NoFunction
          CFI (cfiPicker138) Picker
        LCALL     ??Subroutine118_0 & 0xFFFF
??CrossCallReturnLabel_197:
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond135
          CFI EndBlock cfiCond136
          CFI EndBlock cfiCond137
          CFI EndBlock cfiPicker138

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine47:
          CFI Block cfiCond139 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
          CFI Conditional ??CrossCallReturnLabel_74
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond140 Using cfiCommon0
          CFI (cfiCond140) Function ZDP_SimpleDescMsg
          CFI (cfiCond140) Conditional ??CrossCallReturnLabel_75
          CFI (cfiCond140) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond140) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond140) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond140) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond140) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond140) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond140) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond140) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond140) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond140) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond140) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond140) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond140) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond140) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond140) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond140) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond140) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond140) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond140) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond140) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond140) CFA_SP SP+-2
          CFI (cfiCond140) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker141 Using cfiCommon1
          CFI (cfiPicker141) NoFunction
          CFI (cfiPicker141) Picker
        MOV       DPL,R7
        MOV       DPH,A
        LCALL     ?Subroutine77 & 0xFFFF
??CrossCallReturnLabel_128:
        RET
          CFI EndBlock cfiCond139
          CFI EndBlock cfiCond140
          CFI EndBlock cfiPicker141

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine77:
          CFI Block cfiCond142 Using cfiCommon0
          CFI Function ZDP_MatchDescReq
          CFI Conditional ??CrossCallReturnLabel_127, ??CrossCallReturnLabel_0
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond143 Using cfiCommon0
          CFI (cfiCond143) Function ZDP_MatchDescReq
          CFI (cfiCond143) Conditional ??CrossCallReturnLabel_127, ??CrossCallReturnLabel_1
          CFI (cfiCond143) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond143) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond143) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond143) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond143) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond143) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond143) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond143) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond143) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond143) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond143) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond143) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond143) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond143) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond143) CFA_SP SP+-4
          CFI (cfiCond143) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond144 Using cfiCommon0
          CFI (cfiCond144) Function ZDP_SimpleDescMsg
          CFI (cfiCond144) Conditional ??CrossCallReturnLabel_128, ??CrossCallReturnLabel_74
          CFI (cfiCond144) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond144) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond144) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond144) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond144) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond144) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond144) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond144) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond144) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond144) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond144) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond144) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond144) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond144) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond144) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond144) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond144) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond144) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond144) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond144) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond144) CFA_SP SP+-4
          CFI (cfiCond144) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond145 Using cfiCommon0
          CFI (cfiCond145) Function ZDP_SimpleDescMsg
          CFI (cfiCond145) Conditional ??CrossCallReturnLabel_128, ??CrossCallReturnLabel_75
          CFI (cfiCond145) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond145) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond145) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond145) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond145) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond145) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond145) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond145) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond145) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond145) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond145) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond145) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond145) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond145) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond145) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond145) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond145) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond145) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond145) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond145) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond145) CFA_SP SP+-4
          CFI (cfiCond145) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker146 Using cfiCommon1
          CFI (cfiPicker146) NoFunction
          CFI (cfiPicker146) Picker
        INC       DPTR
        MOVX      A,@DPTR
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        MOVX      @DPTR,A
        MOV       A,R0
        ADD       A,#0x2
        MOV       R0,A
        RET
          CFI EndBlock cfiCond142
          CFI EndBlock cfiCond143
          CFI EndBlock cfiCond144
          CFI EndBlock cfiCond145
          CFI EndBlock cfiPicker146

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine29:
          CFI Block cfiCond147 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
          CFI Conditional ??CrossCallReturnLabel_167
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond148 Using cfiCommon0
          CFI (cfiCond148) Function ZDP_SimpleDescMsg
          CFI (cfiCond148) Conditional ??CrossCallReturnLabel_168
          CFI (cfiCond148) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond148) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond148) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond148) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond148) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond148) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond148) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond148) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond148) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond148) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond148) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond148) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond148) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond148) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond148) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond148) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond148) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond148) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond148) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond148) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond148) CFA_SP SP+-2
          CFI (cfiCond148) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker149 Using cfiCommon1
          CFI (cfiPicker149) NoFunction
          CFI (cfiPicker149) Picker
        INC       DPTR
        INC       DPTR
          CFI EndBlock cfiCond147
          CFI EndBlock cfiCond148
          CFI EndBlock cfiPicker149
        REQUIRE ??Subroutine111_0
        ; // Fall through to label ??Subroutine111_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine111_0:
          CFI Block cfiCond150 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
          CFI Conditional ??CrossCallReturnLabel_169
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond151 Using cfiCommon0
          CFI (cfiCond151) Function ZDP_SimpleDescMsg
          CFI (cfiCond151) Conditional ??CrossCallReturnLabel_167
          CFI (cfiCond151) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond151) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond151) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond151) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond151) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond151) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond151) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond151) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond151) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond151) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond151) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond151) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond151) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond151) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond151) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond151) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond151) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond151) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond151) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond151) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond151) CFA_SP SP+-2
          CFI (cfiCond151) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond152 Using cfiCommon0
          CFI (cfiCond152) Function ZDP_SimpleDescMsg
          CFI (cfiCond152) Conditional ??CrossCallReturnLabel_168
          CFI (cfiCond152) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond152) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond152) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond152) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond152) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond152) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond152) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond152) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond152) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond152) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond152) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond152) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond152) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond152) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond152) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond152) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond152) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond152) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond152) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond152) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond152) CFA_SP SP+-2
          CFI (cfiCond152) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker153 Using cfiCommon1
          CFI (cfiPicker153) NoFunction
          CFI (cfiPicker153) Picker
        MOVX      @DPTR,A
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        RET
          CFI EndBlock cfiCond150
          CFI EndBlock cfiCond151
          CFI EndBlock cfiCond152
          CFI EndBlock cfiPicker153

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine11:
          CFI Block cfiCond154 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
          CFI Conditional ??CrossCallReturnLabel_2
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond155 Using cfiCommon0
          CFI (cfiCond155) Function ZDP_SimpleDescMsg
          CFI (cfiCond155) Conditional ??CrossCallReturnLabel_3
          CFI (cfiCond155) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond155) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond155) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond155) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond155) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond155) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond155) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond155) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond155) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond155) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond155) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond155) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond155) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond155) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond155) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond155) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond155) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond155) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond155) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond155) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond155) CFA_SP SP+-2
          CFI (cfiCond155) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker156 Using cfiCommon1
          CFI (cfiPicker156) NoFunction
          CFI (cfiPicker156) Picker
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine93 & 0xFFFF
??CrossCallReturnLabel_145:
        LCALL     ?Subroutine79 & 0xFFFF
??CrossCallReturnLabel_131:
        INC       DPTR
        RET
          CFI EndBlock cfiCond154
          CFI EndBlock cfiCond155
          CFI EndBlock cfiPicker156
//  953 
//  954 /*********************************************************************
//  955  * @fn          ZDP_EPRsp
//  956  *
//  957  * @brief       This builds and send an endpoint list. Used in
//  958  *              Active_EP_rsp and Match_Desc_Rsp
//  959  *              message.  This function sends unicast message to the
//  960  *              requesting device.
//  961  *
//  962  * @param       MsgType - either Active_EP_rsp or Match_Desc_Rsp
//  963  * @param       dstAddr - destination address
//  964  * @param       Status - message status (ZDP_SUCCESS or other)
//  965  * @param       nwkAddr - Device's short address that this response describes
//  966  * @param       Count - number of endpoint/interfaces in list
//  967  * @param       pEPIntfList - Array of Endpoint/Interfaces
//  968  * @param       SecurityEnable - Security Options
//  969  *
//  970  * @return      afStatus_t
//  971  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  972 afStatus_t ZDP_EPRsp( uint16 MsgType, byte TransSeq, zAddrType_t *dstAddr,
ZDP_EPRsp:
          CFI Block cfiBlock157 Using cfiCommon0
          CFI Function ZDP_EPRsp
        CODE
//  973                         byte Status, uint16 nwkAddr, byte Count,
//  974                         uint8 *pEPList,
//  975                         byte SecurityEnable )
//  976 {
        FUNCALL ZDP_EPRsp, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 19, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_EPRsp, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        MOV       A,#-0xf
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
        ; Saved register size: 15
        ; Auto size: 1
        MOV       A,#-0x1
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
        MOV       A,R1
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
        MOV       ?V2,R2
        MOV       ?V3,R3
        MOV       A,R4
        MOV       R6,A
        MOV       A,R5
        MOV       R7,A
//  977   uint8 *pBuf = ZDP_TmpBuf;
        MOV       DPTR,#ZDP_TmpBuf
        LCALL     ?Subroutine53 & 0xFFFF
//  978   byte len = 1 + 2 + 1;  // Status + nwkAddr + endpoint/interface count.
??CrossCallReturnLabel_84:
        MOV       ?V0,#0x4
//  979   byte txOptions;
//  980 
//  981   (void)SecurityEnable;  // Intentionally unreferenced parameter
//  982 
//  983   if ( MsgType == Match_Desc_rsp )
        MOV       A,#0x6
        XRL       A,?V2
        JNZ       ??ZDP_EPRsp_0
        MOV       A,#-0x80
        XRL       A,?V3
??ZDP_EPRsp_0:
        JNZ       ??ZDP_EPRsp_1
//  984     txOptions = AF_MSG_ACK_REQUEST;
        MOV       ?V1,#0x10
        SJMP      ??ZDP_EPRsp_2
//  985   else
//  986     txOptions = 0;
??ZDP_EPRsp_1:
        MOV       ?V1,#0x0
//  987 
//  988     *pBuf++ = Status;
??ZDP_EPRsp_2:
        MOV       A,#0x10
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine115_0 & 0xFFFF
??CrossCallReturnLabel_187:
        MOV       A,#0x11
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine14 & 0xFFFF
//  989   *pBuf++ = LO_UINT16( nwkAddr );
//  990   *pBuf++ = HI_UINT16( nwkAddr );
??CrossCallReturnLabel_8:
        MOV       A,#0x13
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       R1,A
//  991 
//  992   *pBuf++ = Count;   // Endpoint/Interface count
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
//  993 
//  994   if ( Count )
        JZ        ??ZDP_EPRsp_3
//  995   {
//  996     len += Count;
        MOV       A,#0x4
        ADD       A,R1
        MOV       ?V0,A
//  997     osal_memcpy( pBuf, pEPList, Count );
        ; Setup parameters for call to function osal_memcpy
        MOV       A,#0x14
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine44 & 0xFFFF
//  998   }
??CrossCallReturnLabel_67:
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 19)
        MOV       A,R1
        MOV       R4,A
        MOV       R5,#0x0
        MOV       A,R2
        ADD       A,#0x4
        MOV       R2,A
        JNC       ??ZDP_EPRsp_4
        INC       R3
??ZDP_EPRsp_4:
        LCALL     ??Subroutine112_0 & 0xFFFF
??CrossCallReturnLabel_173:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
//  999 
// 1000   FillAndSendTxOptions( &TransSeq, dstAddr, MsgType, len, txOptions );
??ZDP_EPRsp_3:
        MOV       A,?V1
        MOV       DPTR,#ZDP_TxOptions
        MOVX      @DPTR,A
        ; Setup parameters for call to function fillAndSend
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 18)
        MOV       R1,?V0
        MOV       A,R6
        MOV       R4,A
        MOV       A,R7
        MOV       R5,A
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP101_8
        LCALL     ??Subroutine123_0 & 0xFFFF
??CrossCallReturnLabel_226:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
        MOV       A,R1
        MOV       R1,A
        MOV       DPTR,#ZDP_TxOptions
        CLR       A
        MOVX      @DPTR,A
        INC       A
        LJMP      ?Subroutine3 & 0xFFFF
// 1001 }
          CFI EndBlock cfiBlock157
// 1002 
// 1003 /*********************************************************************
// 1004  * @fn          ZDP_UserDescRsp
// 1005  *
// 1006  * @brief       Build and send the User Decriptor Response.
// 1007  *
// 1008  *
// 1009  * @param       dstAddr - destination address
// 1010  * @param       nwkAddrOfInterest -
// 1011  * @param       userDesc -
// 1012  * @param       SecurityEnable - Security Options
// 1013  *
// 1014  * @return      ZStatus_t
// 1015  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1016 ZStatus_t ZDP_UserDescRsp( byte TransSeq, zAddrType_t *dstAddr,
ZDP_UserDescRsp:
          CFI Block cfiBlock158 Using cfiCommon0
          CFI Function ZDP_UserDescRsp
        CODE
// 1017                 uint16 nwkAddrOfInterest, UserDescriptorFormat_t *userDesc,
// 1018                 byte SecurityEnable )
// 1019 {
        FUNCALL ZDP_UserDescRsp, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_UserDescRsp, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V8
        REQUIRE ?V9
        MOV       A,#-0x12
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
        ; Saved register size: 18
        ; Auto size: 1
        MOV       A,#-0x1
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
        MOV       A,R1
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
        LCALL     ?Subroutine84 & 0xFFFF
// 1020   uint8 *pBuf = ZDP_TmpBuf;
??CrossCallReturnLabel_281:
        MOV       ?V0,R0
        MOV       ?V1,A
        MOV       A,#0x13
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine129_0 & 0xFFFF
??CrossCallReturnLabel_282:
        MOV       ?V8,R0
        MOV       ?V9,A
// 1021   byte len = 1 + 2 + 1;  // Status + nwkAddr + descriptor length.
// 1022 
// 1023   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1024 
// 1025   len += userDesc->len;
        MOV       DPL,R0
        MOV       DPH,A
        MOVX      A,@DPTR
        ADD       A,#0x4
        MOV       ?V2,A
// 1026 
// 1027   *pBuf++ = ZSUCCESS;
        MOV       DPL,?V0
        MOV       DPH,?V1
        CLR       A
        MOVX      @DPTR,A
// 1028 
// 1029   *pBuf++ = LO_UINT16( nwkAddrOfInterest );
        MOV       A,R4
        INC       DPTR
        MOVX      @DPTR,A
// 1030   *pBuf++ = HI_UINT16( nwkAddrOfInterest );
        MOV       A,R5
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
// 1031 
// 1032   *pBuf++ = userDesc->len;
        MOV       DPL,R0
        MOV       DPH,?V9
        LCALL     ?Subroutine56 & 0xFFFF
??CrossCallReturnLabel_86:
        INC       DPTR
        MOVX      @DPTR,A
// 1033   osal_memcpy( pBuf, userDesc->desc, userDesc->len );
        ; Setup parameters for call to function osal_memcpy
        MOV       DPL,R0
        MOV       DPH,?V9
        INC       DPTR
        MOV       R1,DPL
        MOV       R2,DPH
        MOV       ?V4,R1
        MOV       ?V5,R2
        MOV       ?V6,#0x0
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       DPL,?V8
        MOV       DPH,?V9
        MOVX      A,@DPTR
        MOV       R4,A
        MOV       R5,#0x0
        MOV       A,?V0
        ADD       A,#0x4
        MOV       R2,A
        CLR       A
        ADDC      A,?V1
        MOV       R3,A
        LCALL     ??Subroutine112_0 & 0xFFFF
??CrossCallReturnLabel_174:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
// 1034 
// 1035   return (ZStatus_t)fillAndSend( &TransSeq, dstAddr, User_Desc_rsp, len );
        ; Setup parameters for call to function fillAndSend
        MOV       ?V0,#0x11
        MOV       ?V1,#-0x80
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       R1,?V2
        MOV       A,R6
        MOV       R4,A
        MOV       A,R7
        MOV       R5,A
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP101_8
        LCALL     ??Subroutine123_0 & 0xFFFF
??CrossCallReturnLabel_227:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
        LJMP      ?Subroutine5 & 0xFFFF
// 1036 }
          CFI EndBlock cfiBlock158

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine73:
          CFI Block cfiCond159 Using cfiCommon0
          CFI Function ZDO_SendMsgCBs
          CFI Conditional ??CrossCallReturnLabel_170
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond160 Using cfiCommon0
          CFI (cfiCond160) Function ZDO_SendMsgCBs
          CFI (cfiCond160) Conditional ??CrossCallReturnLabel_171
          CFI (cfiCond160) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond160) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond160) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond160) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond160) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond160) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond160) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond160) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond160) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond160) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond160) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond160) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond160) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond160) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond160) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond160) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond160) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond160) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond160) CFA_SP SP+-2
          CFI (cfiCond160) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker161 Using cfiCommon1
          CFI (cfiPicker161) NoFunction
          CFI (cfiPicker161) Picker
        MOV       R5,#0x0
          CFI EndBlock cfiCond159
          CFI EndBlock cfiCond160
          CFI EndBlock cfiPicker161
        REQUIRE ??Subroutine112_0
        ; // Fall through to label ??Subroutine112_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine112_0:
          CFI Block cfiCond162 Using cfiCommon0
          CFI Function ZDP_UserDescSet
          CFI Conditional ??CrossCallReturnLabel_172
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond163 Using cfiCommon0
          CFI (cfiCond163) Function ZDP_EPRsp
          CFI (cfiCond163) Conditional ??CrossCallReturnLabel_173
          CFI (cfiCond163) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond163) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond163) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond163) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond163) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond163) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond163) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond163) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond163) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond163) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond163) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond163) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond163) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond163) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond163) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond163) CFA_SP SP+-2
          CFI (cfiCond163) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond164 Using cfiCommon0
          CFI (cfiCond164) Function ZDP_UserDescRsp
          CFI (cfiCond164) Conditional ??CrossCallReturnLabel_174
          CFI (cfiCond164) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond164) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond164) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond164) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond164) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond164) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond164) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond164) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond164) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond164) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond164) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond164) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond164) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond164) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond164) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond164) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond164) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond164) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond164) CFA_SP SP+-2
          CFI (cfiCond164) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond165 Using cfiCommon0
          CFI (cfiCond165) Function ZDP_MgmtNwkUpdateNotify
          CFI (cfiCond165) Conditional ??CrossCallReturnLabel_175
          CFI (cfiCond165) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond165) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond165) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond165) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond165) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond165) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond165) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond165) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond165) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond165) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond165) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond165) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond165) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond165) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond165) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond165) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond165) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond165) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond165) CFA_SP SP+-2
          CFI (cfiCond165) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond166 Using cfiCommon0
          CFI (cfiCond166) Function ZDO_SendMsgCBs
          CFI (cfiCond166) Conditional ??CrossCallReturnLabel_170
          CFI (cfiCond166) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond166) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond166) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond166) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond166) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond166) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond166) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond166) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond166) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond166) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond166) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond166) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond166) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond166) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond166) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond166) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond166) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond166) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond166) CFA_SP SP+-2
          CFI (cfiCond166) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond167 Using cfiCommon0
          CFI (cfiCond167) Function ZDO_SendMsgCBs
          CFI (cfiCond167) Conditional ??CrossCallReturnLabel_171
          CFI (cfiCond167) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond167) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond167) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond167) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond167) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond167) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond167) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond167) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond167) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond167) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond167) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond167) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond167) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond167) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond167) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond167) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond167) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond167) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond167) CFA_SP SP+-2
          CFI (cfiCond167) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker168 Using cfiCommon1
          CFI (cfiPicker168) NoFunction
          CFI (cfiPicker168) Picker
        LCALL     `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV       A,#0x3
        RET
          CFI EndBlock cfiCond162
          CFI EndBlock cfiCond163
          CFI EndBlock cfiCond164
          CFI EndBlock cfiCond165
          CFI EndBlock cfiCond166
          CFI EndBlock cfiCond167
          CFI EndBlock cfiPicker168
// 1037 
// 1038 /*********************************************************************
// 1039  * @fn          ZDP_ServerDiscRsp
// 1040  *
// 1041  * @brief       Build and send the Server_Discovery_rsp response.
// 1042  *
// 1043  * @param       transID - Transaction sequence number of request.
// 1044  * @param       dstAddr - Network Destination Address.
// 1045  * @param       status - Status of response to request.
// 1046  * @param       aoi - Network Address of Interest of request.
// 1047  * @param       serverMask - Bit map of service(s) being sought.
// 1048  * @param       SecurityEnable - Security Options
// 1049  *
// 1050  * @return      ZStatus_t
// 1051  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1052 ZStatus_t ZDP_ServerDiscRsp( byte transID, zAddrType_t *dstAddr, byte status,
ZDP_ServerDiscRsp:
          CFI Block cfiBlock169 Using cfiCommon0
          CFI Function ZDP_ServerDiscRsp
        CODE
// 1053                            uint16 aoi, uint16 serverMask, byte SecurityEnable )
// 1054 {
        FUNCALL ZDP_ServerDiscRsp, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 1
        MOV       A,#-0x1
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 11)
        MOV       A,R1
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
        MOV       A,R4
        MOV       R6,A
// 1055   const byte len = 1  + 2;  // status + aoi + mask.
// 1056   uint8 *pBuf = ZDP_TmpBuf;
        LCALL     ?Subroutine54 & 0xFFFF
??CrossCallReturnLabel_163:
        MOV       R4,A
        MOV       A,R1
        MOV       R5,A
// 1057   ZStatus_t stat;
// 1058 
// 1059   // Intentionally unreferenced parameters
// 1060   (void)aoi;
// 1061   (void)SecurityEnable;
// 1062 
// 1063   *pBuf++ = status;
        MOV       A,R6
        MOV       DPL,R0
        MOV       DPH,R1
        MOVX      @DPTR,A
        MOV       A,#0xd
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine48 & 0xFFFF
// 1064 
// 1065   *pBuf++ = LO_UINT16( serverMask );
??CrossCallReturnLabel_76:
        INC       DPTR
        MOVX      @DPTR,A
// 1066   *pBuf++ = HI_UINT16( serverMask );
        MOV       A,R1
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
// 1067 
// 1068   ZDP_TxOptions = AF_MSG_ACK_REQUEST;
        MOV       DPTR,#ZDP_TxOptions
        MOV       A,#0x10
        MOVX      @DPTR,A
// 1069   stat = fillAndSend( &transID, dstAddr, Server_Discovery_rsp, len );
        ; Setup parameters for call to function fillAndSend
        MOV       ?V0,#0x15
        MOV       ?V1,#-0x80
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 13)
        MOV       R1,#0x3
        MOV       A,R2
        MOV       R4,A
        MOV       A,R3
        MOV       R5,A
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP101_8
        LCALL     ??Subroutine123_0 & 0xFFFF
??CrossCallReturnLabel_228:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 11)
        MOV       A,R1
        MOV       R1,A
// 1070   ZDP_TxOptions = AF_TX_OPTIONS_NONE;
        MOV       DPTR,#ZDP_TxOptions
        CLR       A
        MOVX      @DPTR,A
// 1071 
// 1072   return ( stat );
        INC       A
        LJMP      ??Subroutine104_0 & 0xFFFF
// 1073 }
          CFI EndBlock cfiBlock169
// 1074 
// 1075 /*********************************************************************
// 1076  * @fn          ZDP_GenericRsp
// 1077  *
// 1078  * @brief       Sends a response message with only the parameter status
// 1079  *              byte and the addr of interest for data.
// 1080  *              This function sends unicast message to the
// 1081  *              requesting device.
// 1082  *
// 1083  * @param       dstAddr - destination address
// 1084  * @param       status  - generic status for response
// 1085  * @param       aoi     - address of interest
// 1086  * @param       dstAddr - destination address
// 1087  * @param       rspId   - response cluster ID
// 1088  * @param       SecurityEnable - Security Options
// 1089  *
// 1090  * @return      afStatus_t
// 1091  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1092 afStatus_t ZDP_GenericRsp( byte TransSeq, zAddrType_t *dstAddr,
ZDP_GenericRsp:
          CFI Block cfiBlock170 Using cfiCommon0
          CFI Function ZDP_GenericRsp
        CODE
// 1093                      byte status, uint16 aoi, uint16 rspID, byte SecurityEnable )
// 1094 {
        FUNCALL ZDP_GenericRsp, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV       A,#-0x9
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 1
        MOV       A,#-0x1
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
        MOV       A,R1
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
// 1095   uint8 len;
// 1096 
// 1097   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1098 
// 1099   ZDP_TmpBuf[0] = status;
        LCALL     ?Subroutine41 & 0xFFFF
??CrossCallReturnLabel_178:
        MOV       A,R4
        MOVX      @DPTR,A
        MOV       A,#0xa
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine131_0 & 0xFFFF
// 1100   ZDP_TmpBuf[1] = LO_UINT16( aoi );
??CrossCallReturnLabel_272:
        MOV       DPTR,#ZDP_TmpBuf
        MOVX      A,@DPTR
        MOV       R4,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       DPH,A
        MOV       DPL,R4
        INC       DPTR
        MOV       A,R0
        LCALL     ?Subroutine12 & 0xFFFF
// 1101   ZDP_TmpBuf[2] = HI_UINT16( aoi );
// 1102 
// 1103   // Length byte
// 1104   ZDP_TmpBuf[3] = 0;
??CrossCallReturnLabel_5:
        LCALL     ?Subroutine41 & 0xFFFF
??CrossCallReturnLabel_179:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        CLR       A
        MOVX      @DPTR,A
// 1105   len = 4;
// 1106 
// 1107   return fillAndSend( &TransSeq, dstAddr, rspID, len );
        ; Setup parameters for call to function fillAndSend
        MOV       A,#0xc
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 12)
        MOV       R1,#0x4
        MOV       A,R2
        MOV       R4,A
        MOV       A,R3
        MOV       R5,A
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP101_8
        LCALL     ??Subroutine123_0 & 0xFFFF
??CrossCallReturnLabel_229:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
        MOV       A,#0x1
        LCALL     ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock170
        REQUIRE ?Subroutine6
        ; // Fall through to label ?Subroutine6
// 1108 }

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine6:
          CFI Block cfiBlock171 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       R7,#0x1
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock171

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine41:
          CFI Block cfiCond172 Using cfiCommon0
          CFI Function ZDP_DeviceAnnce
          CFI Conditional ??CrossCallReturnLabel_177
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond173 Using cfiCommon0
          CFI (cfiCond173) Function ZDP_GenericRsp
          CFI (cfiCond173) Conditional ??CrossCallReturnLabel_178
          CFI (cfiCond173) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond173) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond173) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond173) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond173) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond173) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond173) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond173) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond173) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond173) CFA_SP SP+-2
          CFI (cfiCond173) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond174 Using cfiCommon0
          CFI (cfiCond174) Function ZDP_GenericRsp
          CFI (cfiCond174) Conditional ??CrossCallReturnLabel_179
          CFI (cfiCond174) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond174) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond174) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond174) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond174) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond174) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond174) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond174) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond174) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond174) CFA_SP SP+-2
          CFI (cfiCond174) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond175 Using cfiCommon0
          CFI (cfiCond175) Function ZDP_MgmtPermitJoinReq
          CFI (cfiCond175) Conditional ??CrossCallReturnLabel_180
          CFI (cfiCond175) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond175) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond175) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond175) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond175) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond175) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond175) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond175) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond175) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond175) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond175) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond175) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond175) CFA_SP SP+-2
          CFI (cfiCond175) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond176 Using cfiCommon0
          CFI (cfiCond176) Function ZDP_MgmtLqiRsp
          CFI (cfiCond176) Conditional ??CrossCallReturnLabel_181
          CFI (cfiCond176) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond176) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond176) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond176) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond176) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond176) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond176) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond176) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond176) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond176) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond176) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond176) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond176) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond176) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond176) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond176) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond176) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond176) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond176) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond176) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond176) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond176) CFA_SP SP+-2
          CFI (cfiCond176) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker177 Using cfiCommon1
          CFI (cfiPicker177) NoFunction
          CFI (cfiPicker177) Picker
        MOV       DPTR,#ZDP_TmpBuf
          CFI EndBlock cfiCond172
          CFI EndBlock cfiCond173
          CFI EndBlock cfiCond174
          CFI EndBlock cfiCond175
          CFI EndBlock cfiCond176
          CFI EndBlock cfiPicker177
        REQUIRE ??Subroutine113_0
        ; // Fall through to label ??Subroutine113_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine113_0:
          CFI Block cfiCond178 Using cfiCommon0
          CFI Function ZDP_IncomingData
          CFI Conditional ??CrossCallReturnLabel_176
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond179 Using cfiCommon0
          CFI (cfiCond179) Function ZDP_DeviceAnnce
          CFI (cfiCond179) Conditional ??CrossCallReturnLabel_177
          CFI (cfiCond179) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond179) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond179) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond179) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond179) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond179) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond179) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond179) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond179) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond179) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond179) CFA_SP SP+-2
          CFI (cfiCond179) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond180 Using cfiCommon0
          CFI (cfiCond180) Function ZDP_GenericRsp
          CFI (cfiCond180) Conditional ??CrossCallReturnLabel_178
          CFI (cfiCond180) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond180) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond180) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond180) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond180) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond180) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond180) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond180) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond180) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond180) CFA_SP SP+-2
          CFI (cfiCond180) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond181 Using cfiCommon0
          CFI (cfiCond181) Function ZDP_GenericRsp
          CFI (cfiCond181) Conditional ??CrossCallReturnLabel_179
          CFI (cfiCond181) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond181) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond181) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond181) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond181) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond181) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond181) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond181) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond181) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond181) CFA_SP SP+-2
          CFI (cfiCond181) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond182 Using cfiCommon0
          CFI (cfiCond182) Function ZDP_MgmtPermitJoinReq
          CFI (cfiCond182) Conditional ??CrossCallReturnLabel_180
          CFI (cfiCond182) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond182) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond182) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond182) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond182) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond182) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond182) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond182) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond182) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond182) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond182) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond182) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond182) CFA_SP SP+-2
          CFI (cfiCond182) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond183 Using cfiCommon0
          CFI (cfiCond183) Function ZDP_MgmtLqiRsp
          CFI (cfiCond183) Conditional ??CrossCallReturnLabel_181
          CFI (cfiCond183) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond183) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond183) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond183) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond183) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond183) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond183) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond183) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond183) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond183) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond183) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond183) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond183) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond183) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond183) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond183) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond183) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond183) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond183) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond183) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond183) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond183) CFA_SP SP+-2
          CFI (cfiCond183) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker184 Using cfiCommon1
          CFI (cfiPicker184) NoFunction
          CFI (cfiPicker184) Picker
        LCALL     ?Subroutine83 & 0xFFFF
??CrossCallReturnLabel_183:
        RET
          CFI EndBlock cfiCond178
          CFI EndBlock cfiCond179
          CFI EndBlock cfiCond180
          CFI EndBlock cfiCond181
          CFI EndBlock cfiCond182
          CFI EndBlock cfiCond183
          CFI EndBlock cfiPicker184

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine83:
          CFI Block cfiCond185 Using cfiCommon0
          CFI Function ZDP_NWKAddrOfInterestReq
          CFI Conditional ??CrossCallReturnLabel_182, ??CrossCallReturnLabel_14
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond186 Using cfiCommon0
          CFI (cfiCond186) Function ZDP_SimpleDescReq
          CFI (cfiCond186) Conditional ??CrossCallReturnLabel_182, ??CrossCallReturnLabel_15
          CFI (cfiCond186) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond186) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond186) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond186) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond186) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond186) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond186) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond186) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond186) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond186) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond186) CFA_SP SP+-4
          CFI (cfiCond186) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond187 Using cfiCommon0
          CFI (cfiCond187) Function ZDP_DeviceAnnce
          CFI (cfiCond187) Conditional ??CrossCallReturnLabel_183, ??CrossCallReturnLabel_177
          CFI (cfiCond187) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond187) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond187) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond187) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond187) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond187) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond187) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond187) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond187) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond187) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond187) CFA_SP SP+-4
          CFI (cfiCond187) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond188 Using cfiCommon0
          CFI (cfiCond188) Function ZDP_GenericRsp
          CFI (cfiCond188) Conditional ??CrossCallReturnLabel_183, ??CrossCallReturnLabel_178
          CFI (cfiCond188) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond188) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond188) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond188) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond188) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond188) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond188) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond188) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond188) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond188) CFA_SP SP+-4
          CFI (cfiCond188) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond189 Using cfiCommon0
          CFI (cfiCond189) Function ZDP_GenericRsp
          CFI (cfiCond189) Conditional ??CrossCallReturnLabel_183, ??CrossCallReturnLabel_179
          CFI (cfiCond189) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond189) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond189) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond189) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond189) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond189) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond189) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond189) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond189) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond189) CFA_SP SP+-4
          CFI (cfiCond189) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond190 Using cfiCommon0
          CFI (cfiCond190) Function ZDP_MgmtPermitJoinReq
          CFI (cfiCond190) Conditional ??CrossCallReturnLabel_183, ??CrossCallReturnLabel_180
          CFI (cfiCond190) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond190) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond190) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond190) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond190) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond190) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond190) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond190) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond190) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond190) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond190) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond190) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond190) CFA_SP SP+-4
          CFI (cfiCond190) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond191 Using cfiCommon0
          CFI (cfiCond191) Function ZDP_MgmtLqiRsp
          CFI (cfiCond191) Conditional ??CrossCallReturnLabel_183, ??CrossCallReturnLabel_181
          CFI (cfiCond191) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond191) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond191) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond191) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond191) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond191) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond191) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond191) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond191) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond191) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond191) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond191) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond191) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond191) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond191) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond191) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond191) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond191) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond191) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond191) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond191) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond191) CFA_SP SP+-4
          CFI (cfiCond191) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond192 Using cfiCommon0
          CFI (cfiCond192) Function ZDP_IncomingData
          CFI (cfiCond192) Conditional ??CrossCallReturnLabel_183, ??CrossCallReturnLabel_176
          CFI (cfiCond192) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond192) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond192) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond192) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond192) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond192) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond192) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond192) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond192) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond192) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond192) CFA_SP SP+-4
          CFI (cfiCond192) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiPicker193 Using cfiCommon1
          CFI (cfiPicker193) NoFunction
          CFI (cfiPicker193) Picker
        LCALL     ?Subroutine98 & 0xFFFF
??CrossCallReturnLabel_185:
        RET
          CFI EndBlock cfiCond185
          CFI EndBlock cfiCond186
          CFI EndBlock cfiCond187
          CFI EndBlock cfiCond188
          CFI EndBlock cfiCond189
          CFI EndBlock cfiCond190
          CFI EndBlock cfiCond191
          CFI EndBlock cfiCond192
          CFI EndBlock cfiPicker193

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine98:
          CFI Block cfiCond194 Using cfiCommon0
          CFI Function ZDP_NWKAddrOfInterestReq
          CFI Conditional ??CrossCallReturnLabel_185, ??CrossCallReturnLabel_182, ??CrossCallReturnLabel_14
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-6
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond195 Using cfiCommon0
          CFI (cfiCond195) Function ZDP_SimpleDescReq
          CFI (cfiCond195) Conditional ??CrossCallReturnLabel_185, ??CrossCallReturnLabel_182, ??CrossCallReturnLabel_15
          CFI (cfiCond195) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond195) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond195) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond195) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond195) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond195) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond195) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond195) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond195) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond195) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond195) CFA_SP SP+-6
          CFI (cfiCond195) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond196 Using cfiCommon0
          CFI (cfiCond196) Function ZDP_DeviceAnnce
          CFI (cfiCond196) Conditional ??CrossCallReturnLabel_185, ??CrossCallReturnLabel_183, ??CrossCallReturnLabel_177
          CFI (cfiCond196) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond196) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond196) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond196) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond196) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond196) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond196) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond196) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond196) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond196) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond196) CFA_SP SP+-6
          CFI (cfiCond196) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond197 Using cfiCommon0
          CFI (cfiCond197) Function ZDP_GenericRsp
          CFI (cfiCond197) Conditional ??CrossCallReturnLabel_185, ??CrossCallReturnLabel_183, ??CrossCallReturnLabel_178
          CFI (cfiCond197) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond197) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond197) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond197) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond197) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond197) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond197) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond197) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond197) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond197) CFA_SP SP+-6
          CFI (cfiCond197) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond198 Using cfiCommon0
          CFI (cfiCond198) Function ZDP_GenericRsp
          CFI (cfiCond198) Conditional ??CrossCallReturnLabel_185, ??CrossCallReturnLabel_183, ??CrossCallReturnLabel_179
          CFI (cfiCond198) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond198) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond198) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond198) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond198) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond198) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond198) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond198) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond198) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond198) CFA_SP SP+-6
          CFI (cfiCond198) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond199 Using cfiCommon0
          CFI (cfiCond199) Function ZDP_MgmtPermitJoinReq
          CFI (cfiCond199) Conditional ??CrossCallReturnLabel_185, ??CrossCallReturnLabel_183, ??CrossCallReturnLabel_180
          CFI (cfiCond199) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond199) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond199) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond199) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond199) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond199) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond199) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond199) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond199) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond199) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond199) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond199) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond199) CFA_SP SP+-6
          CFI (cfiCond199) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond200 Using cfiCommon0
          CFI (cfiCond200) Function ZDP_MgmtLqiRsp
          CFI (cfiCond200) Conditional ??CrossCallReturnLabel_185, ??CrossCallReturnLabel_183, ??CrossCallReturnLabel_181
          CFI (cfiCond200) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond200) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond200) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond200) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond200) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond200) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond200) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond200) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond200) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond200) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond200) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond200) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond200) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond200) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond200) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond200) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond200) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond200) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond200) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond200) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond200) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond200) CFA_SP SP+-6
          CFI (cfiCond200) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond201 Using cfiCommon0
          CFI (cfiCond201) Function ZDP_IncomingData
          CFI (cfiCond201) Conditional ??CrossCallReturnLabel_185, ??CrossCallReturnLabel_183, ??CrossCallReturnLabel_176
          CFI (cfiCond201) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond201) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond201) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond201) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond201) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond201) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond201) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond201) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond201) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond201) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond201) CFA_SP SP+-6
          CFI (cfiCond201) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond202 Using cfiCommon0
          CFI (cfiCond202) Function ZDP_NWKAddrOfInterestReq
          CFI (cfiCond202) Conditional ??CrossCallReturnLabel_184, ??CrossCallReturnLabel_124, ??CrossCallReturnLabel_14
          CFI (cfiCond202) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond202) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond202) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond202) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond202) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond202) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond202) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond202) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond202) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond202) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond202) CFA_SP SP+-6
          CFI (cfiCond202) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond203 Using cfiCommon0
          CFI (cfiCond203) Function ZDP_SimpleDescReq
          CFI (cfiCond203) Conditional ??CrossCallReturnLabel_184, ??CrossCallReturnLabel_124, ??CrossCallReturnLabel_15
          CFI (cfiCond203) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond203) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond203) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond203) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond203) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond203) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond203) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond203) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond203) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond203) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond203) CFA_SP SP+-6
          CFI (cfiCond203) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond204 Using cfiCommon0
          CFI (cfiCond204) Function ZDP_SimpleDescReq
          CFI (cfiCond204) Conditional ??CrossCallReturnLabel_184, ??CrossCallReturnLabel_125, ??CrossCallReturnLabel_4
          CFI (cfiCond204) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond204) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond204) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond204) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond204) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond204) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond204) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond204) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond204) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond204) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond204) CFA_SP SP+-6
          CFI (cfiCond204) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond205 Using cfiCommon0
          CFI (cfiCond205) Function ZDP_GenericRsp
          CFI (cfiCond205) Conditional ??CrossCallReturnLabel_184, ??CrossCallReturnLabel_125, ??CrossCallReturnLabel_5
          CFI (cfiCond205) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond205) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond205) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond205) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond205) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond205) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond205) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond205) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond205) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond205) CFA_SP SP+-6
          CFI (cfiCond205) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond206 Using cfiCommon0
          CFI (cfiCond206) Function ZDP_DeviceAnnce
          CFI (cfiCond206) Conditional ??CrossCallReturnLabel_184, ??CrossCallReturnLabel_126, ??CrossCallReturnLabel_20
          CFI (cfiCond206) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond206) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond206) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond206) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond206) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond206) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond206) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond206) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond206) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond206) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond206) CFA_SP SP+-6
          CFI (cfiCond206) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond207 Using cfiCommon0
          CFI (cfiCond207) Function ZDP_MgmtPermitJoinReq
          CFI (cfiCond207) Conditional ??CrossCallReturnLabel_184, ??CrossCallReturnLabel_126, ??CrossCallReturnLabel_21
          CFI (cfiCond207) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond207) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond207) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond207) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond207) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond207) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond207) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond207) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond207) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond207) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond207) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond207) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond207) CFA_SP SP+-6
          CFI (cfiCond207) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker208 Using cfiCommon1
          CFI (cfiPicker208) NoFunction
          CFI (cfiPicker208) Picker
        MOVX      A,@DPTR
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       DPH,A
        MOV       DPL,R0
        RET
          CFI EndBlock cfiCond194
          CFI EndBlock cfiCond195
          CFI EndBlock cfiCond196
          CFI EndBlock cfiCond197
          CFI EndBlock cfiCond198
          CFI EndBlock cfiCond199
          CFI EndBlock cfiCond200
          CFI EndBlock cfiCond201
          CFI EndBlock cfiCond202
          CFI EndBlock cfiCond203
          CFI EndBlock cfiCond204
          CFI EndBlock cfiCond205
          CFI EndBlock cfiCond206
          CFI EndBlock cfiCond207
          CFI EndBlock cfiPicker208

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine12:
          CFI Block cfiCond209 Using cfiCommon0
          CFI Function ZDP_SimpleDescReq
          CFI Conditional ??CrossCallReturnLabel_4
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond210 Using cfiCommon0
          CFI (cfiCond210) Function ZDP_GenericRsp
          CFI (cfiCond210) Conditional ??CrossCallReturnLabel_5
          CFI (cfiCond210) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond210) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond210) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond210) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond210) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond210) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond210) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond210) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond210) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond210) CFA_SP SP+-2
          CFI (cfiCond210) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker211 Using cfiCommon1
          CFI (cfiPicker211) NoFunction
          CFI (cfiPicker211) Picker
        LCALL     ?Subroutine76 & 0xFFFF
??CrossCallReturnLabel_125:
        INC       DPTR
        MOV       A,R1
        MOVX      @DPTR,A
        RET
          CFI EndBlock cfiCond209
          CFI EndBlock cfiCond210
          CFI EndBlock cfiPicker211
// 1109 
// 1110 /*********************************************************************
// 1111  * Binding
// 1112  */
// 1113 /*********************************************************************
// 1114  * @fn          ZDP_EndDeviceBindReq
// 1115  *
// 1116  * @brief       This builds and sends a End_Device_Bind_req message.
// 1117  *              This function sends a unicast message.
// 1118  *
// 1119  * @param       dstAddr - destination address
// 1120  * @param       LocalCoordinator - short address of local coordinator
// 1121  * @param       epIntf - Endpoint/Interface of Simple Desc
// 1122  * @param       ProfileID - Profile ID
// 1123  *
// 1124  *   The Input cluster list is the opposite of what you would think.
// 1125  *   This is the output cluster list of this device
// 1126  * @param       NumInClusters - number of input clusters
// 1127  * @param       InClusterList - input cluster ID list
// 1128  *
// 1129  *   The Output cluster list is the opposite of what you would think.
// 1130  *   This is the input cluster list of this device
// 1131  * @param       NumOutClusters - number of output clusters
// 1132  * @param       OutClusterList - output cluster ID list
// 1133  *
// 1134  * @param       SecurityEnable - Security Options
// 1135  *
// 1136  * @return      afStatus_t
// 1137  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1138 afStatus_t ZDP_EndDeviceBindReq( zAddrType_t *dstAddr,
ZDP_EndDeviceBindReq:
          CFI Block cfiBlock212 Using cfiCommon0
          CFI Function ZDP_EndDeviceBindReq
        CODE
// 1139                                  uint16 LocalCoordinator,
// 1140                                  byte endPoint,
// 1141                                  uint16 ProfileID,
// 1142                                  byte NumInClusters, cId_t *InClusterList,
// 1143                                  byte NumOutClusters, cId_t *OutClusterList,
// 1144                                  byte SecurityEnable )
// 1145 {
        FUNCALL ZDP_EndDeviceBindReq, NLME_GetShortAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_EndDeviceBindReq, NLME_GetExtAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_EndDeviceBindReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_EndDeviceBindReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        MOV       A,#-0x12
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
        ; Saved register size: 18
        ; Auto size: 0
        MOV       ?V6,R2
        MOV       ?V7,R3
        MOV       ?V4,R4
        MOV       ?V5,R5
        MOV       ?V3,R1
// 1146   uint8 *pBuf = ZDP_TmpBuf;
        MOV       DPTR,#ZDP_TmpBuf
        LCALL     ?Subroutine58 & 0xFFFF
??CrossCallReturnLabel_92:
        MOV       A,#0x14
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       ?V2,A
        MOV       A,#0x17
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       R7,A
// 1147   uint8 i, len;
// 1148   uint8 *ieeeAddr;
// 1149 
// 1150   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1151 
// 1152   // LocalCoordinator + SrcExtAddr + ep + ProfileID +  NumInClusters + NumOutClusters.
// 1153   len = 2 + Z_EXTADDR_LEN + 1 + 2 + 1 + 1;
// 1154   len += (NumInClusters + NumOutClusters) * sizeof ( uint16 );
        MOV       A,?V2
        ADD       A,R7
        CLR       C
        RLC       A
        ADD       A,#0xf
        MOV       R6,A
// 1155 
// 1156   if ( len >= ZDP_BUF_SZ-1 )
        CLR       C
        SUBB      A,#0x4f
        JC        ??ZDP_EndDeviceBindReq_0
// 1157   {
// 1158     return afStatus_MEM_FAIL;
        MOV       R1,#0x10
        LJMP      ??ZDP_EndDeviceBindReq_1 & 0xFFFF
// 1159   }
// 1160 
// 1161   if ( LocalCoordinator != NLME_GetShortAddr() )
??ZDP_EndDeviceBindReq_0:
        ; Setup parameters for call to function NLME_GetShortAddr
        LCALL     `??NLME_GetShortAddr::?relay`; Banked call to: NLME_GetShortAddr
        MOV       A,R2
        XRL       A,?V4
        JNZ       ??ZDP_EndDeviceBindReq_2
        MOV       A,R3
        XRL       A,?V5
??ZDP_EndDeviceBindReq_2:
        JZ        ??ZDP_EndDeviceBindReq_3
// 1162   {
// 1163     return afStatus_INVALID_PARAMETER;
        MOV       R1,#0x2
        LJMP      ??ZDP_EndDeviceBindReq_1 & 0xFFFF
// 1164   }
// 1165 
// 1166   *pBuf++ = LO_UINT16( LocalCoordinator );
??ZDP_EndDeviceBindReq_3:
        MOV       DPL,?V0
        MOV       DPH,?V1
        MOV       A,?V4
        MOVX      @DPTR,A
// 1167   *pBuf++ = HI_UINT16( LocalCoordinator );
        MOV       A,?V5
        INC       DPTR
        MOVX      @DPTR,A
// 1168 
// 1169   ieeeAddr = NLME_GetExtAddr();
        ; Setup parameters for call to function NLME_GetExtAddr
        LCALL     `??NLME_GetExtAddr::?relay`; Banked call to: NLME_GetExtAddr
        MOV       ?V4,R2
        MOV       ?V5,R3
        MOV       R4,?V4
        MOV       R5,?V5
// 1170   pBuf = osal_cpyExtAddr( pBuf, ieeeAddr );
        ; Setup parameters for call to function sAddrExtCpy
        MOV       A,?V0
        ADD       A,#0x2
        MOV       R2,A
        CLR       A
        ADDC      A,?V1
        MOV       R3,A
        LCALL     ?Subroutine70 & 0xFFFF
// 1171 
// 1172   *pBuf++ = endPoint;
??CrossCallReturnLabel_113:
        MOV       A,#0x12
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine14 & 0xFFFF
// 1173 
// 1174   *pBuf++ = LO_UINT16( ProfileID );   // Profile ID
// 1175   *pBuf++ = HI_UINT16( ProfileID );
// 1176 
// 1177   *pBuf++ = NumInClusters; // Input cluster list
??CrossCallReturnLabel_9:
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOV       A,?V2
        MOVX      @DPTR,A
        MOV       A,R2
        ADD       A,#0x4
        MOV       ?V0,A
        CLR       A
        ADDC      A,R3
        MOV       ?V1,A
// 1178   for ( i = 0; i < NumInClusters; ++i )
        MOV       R4,#0x0
        MOV       A,#0x15
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine53 & 0xFFFF
??CrossCallReturnLabel_85:
        SJMP      ??ZDP_EndDeviceBindReq_4
// 1179   {
// 1180     *pBuf++ = LO_UINT16(InClusterList[i]);
??ZDP_EndDeviceBindReq_5:
        MOV       A,R4
        ADD       A,0xE0 /* A   */
        MOV       ?V4,A
        CLR       A
        RLC       A
        MOV       ?V5,A
        MOV       A,R2
        ADD       A,?V4
        MOV       ?V4,A
        MOV       A,R3
        ADDC      A,?V5
        MOV       ?V5,A
        MOV       DPL,?V4
        LCALL     ?Subroutine63 & 0xFFFF
// 1181     *pBuf++ = HI_UINT16(InClusterList[i]);
??CrossCallReturnLabel_101:
        MOV       DPL,?V4
        MOV       DPH,?V5
        INC       DPTR
        LCALL     ??Subroutine115_0 & 0xFFFF
// 1182   }
??CrossCallReturnLabel_188:
        MOV       A,?V0
        ADD       A,#0x2
        MOV       ?V0,A
        JNC       ??ZDP_EndDeviceBindReq_6
        INC       ?V1
??ZDP_EndDeviceBindReq_6:
        INC       R4
??ZDP_EndDeviceBindReq_4:
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        MOV       R0,DPL
        MOV       R1,DPH
        MOV       A,R4
        CLR       C
        SUBB      A,?V2
        JC        ??ZDP_EndDeviceBindReq_5
// 1183 
// 1184   *pBuf++ = NumOutClusters; // Output cluster list
        MOV       A,R7
        MOV       DPL,?V0
        MOV       DPH,?V1
        MOVX      @DPTR,A
        MOV       ?V0,R0
        MOV       ?V1,R1
// 1185   for ( i = 0; i < NumOutClusters; ++i )
        MOV       R4,#0x0
        MOV       A,#0x18
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine131_0 & 0xFFFF
??CrossCallReturnLabel_273:
        SJMP      ??ZDP_EndDeviceBindReq_7
// 1186   {
// 1187     *pBuf++ = LO_UINT16(OutClusterList[i]);
??ZDP_EndDeviceBindReq_8:
        MOV       A,R4
        ADD       A,0xE0 /* A   */
        MOV       R2,A
        CLR       A
        RLC       A
        MOV       R3,A
        MOV       A,R0
        ADD       A,R2
        MOV       R2,A
        MOV       A,R1
        ADDC      A,R3
        MOV       R3,A
        MOV       DPL,R2
        LCALL     ?Subroutine63 & 0xFFFF
// 1188     *pBuf++ = HI_UINT16(OutClusterList[i]);
??CrossCallReturnLabel_102:
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        LCALL     ?Subroutine85 & 0xFFFF
// 1189   }
??CrossCallReturnLabel_133:
        MOVX      @DPTR,A
        MOV       A,?V0
        ADD       A,#0x2
        MOV       ?V0,A
        JNC       ??ZDP_EndDeviceBindReq_9
        INC       ?V1
??ZDP_EndDeviceBindReq_9:
        INC       R4
??ZDP_EndDeviceBindReq_7:
        MOV       A,R4
        CLR       C
        SUBB      A,R7
        JC        ??ZDP_EndDeviceBindReq_8
// 1190 
// 1191   return fillAndSend( &ZDP_TransID, dstAddr, End_Device_Bind_req, len );
        ; Setup parameters for call to function fillAndSend
        MOV       ?V0,#0x20
        MOV       ?V1,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV       A,R6
        MOV       R1,A
        MOV       R4,?V6
        MOV       R5,?V7
        LCALL     ??Subroutine122_0 & 0xFFFF
??CrossCallReturnLabel_217:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 18)
??ZDP_EndDeviceBindReq_1:
        SJMP      ??Subroutine116_0
// 1192 }
          CFI EndBlock cfiBlock212

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine63:
          CFI Block cfiCond213 Using cfiCommon0
          CFI Function ZDP_EndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_101
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond214 Using cfiCommon0
          CFI (cfiCond214) Function ZDP_EndDeviceBindReq
          CFI (cfiCond214) Conditional ??CrossCallReturnLabel_102
          CFI (cfiCond214) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond214) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond214) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond214) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond214) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond214) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond214) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond214) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond214) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond214) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond214) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond214) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond214) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond214) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond214) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond214) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond214) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond214) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond214) CFA_SP SP+-2
          CFI (cfiCond214) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker215 Using cfiCommon1
          CFI (cfiPicker215) NoFunction
          CFI (cfiPicker215) Picker
        MOV       DPH,A
        MOVX      A,@DPTR
        MOV       DPL,?V0
        MOV       DPH,?V1
        MOVX      @DPTR,A
        RET
          CFI EndBlock cfiCond213
          CFI EndBlock cfiCond214
          CFI EndBlock cfiPicker215

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine58:
          CFI Block cfiCond216 Using cfiCommon0
          CFI Function ZDP_ParentAnnce
          CFI Conditional ??CrossCallReturnLabel_90
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond217 Using cfiCommon0
          CFI (cfiCond217) Function ZDP_PowerDescMsg
          CFI (cfiCond217) Conditional ??CrossCallReturnLabel_91
          CFI (cfiCond217) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond217) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond217) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond217) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond217) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond217) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond217) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond217) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond217) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond217) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond217) CFA_SP SP+-2
          CFI (cfiCond217) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond218 Using cfiCommon0
          CFI (cfiCond218) Function ZDP_EndDeviceBindReq
          CFI (cfiCond218) Conditional ??CrossCallReturnLabel_92
          CFI (cfiCond218) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond218) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond218) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond218) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond218) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond218) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond218) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond218) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond218) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond218) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond218) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond218) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond218) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond218) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond218) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond218) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond218) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond218) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond218) CFA_SP SP+-2
          CFI (cfiCond218) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond219 Using cfiCommon0
          CFI (cfiCond219) Function ZDO_SendMsgCBs
          CFI (cfiCond219) Conditional ??CrossCallReturnLabel_93
          CFI (cfiCond219) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond219) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond219) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond219) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond219) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond219) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond219) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond219) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond219) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond219) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond219) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond219) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond219) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond219) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond219) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond219) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond219) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond219) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond219) CFA_SP SP+-2
          CFI (cfiCond219) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker220 Using cfiCommon1
          CFI (cfiPicker220) NoFunction
          CFI (cfiPicker220) Picker
        MOVX      A,@DPTR
        MOV       ?V0,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V1,A
        RET
          CFI EndBlock cfiCond216
          CFI EndBlock cfiCond217
          CFI EndBlock cfiCond218
          CFI EndBlock cfiCond219
          CFI EndBlock cfiPicker220

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine53:
          CFI Block cfiCond221 Using cfiCommon0
          CFI Function ZDP_EPRsp
          CFI Conditional ??CrossCallReturnLabel_84
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond222 Using cfiCommon0
          CFI (cfiCond222) Function ZDP_EndDeviceBindReq
          CFI (cfiCond222) Conditional ??CrossCallReturnLabel_85
          CFI (cfiCond222) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond222) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond222) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond222) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond222) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond222) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond222) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond222) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond222) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond222) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond222) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond222) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond222) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond222) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond222) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond222) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond222) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond222) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond222) CFA_SP SP+-2
          CFI (cfiCond222) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker223 Using cfiCommon1
          CFI (cfiPicker223) NoFunction
          CFI (cfiPicker223) Picker
        LCALL     ?Subroutine81 & 0xFFFF
??CrossCallReturnLabel_166:
        MOV       R2,A
        MOV       A,R1
        MOV       R3,A
        RET
          CFI EndBlock cfiCond221
          CFI EndBlock cfiCond222
          CFI EndBlock cfiPicker223

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine35:
          CFI Block cfiCond224 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
          CFI Conditional ??CrossCallReturnLabel_190
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond225 Using cfiCommon0
          CFI (cfiCond225) Function ZDP_SimpleDescMsg
          CFI (cfiCond225) Conditional ??CrossCallReturnLabel_191
          CFI (cfiCond225) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond225) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond225) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond225) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond225) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond225) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond225) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond225) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond225) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond225) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond225) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond225) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond225) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond225) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond225) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond225) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond225) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond225) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond225) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond225) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond225) CFA_SP SP+-2
          CFI (cfiCond225) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker226 Using cfiCommon1
          CFI (cfiPicker226) NoFunction
          CFI (cfiPicker226) Picker
        MOV       DPL,R7
          CFI EndBlock cfiCond224
          CFI EndBlock cfiCond225
          CFI EndBlock cfiPicker226
        REQUIRE ??Subroutine114_0
        ; // Fall through to label ??Subroutine114_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine114_0:
          CFI Block cfiCond227 Using cfiCommon0
          CFI Function ZDP_MgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_189
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond228 Using cfiCommon0
          CFI (cfiCond228) Function ZDP_SimpleDescMsg
          CFI (cfiCond228) Conditional ??CrossCallReturnLabel_190
          CFI (cfiCond228) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond228) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond228) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond228) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond228) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond228) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond228) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond228) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond228) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond228) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond228) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond228) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond228) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond228) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond228) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond228) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond228) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond228) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond228) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond228) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond228) CFA_SP SP+-2
          CFI (cfiCond228) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond229 Using cfiCommon0
          CFI (cfiCond229) Function ZDP_SimpleDescMsg
          CFI (cfiCond229) Conditional ??CrossCallReturnLabel_191
          CFI (cfiCond229) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond229) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond229) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond229) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond229) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond229) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond229) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond229) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond229) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond229) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond229) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond229) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond229) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond229) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond229) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond229) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond229) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond229) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond229) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond229) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond229) CFA_SP SP+-2
          CFI (cfiCond229) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker230 Using cfiCommon1
          CFI (cfiPicker230) NoFunction
          CFI (cfiPicker230) Picker
        MOV       DPH,A
          CFI EndBlock cfiCond227
          CFI EndBlock cfiCond228
          CFI EndBlock cfiCond229
          CFI EndBlock cfiPicker230
        REQUIRE ??Subroutine115_0
        ; // Fall through to label ??Subroutine115_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine115_0:
          CFI Block cfiCond231 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
          CFI Conditional ??CrossCallReturnLabel_186
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond232 Using cfiCommon0
          CFI (cfiCond232) Function ZDP_EPRsp
          CFI (cfiCond232) Conditional ??CrossCallReturnLabel_187
          CFI (cfiCond232) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond232) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond232) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond232) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond232) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond232) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond232) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond232) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond232) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond232) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond232) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond232) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond232) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond232) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond232) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond232) CFA_SP SP+-2
          CFI (cfiCond232) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond233 Using cfiCommon0
          CFI (cfiCond233) Function ZDP_EndDeviceBindReq
          CFI (cfiCond233) Conditional ??CrossCallReturnLabel_188
          CFI (cfiCond233) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond233) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond233) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond233) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond233) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond233) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond233) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond233) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond233) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond233) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond233) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond233) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond233) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond233) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond233) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond233) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond233) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond233) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond233) CFA_SP SP+-2
          CFI (cfiCond233) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond234 Using cfiCommon0
          CFI (cfiCond234) Function ZDP_MgmtLqiRsp
          CFI (cfiCond234) Conditional ??CrossCallReturnLabel_189
          CFI (cfiCond234) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond234) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond234) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond234) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond234) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond234) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond234) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond234) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond234) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond234) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond234) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond234) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond234) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond234) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond234) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond234) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond234) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond234) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond234) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond234) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond234) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond234) CFA_SP SP+-2
          CFI (cfiCond234) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond235 Using cfiCommon0
          CFI (cfiCond235) Function ZDP_SimpleDescMsg
          CFI (cfiCond235) Conditional ??CrossCallReturnLabel_190
          CFI (cfiCond235) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond235) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond235) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond235) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond235) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond235) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond235) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond235) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond235) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond235) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond235) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond235) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond235) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond235) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond235) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond235) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond235) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond235) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond235) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond235) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond235) CFA_SP SP+-2
          CFI (cfiCond235) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond236 Using cfiCommon0
          CFI (cfiCond236) Function ZDP_SimpleDescMsg
          CFI (cfiCond236) Conditional ??CrossCallReturnLabel_191
          CFI (cfiCond236) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond236) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond236) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond236) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond236) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond236) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond236) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond236) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond236) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond236) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond236) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond236) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond236) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond236) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond236) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond236) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond236) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond236) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond236) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond236) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond236) CFA_SP SP+-2
          CFI (cfiCond236) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker237 Using cfiCommon1
          CFI (cfiPicker237) NoFunction
          CFI (cfiPicker237) Picker
        LCALL     ??Subroutine118_0 & 0xFFFF
??CrossCallReturnLabel_200:
        MOVX      @DPTR,A
        RET
          CFI EndBlock cfiCond231
          CFI EndBlock cfiCond232
          CFI EndBlock cfiCond233
          CFI EndBlock cfiCond234
          CFI EndBlock cfiCond235
          CFI EndBlock cfiCond236
          CFI EndBlock cfiPicker237

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine14:
          CFI Block cfiCond238 Using cfiCommon0
          CFI Function ZDP_EPRsp
          CFI Conditional ??CrossCallReturnLabel_8
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond239 Using cfiCommon0
          CFI (cfiCond239) Function ZDP_EndDeviceBindReq
          CFI (cfiCond239) Conditional ??CrossCallReturnLabel_9
          CFI (cfiCond239) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond239) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond239) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond239) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond239) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond239) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond239) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond239) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond239) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond239) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond239) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond239) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond239) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond239) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond239) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond239) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond239) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond239) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond239) CFA_SP SP+-2
          CFI (cfiCond239) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond240 Using cfiCommon0
          CFI (cfiCond240) Function ZDP_BindUnbindReq
          CFI (cfiCond240) Conditional ??CrossCallReturnLabel_10
          CFI (cfiCond240) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond240) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond240) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond240) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond240) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond240) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond240) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond240) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond240) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond240) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond240) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond240) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond240) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond240) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond240) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond240) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond240) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond240) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond240) CFA_SP SP+-2
          CFI (cfiCond240) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker241 Using cfiCommon1
          CFI (cfiPicker241) NoFunction
          CFI (cfiPicker241) Picker
        LCALL     ?Subroutine78 & 0xFFFF
??CrossCallReturnLabel_129:
        INC       DPTR
        LCALL     ?Subroutine92 & 0xFFFF
??CrossCallReturnLabel_143:
        MOVX      @DPTR,A
        RET
          CFI EndBlock cfiCond238
          CFI EndBlock cfiCond239
          CFI EndBlock cfiCond240
          CFI EndBlock cfiPicker241

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine5:
          CFI Block cfiBlock242 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 19)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       A,#0x1
        LCALL     ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock242
        REQUIRE ??Subroutine116_0
        ; // Fall through to label ??Subroutine116_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine116_0:
          CFI Block cfiBlock243 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       R7,#0xa
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock243
// 1193 
// 1194 /*********************************************************************
// 1195  * @fn          ZDP_BindUnbindReq
// 1196  *
// 1197  * @brief       This builds and send a Bind_req or Unbind_req message
// 1198  *              Depending on the ClusterID. This function
// 1199  *              sends a unicast message to the local coordinator.
// 1200  *
// 1201  * @param       BindOrUnbind - either Bind_req or Unbind_req
// 1202  * @param       dstAddr - destination address of the message
// 1203  * @param       SourceAddr - source 64 bit address of the binding
// 1204  * @param       SrcEPIntf - Source endpoint/interface
// 1205  * @param       ClusterID - Binding cluster ID
// 1206  * @param       DestinationAddr - destination 64 bit addr of binding
// 1207  * @param       DstEPIntf - destination endpoint/interface
// 1208  * @param       SecurityEnable - Security Options
// 1209  *
// 1210  * @return      afStatus_t
// 1211  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1212 afStatus_t ZDP_BindUnbindReq( uint16 BindOrUnbind, zAddrType_t *dstAddr,
ZDP_BindUnbindReq:
          CFI Block cfiBlock244 Using cfiCommon0
          CFI Function ZDP_BindUnbindReq
        CODE
// 1213                               uint8 *SourceAddr, byte SrcEndPoint,
// 1214                               cId_t ClusterID,
// 1215                               zAddrType_t *destinationAddr, byte DstEndPoint,
// 1216                               byte SecurityEnable )
// 1217 {
        FUNCALL ZDP_BindUnbindReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_BindUnbindReq, sAddrExtCpy
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 1, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_BindUnbindReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        MOV       A,#-0x12
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
        ; Saved register size: 18
        ; Auto size: 0
        MOV       ?V6,R2
        MOV       ?V7,R3
        MOV       ?V4,R4
        MOV       ?V5,R5
        MOV       ?V3,R1
// 1218   uint8 *pBuf = ZDP_TmpBuf;
        LCALL     ?Subroutine51 & 0xFFFF
// 1219   byte len;
// 1220 
// 1221   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1222 
// 1223   // SourceAddr + SrcEPIntf + ClusterID +  addrMode.
// 1224   len = Z_EXTADDR_LEN + 1 + sizeof( cId_t ) + sizeof( uint8 );
??CrossCallReturnLabel_266:
        MOV       ?V2,#0xc
        MOV       A,#0x16
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine125_0 & 0xFFFF
// 1225   if ( destinationAddr->addrMode == Addr64Bit )
??CrossCallReturnLabel_245:
        MOV       A,R6
        ADD       A,#0x8
        MOV       ?V0,A
        CLR       A
        ADDC      A,R7
        MOV       ?V1,A
        MOV       DPL,?V0
        MOV       DPH,A
        MOVX      A,@DPTR
        MOV       R0,A
        MOV       A,#0x3
        XRL       A,R0
        JNZ       ??ZDP_BindUnbindReq_0
// 1226     len += Z_EXTADDR_LEN + 1;     // +1 for DstEPIntf
        MOV       ?V2,#0x15
        SJMP      ??ZDP_BindUnbindReq_1
// 1227   else if ( destinationAddr->addrMode == AddrGroup )
??ZDP_BindUnbindReq_0:
        MOV       A,#0x1
        XRL       A,R0
        JNZ       ??ZDP_BindUnbindReq_1
// 1228     len += sizeof ( uint16 );
        MOV       ?V2,#0xe
// 1229 
// 1230   pBuf = osal_cpyExtAddr( pBuf, SourceAddr );
??ZDP_BindUnbindReq_1:
        ; Setup parameters for call to function sAddrExtCpy
        MOV       A,#0x12
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine40 & 0xFFFF
??CrossCallReturnLabel_61:
        LCALL     ?Subroutine70 & 0xFFFF
// 1231   *pBuf++ = SrcEndPoint;
??CrossCallReturnLabel_114:
        MOV       A,#0x14
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine14 & 0xFFFF
// 1232 
// 1233   *pBuf++ = LO_UINT16( ClusterID );
// 1234 
// 1235   *pBuf++ = HI_UINT16( ClusterID );
// 1236   *pBuf++ = destinationAddr->addrMode;
??CrossCallReturnLabel_10:
        MOV       DPL,?V0
        MOV       DPH,?V1
        LCALL     ?Subroutine42 & 0xFFFF
??CrossCallReturnLabel_63:
        JNC       ??ZDP_BindUnbindReq_2
        INC       R3
// 1237   if ( destinationAddr->addrMode == Addr64Bit )
??ZDP_BindUnbindReq_2:
        MOV       DPL,?V0
        MOV       DPH,?V1
        MOVX      A,@DPTR
        MOV       R0,A
        MOV       A,#0x3
        XRL       A,R0
        JNZ       ??ZDP_BindUnbindReq_3
// 1238   {
// 1239     pBuf = osal_cpyExtAddr( pBuf, destinationAddr->addr.extAddr );
// 1240     *pBuf = DstEndPoint;
        MOV       A,#0x18
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        ; Setup parameters for call to function sAddrExtCpy
        MOV       A,R6
        MOV       R4,A
        MOV       A,R7
        MOV       R5,A
        LCALL     ?Subroutine71 & 0xFFFF
// 1241   }
??CrossCallReturnLabel_117:
        POP       A
          CFI CFA_SP SP+0
        SJMP      ??CrossCallReturnLabel_105
// 1242   else if ( destinationAddr->addrMode == AddrGroup )
??ZDP_BindUnbindReq_3:
        MOV       A,#0x1
        XRL       A,R0
        JNZ       ??ZDP_BindUnbindReq_4
// 1243   {
// 1244     *pBuf++ = LO_UINT16( destinationAddr->addr.shortAddr );
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ??Subroutine124_0 & 0xFFFF
??CrossCallReturnLabel_236:
        MOVX      @DPTR,A
// 1245     *pBuf++ = HI_UINT16( destinationAddr->addr.shortAddr );
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        LCALL     ?Subroutine65 & 0xFFFF
// 1246   }
??CrossCallReturnLabel_105:
        MOVX      @DPTR,A
// 1247 
// 1248   FillAndSendTxOptions( &ZDP_TransID, dstAddr, BindOrUnbind, len, AF_MSG_ACK_REQUEST );
??ZDP_BindUnbindReq_4:
        MOV       DPTR,#ZDP_TxOptions
        MOV       A,#0x10
        MOVX      @DPTR,A
        ; Setup parameters for call to function fillAndSend
        MOV       R0,#?V6
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV       R1,?V2
        MOV       R4,?V4
        MOV       R5,?V5
        LCALL     ??Subroutine122_0 & 0xFFFF
??CrossCallReturnLabel_218:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 18)
        MOV       A,R1
        MOV       R1,A
        MOV       DPTR,#ZDP_TxOptions
        CLR       A
        MOVX      @DPTR,A
        LJMP      ??Subroutine116_0 & 0xFFFF
// 1249 }
          CFI EndBlock cfiBlock244

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine70:
          CFI Block cfiCond245 Using cfiCommon0
          CFI Function ZDP_EndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_113
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond246 Using cfiCommon0
          CFI (cfiCond246) Function ZDP_BindUnbindReq
          CFI (cfiCond246) Conditional ??CrossCallReturnLabel_114
          CFI (cfiCond246) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond246) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond246) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond246) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond246) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond246) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond246) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond246) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond246) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond246) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond246) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond246) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond246) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond246) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond246) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond246) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond246) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond246) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond246) CFA_SP SP+-2
          CFI (cfiCond246) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker247 Using cfiCommon1
          CFI (cfiPicker247) NoFunction
          CFI (cfiPicker247) Picker
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
        MOV       DPL,R2
        MOV       DPH,R3
        MOV       A,?V3
        MOVX      @DPTR,A
        RET
          CFI EndBlock cfiCond245
          CFI EndBlock cfiCond246
          CFI EndBlock cfiPicker247

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine40:
          CFI Block cfiCond248 Using cfiCommon0
          CFI Function ZDP_MatchDescReq
          CFI Conditional ??CrossCallReturnLabel_57
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond249 Using cfiCommon0
          CFI (cfiCond249) Function ZDP_MatchDescReq
          CFI (cfiCond249) Conditional ??CrossCallReturnLabel_58
          CFI (cfiCond249) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond249) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond249) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond249) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond249) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond249) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond249) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond249) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond249) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond249) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond249) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond249) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond249) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond249) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond249) CFA_SP SP+-2
          CFI (cfiCond249) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond250 Using cfiCommon0
          CFI (cfiCond250) Function ZDP_MatchDescReq
          CFI (cfiCond250) Conditional ??CrossCallReturnLabel_59
          CFI (cfiCond250) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond250) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond250) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond250) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond250) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond250) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond250) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond250) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond250) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond250) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond250) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond250) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond250) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond250) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond250) CFA_SP SP+-2
          CFI (cfiCond250) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond251 Using cfiCommon0
          CFI (cfiCond251) Function zdpProcessAddrReq
          CFI (cfiCond251) Conditional ??CrossCallReturnLabel_60
          CFI (cfiCond251) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond251) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond251) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond251) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond251) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond251) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond251) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond251) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond251) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond251) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond251) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond251) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond251) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond251) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond251) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond251) CFA_SP SP+-2
          CFI (cfiCond251) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond252 Using cfiCommon0
          CFI (cfiCond252) Function ZDP_BindUnbindReq
          CFI (cfiCond252) Conditional ??CrossCallReturnLabel_61
          CFI (cfiCond252) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond252) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond252) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond252) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond252) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond252) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond252) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond252) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond252) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond252) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond252) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond252) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond252) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond252) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond252) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond252) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond252) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond252) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond252) CFA_SP SP+-2
          CFI (cfiCond252) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond253 Using cfiCommon0
          CFI (cfiCond253) Function ZDP_MgmtRtgRsp
          CFI (cfiCond253) Conditional ??CrossCallReturnLabel_62
          CFI (cfiCond253) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond253) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond253) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond253) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond253) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond253) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond253) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond253) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond253) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond253) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond253) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond253) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond253) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond253) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond253) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond253) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond253) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond253) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond253) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond253) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond253) CFA_SP SP+-2
          CFI (cfiCond253) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker254 Using cfiCommon1
          CFI (cfiPicker254) NoFunction
          CFI (cfiPicker254) Picker
        MOVX      A,@DPTR
        MOV       R4,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R5,A
        RET
          CFI EndBlock cfiCond248
          CFI EndBlock cfiCond249
          CFI EndBlock cfiCond250
          CFI EndBlock cfiCond251
          CFI EndBlock cfiCond252
          CFI EndBlock cfiCond253
          CFI EndBlock cfiPicker254
// 1250 
// 1251 /*********************************************************************
// 1252  * Network Management
// 1253  */
// 1254 
// 1255 /*********************************************************************
// 1256  * @fn          ZDP_MgmtNwkDiscReq
// 1257  *
// 1258  * @brief       This builds and send a Mgmt_NWK_Disc_req message. This
// 1259  *              function sends a unicast message.
// 1260  *
// 1261  * @param       dstAddr - destination address of the message
// 1262  * @param       ScanChannels - 32 bit address bit map
// 1263  * @param       StartIndex - Starting index within the reporting network
// 1264  *                           list
// 1265  * @param       SecurityEnable - Security Options
// 1266  *
// 1267  * @return      afStatus_t
// 1268  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1269 afStatus_t ZDP_MgmtNwkDiscReq( zAddrType_t *dstAddr,
ZDP_MgmtNwkDiscReq:
          CFI Block cfiBlock255 Using cfiCommon0
          CFI Function ZDP_MgmtNwkDiscReq
        CODE
// 1270                                uint32 ScanChannels,
// 1271                                byte ScanDuration,
// 1272                                byte StartIndex,
// 1273                                byte SecurityEnable )
// 1274 {
        FUNCALL ZDP_MgmtNwkDiscReq, osal_buffer_uint32
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtNwkDiscReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV       A,R2
        MOV       R6,A
        MOV       A,R3
        MOV       R7,A
        MOV       ?V0,R1
        MOV       ?V1,R4
// 1275   uint8 *pBuf = ZDP_TmpBuf;
// 1276   byte len = sizeof( uint32 )+1+1;  // ScanChannels + ScanDuration + StartIndex.
// 1277 
// 1278   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1279 
// 1280   pBuf = osal_buffer_uint32( pBuf, ScanChannels );
        ; Setup parameters for call to function osal_buffer_uint32
        MOV       A,#0xc
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?PUSH_XSTACK8_X_FOUR
          CFI CFA_XSP16 add(XSP16, 16)
        LCALL     ?Subroutine50 & 0xFFFF
??CrossCallReturnLabel_80:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
        MOV       DPL,R2
        MOV       DPH,R3
// 1281 
// 1282   *pBuf++ = ScanDuration;
        MOV       A,?V0
        MOVX      @DPTR,A
// 1283   *pBuf = StartIndex;
        INC       DPTR
        MOV       A,?V1
        MOVX      @DPTR,A
// 1284 
// 1285   return fillAndSend( &ZDP_TransID, dstAddr, Mgmt_NWK_Disc_req, len );
        ; Setup parameters for call to function fillAndSend
        MOV       ?V2,#0x30
        MOV       ?V3,#0x0
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        MOV       R1,#0x6
        LJMP      ??Subroutine99_0 & 0xFFFF
// 1286 }
          CFI EndBlock cfiBlock255
// 1287 
// 1288 /*********************************************************************
// 1289  * @fn          ZDP_MgmtDirectJoinReq
// 1290  *
// 1291  * @brief       This builds and send a Mgmt_Direct_Join_req message. This
// 1292  *              function sends a unicast message.
// 1293  *
// 1294  * @param       dstAddr - destination address of the message
// 1295  * @param       deviceAddr - 64 bit IEEE Address
// 1296  * @param       SecurityEnable - Security Options
// 1297  *
// 1298  * @return      afStatus_t
// 1299  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1300 afStatus_t ZDP_MgmtDirectJoinReq( zAddrType_t *dstAddr,
ZDP_MgmtDirectJoinReq:
          CFI Block cfiBlock256 Using cfiCommon0
          CFI Function ZDP_MgmtDirectJoinReq
        CODE
// 1301                                uint8 *deviceAddr,
// 1302                                byte capInfo,
// 1303                                byte SecurityEnable )
// 1304 {
        FUNCALL ZDP_MgmtDirectJoinReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtDirectJoinReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        LCALL     ?Subroutine43 & 0xFFFF
// 1305   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1306 
// 1307   osal_cpyExtAddr( ZDP_TmpBuf, deviceAddr );
// 1308   ZDP_TmpBuf[Z_EXTADDR_LEN] = capInfo;
??CrossCallReturnLabel_65:
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        XCH       A,R0
        ADD       A,#0x8
        MOV       DPL,A
        CLR       A
        ADDC      A,R0
        MOV       DPH,A
        MOV       A,?V0
        MOVX      @DPTR,A
// 1309 
// 1310   return fillAndSend( &ZDP_TransID, dstAddr, Mgmt_Direct_Join_req, (Z_EXTADDR_LEN + 1) );
        ; Setup parameters for call to function fillAndSend
        MOV       ?V2,#0x35
        LJMP      ?Subroutine1 & 0xFFFF
// 1311 }
          CFI EndBlock cfiBlock256
// 1312 
// 1313 /*********************************************************************
// 1314  * @fn          ZDP_MgmtPermitJoinReq
// 1315  *
// 1316  * @brief       This builds and send a Mgmt_Permit_Join_req message.
// 1317  *
// 1318  * @param       dstAddr - destination address of the message
// 1319  * @param       duration - Permit duration
// 1320  * @param       TcSignificance - Trust Center Significance
// 1321  *
// 1322  * @return      afStatus_t
// 1323  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1324 afStatus_t ZDP_MgmtPermitJoinReq( zAddrType_t *dstAddr, byte duration,
ZDP_MgmtPermitJoinReq:
          CFI Block cfiBlock257 Using cfiCommon0
          CFI Function ZDP_MgmtPermitJoinReq
        CODE
// 1325                                   byte TcSignificance, byte SecurityEnable )
// 1326 {
        FUNCALL ZDP_MgmtPermitJoinReq, NLME_GetShortAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtPermitJoinReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtPermitJoinReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 9
        MOV       A,#-0x9
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       A,R2
        MOV       R6,A
        MOV       A,R3
        MOV       R7,A
// 1327   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1328 
// 1329   // Build buffer
// 1330   ZDP_TmpBuf[ZDP_MGMT_PERMIT_JOIN_REQ_DURATION] = duration;
        LCALL     ?Subroutine41 & 0xFFFF
??CrossCallReturnLabel_180:
        MOV       A,R1
        LCALL     ?Subroutine19 & 0xFFFF
// 1331   ZDP_TmpBuf[ZDP_MGMT_PERMIT_JOIN_REQ_TC_SIG]   = TcSignificance;
??CrossCallReturnLabel_21:
        MOV       A,R4
        MOVX      @DPTR,A
// 1332 
// 1333   // Check of this is a broadcast message
// 1334   if ( (dstAddr) && ((dstAddr->addrMode == Addr16Bit) || (dstAddr->addrMode == AddrBroadcast))
// 1335       && ((dstAddr->addr.shortAddr == NWK_BROADCAST_SHORTADDR_DEVALL)
// 1336           || (dstAddr->addr.shortAddr == NWK_BROADCAST_SHORTADDR_DEVZCZR)
// 1337           || (dstAddr->addr.shortAddr == NWK_BROADCAST_SHORTADDR_DEVRXON)) )
        MOV       A,R2
        ORL       A,R7
        JZ        ??ZDP_MgmtPermitJoinReq_0
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R0,A
        MOV       A,#0x2
        XRL       A,R0
        JZ        ??ZDP_MgmtPermitJoinReq_1
        MOV       A,#0xf
        XRL       A,R0
        JNZ       ??ZDP_MgmtPermitJoinReq_0
??ZDP_MgmtPermitJoinReq_1:
        MOV       DPL,R2
        MOV       DPH,R3
        LCALL     ??Subroutine131_0 & 0xFFFF
??CrossCallReturnLabel_274:
        MOV       A,#-0x1
        XRL       A,R0
        JNZ       ??ZDP_MgmtPermitJoinReq_2
        MOV       A,#-0x1
        XRL       A,R1
??ZDP_MgmtPermitJoinReq_2:
        JZ        ??ZDP_MgmtPermitJoinReq_3
        MOV       A,#-0x4
        XRL       A,R0
        JNZ       ??ZDP_MgmtPermitJoinReq_4
        MOV       A,#-0x1
        XRL       A,R1
??ZDP_MgmtPermitJoinReq_4:
        JZ        ??ZDP_MgmtPermitJoinReq_3
        MOV       A,#-0x3
        XRL       A,R0
        JNZ       ??ZDP_MgmtPermitJoinReq_5
        MOV       A,#-0x1
        XRL       A,R1
??ZDP_MgmtPermitJoinReq_5:
        JNZ       ??ZDP_MgmtPermitJoinReq_0
// 1338   {
// 1339     // Send this to our self as well as broadcast to network
// 1340     zAddrType_t tmpAddr;
// 1341 
// 1342     tmpAddr.addrMode = Addr16Bit;
??ZDP_MgmtPermitJoinReq_3:
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        MOV       A,#0x2
        MOVX      @DPTR,A
// 1343     tmpAddr.addr.shortAddr = NLME_GetShortAddr();
        ; Setup parameters for call to function NLME_GetShortAddr
        LCALL     `??NLME_GetShortAddr::?relay`; Banked call to: NLME_GetShortAddr
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOV       A,R2
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R3
        MOVX      @DPTR,A
// 1344 
// 1345     fillAndSend( &ZDP_TransID, &tmpAddr, Mgmt_Permit_Join_req,
// 1346                       ZDP_MGMT_PERMIT_JOIN_REQ_SIZE );
        ; Setup parameters for call to function fillAndSend
        MOV       ?V2,#0x36
        MOV       ?V3,#0x0
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       R1,#0x2
        MOV       A,R1
        LCALL     ?XSTACK_DISP102_8
        LCALL     ??Subroutine122_0 & 0xFFFF
// 1347   }
??CrossCallReturnLabel_219:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
// 1348 
// 1349   // Send the message
// 1350   return fillAndSend( &ZDP_TransID, dstAddr, Mgmt_Permit_Join_req,
// 1351                       ZDP_MGMT_PERMIT_JOIN_REQ_SIZE );
??ZDP_MgmtPermitJoinReq_0:
        ; Setup parameters for call to function fillAndSend
        MOV       ?V2,#0x36
        MOV       ?V3,#0x0
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       R1,#0x2
        MOV       A,R6
        MOV       R4,A
        MOV       A,R7
        MOV       R5,A
        LJMP      ?Subroutine9 & 0xFFFF
// 1352 }
          CFI EndBlock cfiBlock257

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine19:
          CFI Block cfiCond258 Using cfiCommon0
          CFI Function ZDP_DeviceAnnce
          CFI Conditional ??CrossCallReturnLabel_20
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond259 Using cfiCommon0
          CFI (cfiCond259) Function ZDP_MgmtPermitJoinReq
          CFI (cfiCond259) Conditional ??CrossCallReturnLabel_21
          CFI (cfiCond259) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond259) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond259) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond259) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond259) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond259) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond259) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond259) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond259) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond259) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond259) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond259) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond259) CFA_SP SP+-2
          CFI (cfiCond259) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker260 Using cfiCommon1
          CFI (cfiPicker260) NoFunction
          CFI (cfiPicker260) Picker
        LCALL     ?Subroutine76 & 0xFFFF
??CrossCallReturnLabel_126:
        RET
          CFI EndBlock cfiCond258
          CFI EndBlock cfiCond259
          CFI EndBlock cfiPicker260

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine76:
          CFI Block cfiCond261 Using cfiCommon0
          CFI Function ZDP_NWKAddrOfInterestReq
          CFI Conditional ??CrossCallReturnLabel_124, ??CrossCallReturnLabel_14
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond262 Using cfiCommon0
          CFI (cfiCond262) Function ZDP_SimpleDescReq
          CFI (cfiCond262) Conditional ??CrossCallReturnLabel_124, ??CrossCallReturnLabel_15
          CFI (cfiCond262) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond262) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond262) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond262) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond262) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond262) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond262) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond262) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond262) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond262) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond262) CFA_SP SP+-4
          CFI (cfiCond262) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond263 Using cfiCommon0
          CFI (cfiCond263) Function ZDP_SimpleDescReq
          CFI (cfiCond263) Conditional ??CrossCallReturnLabel_125, ??CrossCallReturnLabel_4
          CFI (cfiCond263) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond263) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond263) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond263) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond263) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond263) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond263) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond263) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond263) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond263) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond263) CFA_SP SP+-4
          CFI (cfiCond263) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond264 Using cfiCommon0
          CFI (cfiCond264) Function ZDP_GenericRsp
          CFI (cfiCond264) Conditional ??CrossCallReturnLabel_125, ??CrossCallReturnLabel_5
          CFI (cfiCond264) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond264) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond264) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond264) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond264) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond264) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond264) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond264) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond264) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond264) CFA_SP SP+-4
          CFI (cfiCond264) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond265 Using cfiCommon0
          CFI (cfiCond265) Function ZDP_DeviceAnnce
          CFI (cfiCond265) Conditional ??CrossCallReturnLabel_126, ??CrossCallReturnLabel_20
          CFI (cfiCond265) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond265) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond265) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond265) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond265) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond265) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond265) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond265) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond265) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond265) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond265) CFA_SP SP+-4
          CFI (cfiCond265) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond266 Using cfiCommon0
          CFI (cfiCond266) Function ZDP_MgmtPermitJoinReq
          CFI (cfiCond266) Conditional ??CrossCallReturnLabel_126, ??CrossCallReturnLabel_21
          CFI (cfiCond266) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond266) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond266) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond266) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond266) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond266) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond266) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond266) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond266) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond266) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond266) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond266) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond266) CFA_SP SP+-4
          CFI (cfiCond266) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker267 Using cfiCommon1
          CFI (cfiPicker267) NoFunction
          CFI (cfiPicker267) Picker
        MOVX      @DPTR,A
        MOV       DPTR,#ZDP_TmpBuf
        LCALL     ?Subroutine98 & 0xFFFF
??CrossCallReturnLabel_184:
        INC       DPTR
        RET
          CFI EndBlock cfiCond261
          CFI EndBlock cfiCond262
          CFI EndBlock cfiCond263
          CFI EndBlock cfiCond264
          CFI EndBlock cfiCond265
          CFI EndBlock cfiCond266
          CFI EndBlock cfiPicker267
// 1353 
// 1354 /*********************************************************************
// 1355  * @fn          ZDP_MgmtLeaveReq
// 1356  *
// 1357  * @brief       This builds and send a Mgmt_Leave_req message.
// 1358  *
// 1359  * @param       dstAddr - destination address of the message
// 1360  *              IEEEAddr - IEEE adddress of device that is removed
// 1361  *              RemoveChildren - set to 1 to remove the children of the
// 1362  *                                device as well. 0 otherwise.
// 1363  *              Rejoin - set to 1 if the removed device should rejoin
// 1364                          afterwards. 0 otherwise.
// 1365  *
// 1366  * @return      afStatus_t
// 1367  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1368 afStatus_t ZDP_MgmtLeaveReq( zAddrType_t *dstAddr, uint8 *IEEEAddr, uint8 RemoveChildren,
ZDP_MgmtLeaveReq:
          CFI Block cfiBlock268 Using cfiCommon0
          CFI Function ZDP_MgmtLeaveReq
        CODE
// 1369                  uint8 Rejoin, uint8 SecurityEnable )
// 1370 
// 1371 {
        FUNCALL ZDP_MgmtLeaveReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtLeaveReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        LCALL     ?Subroutine43 & 0xFFFF
// 1372   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1373 
// 1374   osal_cpyExtAddr( ZDP_TmpBuf, IEEEAddr );
// 1375   ZDP_TmpBuf[Z_EXTADDR_LEN] = 0;
??CrossCallReturnLabel_66:
        ADD       A,#0x8
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,#0x0
        MOV       R1,A
        MOV       DPL,R0
        MOV       DPH,A
        CLR       A
        MOVX      @DPTR,A
// 1376 
// 1377   if ( RemoveChildren == TRUE )
        INC       A
        XRL       A,?V0
        JNZ       ??ZDP_MgmtLeaveReq_0
// 1378   {
// 1379     ZDP_TmpBuf[Z_EXTADDR_LEN] |= ZDP_MGMT_LEAVE_REQ_RC;
        MOV       A,#0x40
        MOVX      @DPTR,A
// 1380   }
// 1381   if ( Rejoin == TRUE )
??ZDP_MgmtLeaveReq_0:
        MOV       A,#0xc
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        XRL       A,#0x1
        JNZ       ??ZDP_MgmtLeaveReq_1
// 1382   {
// 1383     ZDP_TmpBuf[Z_EXTADDR_LEN] |= ZDP_MGMT_LEAVE_REQ_REJOIN;
        MOV       DPL,R0
        MOV       DPH,R1
        MOVX      A,@DPTR
        SETB      0xE0 /* A   */.7
        MOVX      @DPTR,A
// 1384   }
// 1385 
// 1386   return fillAndSend( &ZDP_TransID, dstAddr, Mgmt_Leave_req, (Z_EXTADDR_LEN + 1) );
??ZDP_MgmtLeaveReq_1:
        ; Setup parameters for call to function fillAndSend
        MOV       ?V2,#0x34
        LJMP      ?Subroutine1 & 0xFFFF
// 1387 }
          CFI EndBlock cfiBlock268

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine43:
          CFI Block cfiCond269 Using cfiCommon0
          CFI Function ZDP_MgmtDirectJoinReq
          CFI Conditional ??CrossCallReturnLabel_65
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond270 Using cfiCommon0
          CFI (cfiCond270) Function ZDP_MgmtLeaveReq
          CFI (cfiCond270) Conditional ??CrossCallReturnLabel_66
          CFI (cfiCond270) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond270) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond270) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond270) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond270) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond270) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond270) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond270) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond270) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond270) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond270) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond270) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond270) CFA_SP SP+-2
          CFI (cfiCond270) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker271 Using cfiCommon1
          CFI (cfiPicker271) NoFunction
          CFI (cfiPicker271) Picker
        MOV       A,R2
        MOV       R6,A
        MOV       A,R3
        MOV       R7,A
        MOV       ?V0,R1
        ; Setup parameters for call to function sAddrExtCpy
        ; Setup parameters for call to function sAddrExtCpy
        MOV       DPTR,#ZDP_TmpBuf
        MOVX      A,@DPTR
        MOV       R2,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R3,A
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
        MOV       DPTR,#ZDP_TmpBuf
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond269
          CFI EndBlock cfiCond270
          CFI EndBlock cfiPicker271
// 1388 
// 1389 /*********************************************************************
// 1390  * @fn          ZDP_MgmtNwkUpdateReq
// 1391  *
// 1392  * @brief       This builds and send a Mgmt_NWK_Update_req message. This
// 1393  *              function sends a unicast or broadcast message.
// 1394  *
// 1395  * @param       dstAddr - destination address of the message
// 1396  * @param       ChannelMask - 32 bit address bit map
// 1397  * @param       ScanDuration - length of time to spend scanning each channel
// 1398  * @param       ScanCount - number of energy scans to be conducted
// 1399  * @param       NwkUpdateId - NWk Update Id value
// 1400  * @param       NwkManagerAddr - NWK address for device with Network Manager
// 1401  *                               bit set in its Node Descriptor
// 1402  *
// 1403  * @return      afStatus_t
// 1404  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1405 afStatus_t ZDP_MgmtNwkUpdateReq( zAddrType_t *dstAddr,
ZDP_MgmtNwkUpdateReq:
          CFI Block cfiBlock272 Using cfiCommon0
          CFI Function ZDP_MgmtNwkUpdateReq
        CODE
// 1406                                  uint32 ChannelMask,
// 1407                                  uint8 ScanDuration,
// 1408                                  uint8 ScanCount,
// 1409                                  uint8 NwkUpdateId,
// 1410                                  uint16 NwkManagerAddr )
// 1411 {
        FUNCALL ZDP_MgmtNwkUpdateReq, osal_buffer_uint32
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtNwkUpdateReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        MOV       A,#-0xe
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
        MOV       ?V0,R2
        MOV       ?V1,R3
        MOV       A,R1
        MOV       R7,A
        MOV       ?V2,R4
        MOV       ?V3,R5
// 1412   uint8 *pBuf = ZDP_TmpBuf;
// 1413   byte len = sizeof( uint32 ) + 1;  // ChannelMask + ScanDuration
        MOV       R6,#0x5
// 1414 
// 1415   pBuf = osal_buffer_uint32( pBuf, ChannelMask );
        ; Setup parameters for call to function osal_buffer_uint32
        MOV       A,#0xe
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?PUSH_XSTACK8_X_FOUR
          CFI CFA_XSP16 add(XSP16, 18)
        LCALL     ?Subroutine50 & 0xFFFF
??CrossCallReturnLabel_81:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 14)
// 1416 
// 1417   *pBuf++ = ScanDuration;
        MOV       A,R7
        MOV       DPL,R2
        MOV       DPH,R3
        MOVX      @DPTR,A
// 1418 
// 1419   if ( ScanDuration <= 0x05 )
        MOV       A,R2
        ADD       A,#0x2
        MOV       R4,A
        CLR       A
        ADDC      A,R3
        MOV       R5,A
        INC       DPTR
        MOV       A,R7
        CLR       C
        SUBB      A,#0x6
        JNC       ??ZDP_MgmtNwkUpdateReq_0
// 1420   {
// 1421     // Request is to scan over channelMask
// 1422     len += sizeof( uint8 );
        MOV       R6,#0x6
// 1423 
// 1424     *pBuf++ = ScanCount;
        MOV       A,?V2
        MOVX      @DPTR,A
        SJMP      ??ZDP_MgmtNwkUpdateReq_1
// 1425   }
// 1426   else if ( ( ScanDuration == 0xFE ) || ( ScanDuration == 0xFF ) )
??ZDP_MgmtNwkUpdateReq_0:
        MOV       A,#-0x2
        XRL       A,R7
        JZ        ??ZDP_MgmtNwkUpdateReq_2
        MOV       A,#-0x1
        XRL       A,R7
        JNZ       ??ZDP_MgmtNwkUpdateReq_1
// 1427   {
// 1428     // Request is to change Channel (0xFE) or apsChannelMask and NwkManagerAddr (0xFF)
// 1429     len += sizeof( uint8 );
??ZDP_MgmtNwkUpdateReq_2:
        MOV       R6,#0x6
// 1430 
// 1431     *pBuf++ = NwkUpdateId;
        MOV       A,?V3
        MOVX      @DPTR,A
// 1432 
// 1433     if ( ScanDuration == 0xFF )
        MOV       A,#-0x1
        XRL       A,R7
        JNZ       ??ZDP_MgmtNwkUpdateReq_1
// 1434     {
// 1435       len += sizeof( uint16 );
        MOV       R6,#0x8
        MOV       A,#0x12
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine48 & 0xFFFF
// 1436 
// 1437       *pBuf++  = LO_UINT16( NwkManagerAddr );
// 1438       *pBuf++  = HI_UINT16( NwkManagerAddr );
// 1439     }
// 1440   }
??CrossCallReturnLabel_77:
        LCALL     ?Subroutine27 & 0xFFFF
??CrossCallReturnLabel_33:
        MOVX      @DPTR,A
        MOV       A,R2
        ADD       A,#0x4
// 1441 
// 1442   return fillAndSend( &ZDP_TransID, dstAddr, Mgmt_NWK_Update_req, len );
??ZDP_MgmtNwkUpdateReq_1:
        ; Setup parameters for call to function fillAndSend
        MOV       ?V4,#0x38
        MOV       ?V5,#0x0
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 16)
        MOV       A,R6
        MOV       R1,A
        MOV       R4,?V0
        MOV       R5,?V1
        LCALL     ??Subroutine122_0 & 0xFFFF
??CrossCallReturnLabel_220:
        LJMP      ?Subroutine0 & 0xFFFF
// 1443 }
          CFI EndBlock cfiBlock272

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine50:
          CFI Block cfiCond273 Using cfiCommon0
          CFI Function ZDP_MgmtNwkDiscReq
          CFI Conditional ??CrossCallReturnLabel_80
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond274 Using cfiCommon0
          CFI (cfiCond274) Function ZDP_MgmtNwkUpdateReq
          CFI (cfiCond274) Conditional ??CrossCallReturnLabel_81
          CFI (cfiCond274) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond274) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond274) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond274) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond274) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond274) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond274) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond274) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond274) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond274) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond274) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond274) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond274) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond274) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond274) CFA_SP SP+-2
          CFI (cfiCond274) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker275 Using cfiCommon1
          CFI (cfiPicker275) NoFunction
          CFI (cfiPicker275) Picker
        MOV       DPTR,#ZDP_TmpBuf
        MOVX      A,@DPTR
        MOV       R2,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R3,A
        LCALL     `??osal_buffer_uint32::?relay`; Banked call to: osal_buffer_uint32
        MOV       A,#0x4
        RET
          CFI EndBlock cfiCond273
          CFI EndBlock cfiCond274
          CFI EndBlock cfiPicker275

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine48:
          CFI Block cfiCond276 Using cfiCommon0
          CFI Function ZDP_ServerDiscRsp
          CFI Conditional ??CrossCallReturnLabel_76
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond277 Using cfiCommon0
          CFI (cfiCond277) Function ZDP_MgmtNwkUpdateReq
          CFI (cfiCond277) Conditional ??CrossCallReturnLabel_77
          CFI (cfiCond277) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond277) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond277) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond277) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond277) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond277) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond277) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond277) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond277) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond277) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond277) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond277) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond277) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond277) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond277) CFA_SP SP+-2
          CFI (cfiCond277) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker278 Using cfiCommon1
          CFI (cfiPicker278) NoFunction
          CFI (cfiPicker278) Picker
        LCALL     ?Subroutine81 & 0xFFFF
??CrossCallReturnLabel_165:
        MOV       DPL,R4
        MOV       DPH,R5
        RET
          CFI EndBlock cfiCond276
          CFI EndBlock cfiCond277
          CFI EndBlock cfiPicker278
// 1444 
// 1445 
// 1446 /*********************************************************************
// 1447  * Network Management Responses
// 1448  */
// 1449 
// 1450 /*********************************************************************
// 1451  * @fn          ZDP_MgmtNwkDiscRsp
// 1452  *
// 1453  * @brief       This builds and send a Mgmt_NWK_Disc_rsp message. This
// 1454  *              function sends a unicast message.
// 1455  *
// 1456  * @param       dstAddr - destination address of the message
// 1457  * @param       Status - message status (ZDP_SUCCESS or other)
// 1458  * @param       NetworkCount - Total number of networks found
// 1459  * @param       StartIndex - Starting index within the reporting network
// 1460  *                           list
// 1461  * @param       NetworkListCount - number of network lists included
// 1462  *                                 in this message
// 1463  * @param       NetworkList - List of network descriptors
// 1464  * @param       SecurityEnable - Security Options
// 1465  *
// 1466  * @return      afStatus_t
// 1467  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1468 afStatus_t ZDP_MgmtNwkDiscRsp( byte TransSeq, zAddrType_t *dstAddr,
ZDP_MgmtNwkDiscRsp:
          CFI Block cfiBlock279 Using cfiCommon0
          CFI Function ZDP_MgmtNwkDiscRsp
        CODE
// 1469                             byte Status,
// 1470                             byte NetworkCount,
// 1471                             byte StartIndex,
// 1472                             byte NetworkListCount,
// 1473                             networkDesc_t *NetworkList,
// 1474                             byte SecurityEnable )
// 1475 {
        FUNCALL ZDP_MgmtNwkDiscRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtNwkDiscRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtNwkDiscRsp, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtNwkDiscRsp, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V12
        REQUIRE ?V13
        MOV       A,#-0x16
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 22)
        ; Saved register size: 22
        ; Auto size: 1
        MOV       A,#-0x1
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       A,R1
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
        MOV       ?V12,R2
        MOV       ?V13,R3
        MOV       ?V10,R4
        MOV       ?V7,R5
        MOV       A,#0x18
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       ?V4,A
// 1476   uint8 *buf;
// 1477   uint8 *pBuf;
// 1478   byte len = 1+1+1+1;  // Status + NetworkCount + StartIndex + NetworkCountList.
// 1479   byte idx;
// 1480 
// 1481   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1482 
// 1483   len += (NetworkListCount * ( ZDP_NETWORK_EXTENDED_DISCRIPTOR_SIZE - 2 ));
        MOV       B,#0xc
        MUL       AB
        ADD       A,#0x4
        MOV       ?V5,A
// 1484 
// 1485   buf = osal_mem_alloc( len+1 );
        ; Setup parameters for call to function osal_mem_alloc
        LCALL     ?Subroutine69 & 0xFFFF
??CrossCallReturnLabel_110:
        MOV       ?V0,R2
        MOV       ?V1,R3
// 1486   if ( buf == NULL )
        MOV       A,R2
        ORL       A,R3
        JNZ       ??ZDP_MgmtNwkDiscRsp_0
// 1487   {
// 1488     return afStatus_MEM_FAIL;
        MOV       R1,#0x10
        LJMP      ??CrossCallReturnLabel_208 & 0xFFFF
// 1489   }
// 1490 
// 1491   pBuf = buf+1;
??ZDP_MgmtNwkDiscRsp_0:
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        MOV       ?V8,DPL
        MOV       ?V9,DPH
        MOV       R6,?V8
        MOV       R7,?V9
// 1492 
// 1493   *pBuf++ = Status;
        MOV       A,?V10
        MOVX      @DPTR,A
// 1494   *pBuf++ = NetworkCount;
        INC       DPTR
        MOV       A,?V7
        MOVX      @DPTR,A
// 1495   *pBuf++ = StartIndex;
        MOV       A,#0x17
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine39 & 0xFFFF
??CrossCallReturnLabel_55:
        INC       DPTR
        LCALL     ?Subroutine91 & 0xFFFF
// 1496   *pBuf++ = NetworkListCount;
??CrossCallReturnLabel_141:
        MOV       A,?V4
        MOVX      @DPTR,A
        MOV       A,R6
        ADD       A,#0x4
        MOV       R6,A
        JNC       ??ZDP_MgmtNwkDiscRsp_1
        INC       R7
// 1497 
// 1498   for ( idx = 0; idx < NetworkListCount; idx++ )
??ZDP_MgmtNwkDiscRsp_1:
        MOV       ?V6,#0x0
        MOV       A,#0x19
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine46 & 0xFFFF
??CrossCallReturnLabel_72:
        SJMP      ??ZDP_MgmtNwkDiscRsp_2
// 1499   {
// 1500     osal_cpyExtAddr( pBuf, NetworkList->extendedPANID);
// 1501     pBuf += Z_EXTADDR_LEN;
// 1502 
// 1503     *pBuf++  = NetworkList->logicalChannel;                // LogicalChannel
// 1504     *pBuf    = NetworkList->stackProfile;                  // Stack profile
// 1505     *pBuf++ |= (byte)(NetworkList->version << 4);          // ZigBee Version
// 1506     *pBuf    = BEACON_ORDER_NO_BEACONS;                    // Beacon Order
// 1507     *pBuf++ |= (uint8)(BEACON_ORDER_NO_BEACONS << 4);      // Superframe Order
// 1508 
// 1509     if ( NetworkList->chosenRouter != INVALID_NODE_ADDR )
// 1510     {
// 1511       *pBuf++ = TRUE;                         // Permit Joining
// 1512     }
// 1513     else
// 1514     {
// 1515       *pBuf++ = FALSE;
??ZDP_MgmtNwkDiscRsp_3:
        CLR       A
??ZDP_MgmtNwkDiscRsp_4:
        MOVX      @DPTR,A
        MOV       A,R0
        MOV       R6,A
        MOV       A,R1
        MOV       R7,A
// 1516     }
// 1517 
// 1518     NetworkList = NetworkList->nextDesc;    // Move to next list entry
        MOV       A,?V2
        ADD       A,#0x14
        MOV       DPL,A
        CLR       A
        ADDC      A,?V3
        MOV       DPH,A
        LCALL     ?Subroutine46 & 0xFFFF
??CrossCallReturnLabel_73:
        INC       ?V6
??ZDP_MgmtNwkDiscRsp_2:
        MOV       A,?V6
        CLR       C
        SUBB      A,?V4
        JNC       ??ZDP_MgmtNwkDiscRsp_5
        ; Setup parameters for call to function sAddrExtCpy
        MOV       A,?V2
        ADD       A,#0xb
        MOV       R4,A
        CLR       A
        ADDC      A,?V3
        MOV       R5,A
        MOV       A,R6
        MOV       R2,A
        MOV       A,R7
        MOV       R3,A
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
        MOV       DPL,?V2
        MOV       DPH,?V3
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine39 & 0xFFFF
??CrossCallReturnLabel_56:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine32 & 0xFFFF
??CrossCallReturnLabel_41:
        MOV       DPL,?V2
        MOV       DPH,?V3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine61 & 0xFFFF
??CrossCallReturnLabel_195:
        LCALL     ?Subroutine28 & 0xFFFF
??CrossCallReturnLabel_36:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        SWAP      A
        ANL       A,#0xf0
        MOV       R2,A
        MOV       DPL,R0
        MOV       DPH,R1
        MOVX      A,@DPTR
        ORL       A,R2
        LCALL     ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_19:
        INC       DPTR
        INC       DPTR
        MOV       A,#-0x1
        MOVX      @DPTR,A
        MOV       A,R6
        ADD       A,#0xc
        MOV       R0,A
        CLR       A
        ADDC      A,R7
        MOV       R1,A
        MOV       A,R6
        ADD       A,#0xb
        MOV       R2,A
        CLR       A
        ADDC      A,R7
        MOV       R3,A
        MOV       DPL,?V2
        MOV       DPH,?V3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,#0xfe
        JNZ       ??ZDP_MgmtNwkDiscRsp_6
        INC       DPTR
        MOVX      A,@DPTR
        CPL       A
??ZDP_MgmtNwkDiscRsp_6:
        MOV       DPL,R2
        MOV       DPH,R3
        JNZ       $+5
        LJMP      ??ZDP_MgmtNwkDiscRsp_3 & 0xFFFF
        MOV       A,#0x1
        LJMP      ??ZDP_MgmtNwkDiscRsp_4 & 0xFFFF
// 1519   }
// 1520 
// 1521   FillAndSendBuffer( &TransSeq, dstAddr, Mgmt_NWK_Disc_rsp, len, buf );
??ZDP_MgmtNwkDiscRsp_5:
        MOV       DPTR,#ZDP_TmpBuf
        MOV       A,?V8
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,?V9
        MOVX      @DPTR,A
        ; Setup parameters for call to function fillAndSend
        MOV       ?V2,#0x30
        MOV       ?V3,#-0x80
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 25)
        MOV       R1,?V5
        MOV       R4,?V12
        MOV       R5,?V13
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP101_8
        LCALL     ??Subroutine123_0 & 0xFFFF
??CrossCallReturnLabel_230:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       A,R1
        MOV       R6,A
        ; Setup parameters for call to function osal_mem_free
        MOV       R2,?V0
        MOV       R3,?V1
        LCALL     ??Subroutine120_0 & 0xFFFF
??CrossCallReturnLabel_208:
          CFI EndBlock cfiBlock279
        REQUIRE ?Subroutine7
        ; // Fall through to label ?Subroutine7
// 1522 }

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine7:
          CFI Block cfiBlock280 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 23)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       A,#0x1
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       R7,#0xe
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock280

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine61:
          CFI Block cfiCond281 Using cfiCommon0
          CFI Function ZDP_MgmtNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_195
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond282 Using cfiCommon0
          CFI (cfiCond282) Function ZDP_MgmtLqiRsp
          CFI (cfiCond282) Conditional ??CrossCallReturnLabel_196
          CFI (cfiCond282) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond282) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond282) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond282) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond282) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond282) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond282) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond282) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond282) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond282) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond282) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond282) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond282) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond282) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond282) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond282) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond282) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond282) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond282) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond282) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond282) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond282) CFA_SP SP+-2
          CFI (cfiCond282) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker283 Using cfiCommon1
          CFI (cfiPicker283) NoFunction
          CFI (cfiPicker283) Picker
        INC       DPTR
          CFI EndBlock cfiCond281
          CFI EndBlock cfiCond282
          CFI EndBlock cfiPicker283
        REQUIRE ??Subroutine117_0
        ; // Fall through to label ??Subroutine117_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine117_0:
          CFI Block cfiCond284 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
          CFI Conditional ??CrossCallReturnLabel_192
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond285 Using cfiCommon0
          CFI (cfiCond285) Function ZDP_SimpleDescMsg
          CFI (cfiCond285) Conditional ??CrossCallReturnLabel_193
          CFI (cfiCond285) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond285) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond285) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond285) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond285) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond285) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond285) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond285) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond285) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond285) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond285) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond285) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond285) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond285) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond285) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond285) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond285) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond285) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond285) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond285) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond285) CFA_SP SP+-2
          CFI (cfiCond285) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond286 Using cfiCommon0
          CFI (cfiCond286) Function ZDP_MgmtRtgRsp
          CFI (cfiCond286) Conditional ??CrossCallReturnLabel_194
          CFI (cfiCond286) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond286) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond286) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond286) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond286) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond286) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond286) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond286) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond286) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond286) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond286) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond286) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond286) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond286) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond286) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond286) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond286) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond286) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond286) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond286) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond286) CFA_SP SP+-2
          CFI (cfiCond286) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond287 Using cfiCommon0
          CFI (cfiCond287) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond287) Conditional ??CrossCallReturnLabel_195
          CFI (cfiCond287) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond287) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond287) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond287) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond287) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond287) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond287) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond287) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond287) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond287) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond287) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond287) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond287) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond287) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond287) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond287) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond287) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond287) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond287) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond287) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond287) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond287) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond287) CFA_SP SP+-2
          CFI (cfiCond287) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond288 Using cfiCommon0
          CFI (cfiCond288) Function ZDP_MgmtLqiRsp
          CFI (cfiCond288) Conditional ??CrossCallReturnLabel_196
          CFI (cfiCond288) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond288) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond288) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond288) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond288) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond288) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond288) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond288) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond288) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond288) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond288) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond288) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond288) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond288) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond288) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond288) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond288) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond288) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond288) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond288) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond288) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond288) CFA_SP SP+-2
          CFI (cfiCond288) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker289 Using cfiCommon1
          CFI (cfiPicker289) NoFunction
          CFI (cfiPicker289) Picker
        LCALL     ??Subroutine118_0 & 0xFFFF
??CrossCallReturnLabel_201:
        RET
          CFI EndBlock cfiCond284
          CFI EndBlock cfiCond285
          CFI EndBlock cfiCond286
          CFI EndBlock cfiCond287
          CFI EndBlock cfiCond288
          CFI EndBlock cfiPicker289

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine80:
          CFI Block cfiCond290 Using cfiCommon0
          CFI Function ZDP_MatchDescReq
          CFI Conditional ??CrossCallReturnLabel_198, ??CrossCallReturnLabel_0
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond291 Using cfiCommon0
          CFI (cfiCond291) Function ZDP_MatchDescReq
          CFI (cfiCond291) Conditional ??CrossCallReturnLabel_198, ??CrossCallReturnLabel_1
          CFI (cfiCond291) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond291) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond291) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond291) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond291) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond291) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond291) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond291) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond291) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond291) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond291) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond291) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond291) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond291) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond291) CFA_SP SP+-4
          CFI (cfiCond291) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond292 Using cfiCommon0
          CFI (cfiCond292) Function ZDP_MgmtLqiRsp
          CFI (cfiCond292) Conditional ??CrossCallReturnLabel_199, ??CrossCallReturnLabel_94
          CFI (cfiCond292) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond292) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond292) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond292) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond292) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond292) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond292) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond292) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond292) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond292) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond292) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond292) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond292) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond292) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond292) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond292) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond292) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond292) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond292) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond292) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond292) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond292) CFA_SP SP+-4
          CFI (cfiCond292) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond293 Using cfiCommon0
          CFI (cfiCond293) Function ZDP_MgmtLqiRsp
          CFI (cfiCond293) Conditional ??CrossCallReturnLabel_199, ??CrossCallReturnLabel_95
          CFI (cfiCond293) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond293) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond293) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond293) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond293) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond293) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond293) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond293) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond293) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond293) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond293) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond293) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond293) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond293) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond293) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond293) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond293) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond293) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond293) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond293) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond293) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond293) CFA_SP SP+-4
          CFI (cfiCond293) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker294 Using cfiCommon1
          CFI (cfiPicker294) NoFunction
          CFI (cfiPicker294) Picker
        MOV       DPH,A
          CFI EndBlock cfiCond290
          CFI EndBlock cfiCond291
          CFI EndBlock cfiCond292
          CFI EndBlock cfiCond293
          CFI EndBlock cfiPicker294
        REQUIRE ??Subroutine118_0
        ; // Fall through to label ??Subroutine118_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine118_0:
          CFI Block cfiCond295 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
          CFI Conditional ??CrossCallReturnLabel_197, ??CrossCallReturnLabel_96
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond296 Using cfiCommon0
          CFI (cfiCond296) Function ZDP_SimpleDescMsg
          CFI (cfiCond296) Conditional ??CrossCallReturnLabel_197, ??CrossCallReturnLabel_97
          CFI (cfiCond296) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond296) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond296) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond296) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond296) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond296) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond296) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond296) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond296) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond296) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond296) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond296) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond296) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond296) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond296) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond296) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond296) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond296) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond296) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond296) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond296) CFA_SP SP+-4
          CFI (cfiCond296) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond297 Using cfiCommon0
          CFI (cfiCond297) Function ZDP_SimpleDescMsg
          CFI (cfiCond297) Conditional ??CrossCallReturnLabel_197, ??CrossCallReturnLabel_98
          CFI (cfiCond297) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond297) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond297) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond297) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond297) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond297) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond297) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond297) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond297) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond297) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond297) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond297) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond297) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond297) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond297) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond297) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond297) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond297) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond297) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond297) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond297) CFA_SP SP+-4
          CFI (cfiCond297) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond298 Using cfiCommon0
          CFI (cfiCond298) Function ZDP_SimpleDescMsg
          CFI (cfiCond298) Conditional ??CrossCallReturnLabel_200, ??CrossCallReturnLabel_190
          CFI (cfiCond298) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond298) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond298) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond298) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond298) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond298) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond298) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond298) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond298) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond298) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond298) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond298) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond298) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond298) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond298) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond298) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond298) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond298) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond298) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond298) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond298) CFA_SP SP+-4
          CFI (cfiCond298) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond299 Using cfiCommon0
          CFI (cfiCond299) Function ZDP_SimpleDescMsg
          CFI (cfiCond299) Conditional ??CrossCallReturnLabel_200, ??CrossCallReturnLabel_191
          CFI (cfiCond299) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond299) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond299) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond299) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond299) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond299) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond299) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond299) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond299) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond299) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond299) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond299) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond299) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond299) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond299) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond299) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond299) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond299) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond299) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond299) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond299) CFA_SP SP+-4
          CFI (cfiCond299) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond300 Using cfiCommon0
          CFI (cfiCond300) Function ZDP_MgmtLqiRsp
          CFI (cfiCond300) Conditional ??CrossCallReturnLabel_200, ??CrossCallReturnLabel_189
          CFI (cfiCond300) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond300) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond300) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond300) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond300) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond300) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond300) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond300) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond300) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond300) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond300) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond300) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond300) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond300) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond300) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond300) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond300) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond300) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond300) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond300) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond300) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond300) CFA_SP SP+-4
          CFI (cfiCond300) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond301 Using cfiCommon0
          CFI (cfiCond301) Function ZDP_SimpleDescMsg
          CFI (cfiCond301) Conditional ??CrossCallReturnLabel_200, ??CrossCallReturnLabel_186
          CFI (cfiCond301) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond301) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond301) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond301) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond301) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond301) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond301) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond301) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond301) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond301) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond301) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond301) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond301) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond301) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond301) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond301) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond301) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond301) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond301) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond301) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond301) CFA_SP SP+-4
          CFI (cfiCond301) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond302 Using cfiCommon0
          CFI (cfiCond302) Function ZDP_EPRsp
          CFI (cfiCond302) Conditional ??CrossCallReturnLabel_200, ??CrossCallReturnLabel_187
          CFI (cfiCond302) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond302) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond302) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond302) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond302) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond302) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond302) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond302) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond302) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond302) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond302) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond302) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond302) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond302) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond302) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond302) CFA_SP SP+-4
          CFI (cfiCond302) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond303 Using cfiCommon0
          CFI (cfiCond303) Function ZDP_EndDeviceBindReq
          CFI (cfiCond303) Conditional ??CrossCallReturnLabel_200, ??CrossCallReturnLabel_188
          CFI (cfiCond303) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond303) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond303) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond303) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond303) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond303) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond303) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond303) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond303) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond303) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond303) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond303) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond303) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond303) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond303) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond303) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond303) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond303) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond303) CFA_SP SP+-4
          CFI (cfiCond303) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond304 Using cfiCommon0
          CFI (cfiCond304) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond304) Conditional ??CrossCallReturnLabel_201, ??CrossCallReturnLabel_195
          CFI (cfiCond304) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond304) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond304) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond304) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond304) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond304) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond304) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond304) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond304) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond304) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond304) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond304) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond304) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond304) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond304) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond304) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond304) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond304) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond304) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond304) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond304) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond304) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond304) CFA_SP SP+-4
          CFI (cfiCond304) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond305 Using cfiCommon0
          CFI (cfiCond305) Function ZDP_MgmtLqiRsp
          CFI (cfiCond305) Conditional ??CrossCallReturnLabel_201, ??CrossCallReturnLabel_196
          CFI (cfiCond305) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond305) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond305) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond305) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond305) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond305) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond305) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond305) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond305) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond305) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond305) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond305) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond305) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond305) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond305) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond305) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond305) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond305) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond305) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond305) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond305) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond305) CFA_SP SP+-4
          CFI (cfiCond305) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond306 Using cfiCommon0
          CFI (cfiCond306) Function ZDP_SimpleDescMsg
          CFI (cfiCond306) Conditional ??CrossCallReturnLabel_201, ??CrossCallReturnLabel_192
          CFI (cfiCond306) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond306) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond306) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond306) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond306) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond306) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond306) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond306) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond306) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond306) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond306) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond306) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond306) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond306) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond306) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond306) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond306) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond306) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond306) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond306) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond306) CFA_SP SP+-4
          CFI (cfiCond306) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond307 Using cfiCommon0
          CFI (cfiCond307) Function ZDP_SimpleDescMsg
          CFI (cfiCond307) Conditional ??CrossCallReturnLabel_201, ??CrossCallReturnLabel_193
          CFI (cfiCond307) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond307) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond307) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond307) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond307) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond307) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond307) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond307) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond307) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond307) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond307) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond307) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond307) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond307) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond307) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond307) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond307) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond307) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond307) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond307) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond307) CFA_SP SP+-4
          CFI (cfiCond307) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond308 Using cfiCommon0
          CFI (cfiCond308) Function ZDP_MgmtRtgRsp
          CFI (cfiCond308) Conditional ??CrossCallReturnLabel_201, ??CrossCallReturnLabel_194
          CFI (cfiCond308) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond308) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond308) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond308) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond308) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond308) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond308) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond308) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond308) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond308) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond308) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond308) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond308) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond308) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond308) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond308) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond308) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond308) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond308) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond308) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond308) CFA_SP SP+-4
          CFI (cfiCond308) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond309 Using cfiCommon0
          CFI (cfiCond309) Function ZDP_MatchDescReq
          CFI (cfiCond309) Conditional ??CrossCallReturnLabel_198, ??CrossCallReturnLabel_0
          CFI (cfiCond309) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond309) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond309) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond309) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond309) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond309) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond309) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond309) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond309) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond309) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond309) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond309) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond309) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond309) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond309) CFA_SP SP+-4
          CFI (cfiCond309) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond310 Using cfiCommon0
          CFI (cfiCond310) Function ZDP_MatchDescReq
          CFI (cfiCond310) Conditional ??CrossCallReturnLabel_198, ??CrossCallReturnLabel_1
          CFI (cfiCond310) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond310) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond310) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond310) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond310) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond310) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond310) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond310) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond310) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond310) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond310) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond310) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond310) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond310) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond310) CFA_SP SP+-4
          CFI (cfiCond310) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond311 Using cfiCommon0
          CFI (cfiCond311) Function ZDP_MgmtLqiRsp
          CFI (cfiCond311) Conditional ??CrossCallReturnLabel_199, ??CrossCallReturnLabel_94
          CFI (cfiCond311) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond311) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond311) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond311) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond311) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond311) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond311) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond311) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond311) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond311) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond311) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond311) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond311) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond311) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond311) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond311) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond311) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond311) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond311) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond311) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond311) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond311) CFA_SP SP+-4
          CFI (cfiCond311) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond312 Using cfiCommon0
          CFI (cfiCond312) Function ZDP_MgmtLqiRsp
          CFI (cfiCond312) Conditional ??CrossCallReturnLabel_199, ??CrossCallReturnLabel_95
          CFI (cfiCond312) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond312) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond312) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond312) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond312) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond312) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond312) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond312) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond312) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond312) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond312) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond312) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond312) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond312) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond312) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond312) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond312) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond312) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond312) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond312) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond312) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond312) CFA_SP SP+-4
          CFI (cfiCond312) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker313 Using cfiCommon1
          CFI (cfiPicker313) NoFunction
          CFI (cfiPicker313) Picker
        MOVX      A,@DPTR
        MOV       DPL,R0
        MOV       DPH,R1
        RET
          CFI EndBlock cfiCond295
          CFI EndBlock cfiCond296
          CFI EndBlock cfiCond297
          CFI EndBlock cfiCond298
          CFI EndBlock cfiCond299
          CFI EndBlock cfiCond300
          CFI EndBlock cfiCond301
          CFI EndBlock cfiCond302
          CFI EndBlock cfiCond303
          CFI EndBlock cfiCond304
          CFI EndBlock cfiCond305
          CFI EndBlock cfiCond306
          CFI EndBlock cfiCond307
          CFI EndBlock cfiCond308
          CFI EndBlock cfiCond309
          CFI EndBlock cfiCond310
          CFI EndBlock cfiCond311
          CFI EndBlock cfiCond312
          CFI EndBlock cfiPicker313

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine46:
          CFI Block cfiCond314 Using cfiCommon0
          CFI Function ZDP_SendData
          CFI Conditional ??CrossCallReturnLabel_71
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond315 Using cfiCommon0
          CFI (cfiCond315) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond315) Conditional ??CrossCallReturnLabel_72
          CFI (cfiCond315) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond315) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond315) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond315) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond315) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond315) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond315) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond315) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond315) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond315) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond315) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond315) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond315) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond315) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond315) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond315) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond315) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond315) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond315) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond315) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond315) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond315) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond315) CFA_SP SP+-2
          CFI (cfiCond315) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond316 Using cfiCommon0
          CFI (cfiCond316) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond316) Conditional ??CrossCallReturnLabel_73
          CFI (cfiCond316) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond316) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond316) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond316) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond316) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond316) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond316) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond316) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond316) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond316) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond316) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond316) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond316) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond316) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond316) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond316) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond316) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond316) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond316) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond316) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond316) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond316) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond316) CFA_SP SP+-2
          CFI (cfiCond316) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker317 Using cfiCommon1
          CFI (cfiPicker317) NoFunction
          CFI (cfiPicker317) Picker
        MOVX      A,@DPTR
        MOV       ?V2,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V3,A
        RET
          CFI EndBlock cfiCond314
          CFI EndBlock cfiCond315
          CFI EndBlock cfiCond316
          CFI EndBlock cfiPicker317

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine39:
          CFI Block cfiCond318 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
          CFI Conditional ??CrossCallReturnLabel_52
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond319 Using cfiCommon0
          CFI (cfiCond319) Function ZDP_NodeDescMsg
          CFI (cfiCond319) Conditional ??CrossCallReturnLabel_53
          CFI (cfiCond319) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond319) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond319) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond319) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond319) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond319) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond319) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond319) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond319) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond319) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond319) CFA_SP SP+-2
          CFI (cfiCond319) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond320 Using cfiCommon0
          CFI (cfiCond320) Function ZDP_NodeDescMsg
          CFI (cfiCond320) Conditional ??CrossCallReturnLabel_54
          CFI (cfiCond320) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond320) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond320) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond320) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond320) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond320) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond320) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond320) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond320) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond320) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond320) CFA_SP SP+-2
          CFI (cfiCond320) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond321 Using cfiCommon0
          CFI (cfiCond321) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond321) Conditional ??CrossCallReturnLabel_55
          CFI (cfiCond321) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond321) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond321) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond321) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond321) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond321) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond321) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond321) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond321) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond321) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond321) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond321) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond321) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond321) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond321) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond321) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond321) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond321) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond321) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond321) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond321) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond321) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond321) CFA_SP SP+-2
          CFI (cfiCond321) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond322 Using cfiCommon0
          CFI (cfiCond322) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond322) Conditional ??CrossCallReturnLabel_56
          CFI (cfiCond322) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond322) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond322) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond322) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond322) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond322) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond322) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond322) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond322) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond322) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond322) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond322) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond322) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond322) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond322) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond322) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond322) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond322) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond322) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond322) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond322) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond322) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond322) CFA_SP SP+-2
          CFI (cfiCond322) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker323 Using cfiCommon1
          CFI (cfiPicker323) NoFunction
          CFI (cfiPicker323) Picker
        LCALL     ??Subroutine119_0 & 0xFFFF
??CrossCallReturnLabel_203:
        INC       DPTR
        RET
          CFI EndBlock cfiCond318
          CFI EndBlock cfiCond319
          CFI EndBlock cfiCond320
          CFI EndBlock cfiCond321
          CFI EndBlock cfiCond322
          CFI EndBlock cfiPicker323

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine82:
          CFI Block cfiCond324 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
          CFI Conditional ??CrossCallReturnLabel_204
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond325 Using cfiCommon0
          CFI (cfiCond325) Function ZDP_NodeDescMsg
          CFI (cfiCond325) Conditional ??CrossCallReturnLabel_205
          CFI (cfiCond325) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond325) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond325) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond325) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond325) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond325) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond325) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond325) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond325) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond325) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond325) CFA_SP SP+-2
          CFI (cfiCond325) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker326 Using cfiCommon1
          CFI (cfiPicker326) NoFunction
          CFI (cfiPicker326) Picker
        INC       DPTR
          CFI EndBlock cfiCond324
          CFI EndBlock cfiCond325
          CFI EndBlock cfiPicker326
        REQUIRE ??Subroutine119_0
        ; // Fall through to label ??Subroutine119_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine119_0:
          CFI Block cfiCond327 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
          CFI Conditional ??CrossCallReturnLabel_202, ??CrossCallReturnLabel_50
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond328 Using cfiCommon0
          CFI (cfiCond328) Function ZDP_NodeDescMsg
          CFI (cfiCond328) Conditional ??CrossCallReturnLabel_202, ??CrossCallReturnLabel_51
          CFI (cfiCond328) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond328) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond328) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond328) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond328) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond328) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond328) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond328) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond328) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond328) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond328) CFA_SP SP+-4
          CFI (cfiCond328) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond329 Using cfiCommon0
          CFI (cfiCond329) Function ZDP_NodeDescMsg
          CFI (cfiCond329) Conditional ??CrossCallReturnLabel_203, ??CrossCallReturnLabel_52
          CFI (cfiCond329) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond329) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond329) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond329) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond329) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond329) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond329) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond329) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond329) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond329) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond329) CFA_SP SP+-4
          CFI (cfiCond329) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond330 Using cfiCommon0
          CFI (cfiCond330) Function ZDP_NodeDescMsg
          CFI (cfiCond330) Conditional ??CrossCallReturnLabel_203, ??CrossCallReturnLabel_53
          CFI (cfiCond330) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond330) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond330) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond330) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond330) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond330) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond330) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond330) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond330) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond330) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond330) CFA_SP SP+-4
          CFI (cfiCond330) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond331 Using cfiCommon0
          CFI (cfiCond331) Function ZDP_NodeDescMsg
          CFI (cfiCond331) Conditional ??CrossCallReturnLabel_203, ??CrossCallReturnLabel_54
          CFI (cfiCond331) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond331) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond331) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond331) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond331) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond331) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond331) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond331) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond331) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond331) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond331) CFA_SP SP+-4
          CFI (cfiCond331) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond332 Using cfiCommon0
          CFI (cfiCond332) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond332) Conditional ??CrossCallReturnLabel_203, ??CrossCallReturnLabel_55
          CFI (cfiCond332) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond332) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond332) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond332) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond332) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond332) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond332) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond332) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond332) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond332) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond332) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond332) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond332) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond332) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond332) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond332) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond332) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond332) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond332) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond332) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond332) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond332) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond332) CFA_SP SP+-4
          CFI (cfiCond332) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond333 Using cfiCommon0
          CFI (cfiCond333) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond333) Conditional ??CrossCallReturnLabel_203, ??CrossCallReturnLabel_56
          CFI (cfiCond333) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond333) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond333) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond333) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond333) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond333) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond333) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond333) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond333) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond333) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond333) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond333) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond333) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond333) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond333) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond333) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond333) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond333) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond333) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond333) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond333) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond333) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond333) CFA_SP SP+-4
          CFI (cfiCond333) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond334 Using cfiCommon0
          CFI (cfiCond334) Function ZDP_NodeDescMsg
          CFI (cfiCond334) Conditional ??CrossCallReturnLabel_204
          CFI (cfiCond334) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond334) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond334) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond334) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond334) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond334) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond334) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond334) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond334) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond334) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond334) CFA_SP SP+-2
          CFI (cfiCond334) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond335 Using cfiCommon0
          CFI (cfiCond335) Function ZDP_NodeDescMsg
          CFI (cfiCond335) Conditional ??CrossCallReturnLabel_205
          CFI (cfiCond335) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond335) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond335) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond335) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond335) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond335) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond335) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond335) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond335) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond335) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond335) CFA_SP SP+-2
          CFI (cfiCond335) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker336 Using cfiCommon1
          CFI (cfiPicker336) NoFunction
          CFI (cfiPicker336) Picker
        MOVX      A,@DPTR
        MOV       DPL,R6
        MOV       DPH,R7
        RET
          CFI EndBlock cfiCond327
          CFI EndBlock cfiCond328
          CFI EndBlock cfiCond329
          CFI EndBlock cfiCond330
          CFI EndBlock cfiCond331
          CFI EndBlock cfiCond332
          CFI EndBlock cfiCond333
          CFI EndBlock cfiCond334
          CFI EndBlock cfiCond335
          CFI EndBlock cfiPicker336

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine28:
          CFI Block cfiCond337 Using cfiCommon0
          CFI Function ZDP_UserDescSet
          CFI Conditional ??CrossCallReturnLabel_35
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond338 Using cfiCommon0
          CFI (cfiCond338) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond338) Conditional ??CrossCallReturnLabel_36
          CFI (cfiCond338) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond338) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond338) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond338) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond338) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond338) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond338) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond338) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond338) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond338) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond338) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond338) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond338) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond338) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond338) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond338) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond338) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond338) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond338) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond338) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond338) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond338) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond338) CFA_SP SP+-2
          CFI (cfiCond338) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker339 Using cfiCommon1
          CFI (cfiPicker339) NoFunction
          CFI (cfiPicker339) Picker
        LCALL     ?Subroutine93 & 0xFFFF
??CrossCallReturnLabel_146:
        INC       DPTR
        RET
          CFI EndBlock cfiCond337
          CFI EndBlock cfiCond338
          CFI EndBlock cfiPicker339

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine93:
          CFI Block cfiCond340 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
          CFI Conditional ??CrossCallReturnLabel_145, ??CrossCallReturnLabel_2
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond341 Using cfiCommon0
          CFI (cfiCond341) Function ZDP_SimpleDescMsg
          CFI (cfiCond341) Conditional ??CrossCallReturnLabel_145, ??CrossCallReturnLabel_3
          CFI (cfiCond341) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond341) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond341) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond341) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond341) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond341) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond341) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond341) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond341) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond341) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond341) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond341) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond341) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond341) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond341) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond341) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond341) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond341) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond341) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond341) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond341) CFA_SP SP+-4
          CFI (cfiCond341) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond342 Using cfiCommon0
          CFI (cfiCond342) Function ZDP_UserDescSet
          CFI (cfiCond342) Conditional ??CrossCallReturnLabel_146, ??CrossCallReturnLabel_35
          CFI (cfiCond342) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond342) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond342) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond342) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond342) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond342) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond342) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond342) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond342) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond342) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond342) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond342) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond342) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond342) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond342) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond342) CFA_SP SP+-4
          CFI (cfiCond342) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond343 Using cfiCommon0
          CFI (cfiCond343) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond343) Conditional ??CrossCallReturnLabel_146, ??CrossCallReturnLabel_36
          CFI (cfiCond343) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond343) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond343) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond343) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond343) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond343) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond343) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond343) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond343) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond343) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond343) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond343) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond343) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond343) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond343) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond343) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond343) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond343) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond343) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond343) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond343) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond343) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond343) CFA_SP SP+-4
          CFI (cfiCond343) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker344 Using cfiCommon1
          CFI (cfiPicker344) NoFunction
          CFI (cfiPicker344) Picker
        MOVX      @DPTR,A
        MOV       DPL,?V2
        MOV       DPH,?V3
        INC       DPTR
        RET
          CFI EndBlock cfiCond340
          CFI EndBlock cfiCond341
          CFI EndBlock cfiCond342
          CFI EndBlock cfiCond343
          CFI EndBlock cfiPicker344

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine18:
          CFI Block cfiCond345 Using cfiCommon0
          CFI Function fillAndSend
          CFI Conditional ??CrossCallReturnLabel_18
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond346 Using cfiCommon0
          CFI (cfiCond346) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond346) Conditional ??CrossCallReturnLabel_19
          CFI (cfiCond346) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond346) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond346) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond346) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond346) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond346) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond346) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond346) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond346) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond346) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond346) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond346) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond346) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond346) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond346) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond346) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond346) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond346) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond346) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond346) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond346) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond346) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond346) CFA_SP SP+-2
          CFI (cfiCond346) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker347 Using cfiCommon1
          CFI (cfiPicker347) NoFunction
          CFI (cfiPicker347) Picker
        LCALL     ?Subroutine91 & 0xFFFF
??CrossCallReturnLabel_142:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond345
          CFI EndBlock cfiCond346
          CFI EndBlock cfiPicker347

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine91:
          CFI Block cfiCond348 Using cfiCommon0
          CFI Function ZDP_MgmtNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_141
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond349 Using cfiCommon0
          CFI (cfiCond349) Function fillAndSend
          CFI (cfiCond349) Conditional ??CrossCallReturnLabel_142, ??CrossCallReturnLabel_18
          CFI (cfiCond349) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond349) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond349) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond349) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond349) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond349) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond349) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond349) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond349) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond349) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond349) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond349) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond349) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond349) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond349) CFA_SP SP+-4
          CFI (cfiCond349) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond350 Using cfiCommon0
          CFI (cfiCond350) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond350) Conditional ??CrossCallReturnLabel_142, ??CrossCallReturnLabel_19
          CFI (cfiCond350) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond350) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond350) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond350) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond350) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond350) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond350) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond350) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond350) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond350) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond350) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond350) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond350) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond350) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond350) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond350) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond350) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond350) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond350) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond350) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond350) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond350) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond350) CFA_SP SP+-4
          CFI (cfiCond350) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker351 Using cfiCommon1
          CFI (cfiPicker351) NoFunction
          CFI (cfiPicker351) Picker
        MOVX      @DPTR,A
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond348
          CFI EndBlock cfiCond349
          CFI EndBlock cfiCond350
          CFI EndBlock cfiPicker351
// 1523 
// 1524 /*********************************************************************
// 1525  * @fn          ZDP_MgmtLqiRsp
// 1526  *
// 1527  * @brief       This builds and send a Mgmt_Lqi_rsp message. This
// 1528  *              function sends a unicast message.
// 1529  *
// 1530  * @param       dstAddr - destination address of the message
// 1531  * @param       Status - message status (ZDP_SUCCESS or other)
// 1532  * @param       NeighborLqiEntries - Total number of entries found
// 1533  * @param       StartIndex - Starting index within the reporting list
// 1534  * @param       NeighborLqiCount - number of lists included
// 1535  *                                 in this message
// 1536  * @param       NeighborLqiList - List of NeighborLqiItems.  This list
// 1537  *                is the list to be sent, not the entire list
// 1538  * @param       SecurityEnable - true if secure
// 1539  *
// 1540  * @return      ZStatus_t
// 1541  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1542 ZStatus_t ZDP_MgmtLqiRsp( byte TransSeq, zAddrType_t *dstAddr,
ZDP_MgmtLqiRsp:
          CFI Block cfiBlock352 Using cfiCommon0
          CFI Function ZDP_MgmtLqiRsp
        CODE
// 1543                           byte Status,
// 1544                           byte NeighborLqiEntries,
// 1545                           byte StartIndex,
// 1546                           byte NeighborLqiCount,
// 1547                           ZDP_MgmtLqiItem_t* NeighborList,
// 1548                           byte SecurityEnable )
// 1549 {
        FUNCALL ZDP_MgmtLqiRsp, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtLqiRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtLqiRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtLqiRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtLqiRsp, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtLqiRsp, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        REQUIRE ?V12
        MOV       A,#-0x15
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 21)
        ; Saved register size: 21
        ; Auto size: 1
        MOV       A,#-0x1
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       A,R1
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
        MOV       ?V10,R2
        MOV       ?V11,R3
        MOV       ?V12,R5
// 1550   ZDP_MgmtLqiItem_t* list = NeighborList;
        MOV       A,#0x18
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine125_0 & 0xFFFF
// 1551   uint8 *buf, *pBuf;
// 1552   byte len, x;
// 1553 
// 1554   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1555 
// 1556   if ( ZSuccess != Status )
??CrossCallReturnLabel_246:
        MOV       A,R4
        JZ        ??ZDP_MgmtLqiRsp_0
// 1557   {
// 1558     ZDP_TmpBuf[0] = Status;
        LCALL     ?Subroutine41 & 0xFFFF
// 1559     return fillAndSend( &TransSeq, dstAddr, Mgmt_Lqi_rsp, 1 );
// 1560   }
??CrossCallReturnLabel_181:
        MOV       A,R4
        LCALL     ?Subroutine30 & 0xFFFF
??CrossCallReturnLabel_37:
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 24)
        MOV       R1,#0x1
        MOV       R4,?V10
        MOV       R5,?V11
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP101_8
        LCALL     ??Subroutine123_0 & 0xFFFF
??CrossCallReturnLabel_231:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 22)
        LJMP      ??CrossCallReturnLabel_206 & 0xFFFF
??ZDP_MgmtLqiRsp_0:
        MOV       A,#0x17
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       ?V5,A
// 1561 
// 1562   // (Status + NeighborLqiEntries + StartIndex + NeighborLqiCount) +
// 1563   //  neighbor LQI data.
// 1564   len = (1 + 1 + 1 + 1) + (NeighborLqiCount * ZDP_MGMTLQI_EXTENDED_SIZE);
        MOV       B,#0x16
        MUL       AB
        ADD       A,#0x4
        MOV       ?V6,A
// 1565 
// 1566   buf = osal_mem_alloc( len+1 );
        ; Setup parameters for call to function osal_mem_alloc
        LCALL     ?Subroutine68 & 0xFFFF
// 1567   if ( buf == NULL )
??CrossCallReturnLabel_108:
        JNZ       ??ZDP_MgmtLqiRsp_1
// 1568   {
// 1569     return afStatus_MEM_FAIL;
        MOV       R1,#0x10
        LJMP      ??CrossCallReturnLabel_206 & 0xFFFF
// 1570   }
// 1571 
// 1572   pBuf = buf+1;
??ZDP_MgmtLqiRsp_1:
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        MOV       ?V8,DPL
        MOV       ?V9,DPH
        MOV       ?V0,?V8
        MOV       ?V1,?V9
// 1573 
// 1574   *pBuf++ = Status;
        CLR       A
        MOVX      @DPTR,A
// 1575   *pBuf++ = NeighborLqiEntries;
        INC       DPTR
        MOV       A,?V12
        MOVX      @DPTR,A
// 1576   *pBuf++ = StartIndex;
        MOV       A,#0x16
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine56 & 0xFFFF
??CrossCallReturnLabel_87:
        MOVX      @DPTR,A
// 1577   *pBuf++ = NeighborLqiCount;
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOV       A,?V5
        MOVX      @DPTR,A
        MOV       A,?V0
        ADD       A,#0x4
        MOV       ?V0,A
        JNC       ??ZDP_MgmtLqiRsp_2
        INC       ?V1
// 1578 
// 1579   for ( x = 0; x < NeighborLqiCount; x++ )
??ZDP_MgmtLqiRsp_2:
        MOV       ?V4,#0x0
        LJMP      ??ZDP_MgmtLqiRsp_3 & 0xFFFF
// 1580   {
// 1581     osal_cpyExtAddr( pBuf, list->extPanID);         // Extended PanID
??ZDP_MgmtLqiRsp_4:
        ; Setup parameters for call to function sAddrExtCpy
        MOV       A,R6
        ADD       A,#0x2
        MOV       R4,A
        CLR       A
        ADDC      A,R7
        MOV       R5,A
        MOV       R2,?V0
        MOV       R3,?V1
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 1582     pBuf += Z_EXTADDR_LEN;
// 1583 
// 1584     // EXTADDR
// 1585     pBuf = osal_cpyExtAddr( pBuf, list->extAddr );
        ; Setup parameters for call to function sAddrExtCpy
        MOV       A,R6
        ADD       A,#0xa
        MOV       R4,A
        CLR       A
        ADDC      A,R7
        MOV       R5,A
        MOV       A,?V0
        ADD       A,#0x8
        MOV       R2,A
        CLR       A
        ADDC      A,?V1
        MOV       R3,A
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
        MOV       ?V0,R2
        MOV       ?V1,R3
        MOV       R0,?V0
        MOV       R1,?V1
// 1586 
// 1587     // NWKADDR
// 1588     *pBuf++ = LO_UINT16( list->nwkAddr );
        MOV       A,R6
        ADD       A,#0x12
        MOV       R2,A
        CLR       A
        ADDC      A,R7
        MOV       R3,A
        MOV       DPL,R2
        LCALL     ??Subroutine114_0 & 0xFFFF
// 1589     *pBuf++ = HI_UINT16( list->nwkAddr );
??CrossCallReturnLabel_189:
        MOV       DPL,R2
        MOV       DPH,R3
        LCALL     ?Subroutine61 & 0xFFFF
??CrossCallReturnLabel_196:
        INC       DPTR
        MOVX      @DPTR,A
// 1590 
// 1591     // DEVICETYPE
// 1592     *pBuf = list->devType;
        MOV       A,R0
        ADD       A,#0x2
        MOV       R2,A
        CLR       A
        ADDC      A,R1
        MOV       R3,A
        MOV       A,R6
        ADD       A,#0x14
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
        LCALL     ?Subroutine66 & 0xFFFF
??CrossCallReturnLabel_238:
        MOVX      @DPTR,A
// 1593 
// 1594     // RXONIDLE
// 1595     *pBuf |= (uint8)(list->rxOnIdle << 2);
        MOV       A,R6
        ADD       A,#0x15
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
        MOV       DPH,A
        MOVX      A,@DPTR
        RLC       A
        RLC       A
        ANL       A,#0xfc
        MOV       R4,A
        MOV       DPL,R2
        MOV       DPH,R3
        MOVX      A,@DPTR
        ORL       A,R4
        MOVX      @DPTR,A
// 1596 
// 1597     // RELATIONSHIP
// 1598     *pBuf++ |= (uint8)(list->relation << 4);
        MOV       A,R6
        ADD       A,#0x16
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
        MOV       DPH,A
        MOVX      A,@DPTR
        SWAP      A
        ANL       A,#0xf0
        MOV       R4,A
        MOV       DPL,R2
        MOV       DPH,R3
        MOVX      A,@DPTR
        ORL       A,R4
        MOVX      @DPTR,A
// 1599 
// 1600     // PERMITJOINING
// 1601     *pBuf++ = (uint8)(list->permit);
        MOV       A,R6
        ADD       A,#0x17
        LCALL     ?Subroutine59 & 0xFFFF
??CrossCallReturnLabel_94:
        MOVX      @DPTR,A
// 1602 
// 1603     // DEPTH
// 1604     *pBuf++ = list->depth;
        MOV       A,R6
        ADD       A,#0x18
        LCALL     ?Subroutine59 & 0xFFFF
??CrossCallReturnLabel_95:
        INC       DPTR
        MOVX      @DPTR,A
// 1605 
// 1606     // LQI
// 1607     *pBuf++ = list->lqi;
        MOV       A,R6
        ADD       A,#0x19
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
        MOV       DPH,A
        LCALL     ?Subroutine52 & 0xFFFF
??CrossCallReturnLabel_83:
        MOVX      @DPTR,A
        MOV       A,R0
        ADD       A,#0x6
        MOV       ?V0,A
        CLR       A
        ADDC      A,R1
        MOV       ?V1,A
// 1608 
// 1609     list++; // next list entry
        MOV       A,R6
        ADD       A,#0x1a
        MOV       R6,A
        JNC       ??ZDP_MgmtLqiRsp_5
        INC       R7
// 1610   }
??ZDP_MgmtLqiRsp_5:
        INC       ?V4
??ZDP_MgmtLqiRsp_3:
        MOV       A,?V4
        CLR       C
        SUBB      A,?V5
        JNC       $+5
        LJMP      ??ZDP_MgmtLqiRsp_4 & 0xFFFF
// 1611 
// 1612   FillAndSendBuffer( &TransSeq, dstAddr, Mgmt_Lqi_rsp, len, buf );
        MOV       DPTR,#ZDP_TmpBuf
        MOV       A,?V8
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,?V9
        LCALL     ?Subroutine30 & 0xFFFF
??CrossCallReturnLabel_38:
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 24)
        MOV       R1,?V6
        MOV       R4,?V10
        MOV       R5,?V11
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP101_8
        LCALL     ??Subroutine123_0 & 0xFFFF
??CrossCallReturnLabel_232:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 22)
        LCALL     ?Subroutine22 & 0xFFFF
??CrossCallReturnLabel_206:
        MOV       A,#0x1
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       R7,#0xd
        LJMP      ?BANKED_LEAVE_XDATA
// 1613 }
          CFI EndBlock cfiBlock352

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine59:
          CFI Block cfiCond353 Using cfiCommon0
          CFI Function ZDP_MgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_94
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond354 Using cfiCommon0
          CFI (cfiCond354) Function ZDP_MgmtLqiRsp
          CFI (cfiCond354) Conditional ??CrossCallReturnLabel_95
          CFI (cfiCond354) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond354) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond354) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond354) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond354) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond354) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond354) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond354) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond354) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond354) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond354) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond354) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond354) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond354) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond354) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond354) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond354) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond354) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond354) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond354) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond354) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond354) CFA_SP SP+-2
          CFI (cfiCond354) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker355 Using cfiCommon1
          CFI (cfiPicker355) NoFunction
          CFI (cfiPicker355) Picker
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
        LCALL     ?Subroutine80 & 0xFFFF
??CrossCallReturnLabel_199:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond353
          CFI EndBlock cfiCond354
          CFI EndBlock cfiPicker355

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine56:
          CFI Block cfiCond356 Using cfiCommon0
          CFI Function ZDP_UserDescRsp
          CFI Conditional ??CrossCallReturnLabel_86
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond357 Using cfiCommon0
          CFI (cfiCond357) Function ZDP_MgmtLqiRsp
          CFI (cfiCond357) Conditional ??CrossCallReturnLabel_87
          CFI (cfiCond357) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond357) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond357) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond357) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond357) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond357) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond357) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond357) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond357) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond357) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond357) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond357) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond357) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond357) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond357) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond357) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond357) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond357) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond357) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond357) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond357) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond357) CFA_SP SP+-2
          CFI (cfiCond357) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker358 Using cfiCommon1
          CFI (cfiPicker358) NoFunction
          CFI (cfiPicker358) Picker
        LCALL     ?Subroutine85 & 0xFFFF
??CrossCallReturnLabel_134:
        INC       DPTR
        RET
          CFI EndBlock cfiCond356
          CFI EndBlock cfiCond357
          CFI EndBlock cfiPicker358

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine85:
          CFI Block cfiCond359 Using cfiCommon0
          CFI Function ZDP_EndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_133
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond360 Using cfiCommon0
          CFI (cfiCond360) Function ZDP_UserDescRsp
          CFI (cfiCond360) Conditional ??CrossCallReturnLabel_134, ??CrossCallReturnLabel_86
          CFI (cfiCond360) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond360) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond360) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond360) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond360) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond360) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond360) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond360) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond360) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond360) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond360) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond360) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond360) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond360) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond360) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond360) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond360) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond360) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond360) CFA_SP SP+-4
          CFI (cfiCond360) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond361 Using cfiCommon0
          CFI (cfiCond361) Function ZDP_MgmtLqiRsp
          CFI (cfiCond361) Conditional ??CrossCallReturnLabel_134, ??CrossCallReturnLabel_87
          CFI (cfiCond361) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond361) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond361) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond361) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond361) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond361) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond361) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond361) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond361) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond361) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond361) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond361) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond361) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond361) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond361) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond361) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond361) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond361) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond361) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond361) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond361) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond361) CFA_SP SP+-4
          CFI (cfiCond361) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker362 Using cfiCommon1
          CFI (cfiPicker362) NoFunction
          CFI (cfiPicker362) Picker
        MOVX      A,@DPTR
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        RET
          CFI EndBlock cfiCond359
          CFI EndBlock cfiCond360
          CFI EndBlock cfiCond361
          CFI EndBlock cfiPicker362

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine52:
          CFI Block cfiCond363 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
          CFI Conditional ??CrossCallReturnLabel_82
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond364 Using cfiCommon0
          CFI (cfiCond364) Function ZDP_MgmtLqiRsp
          CFI (cfiCond364) Conditional ??CrossCallReturnLabel_83
          CFI (cfiCond364) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond364) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond364) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond364) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond364) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond364) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond364) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond364) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond364) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond364) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond364) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond364) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond364) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond364) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond364) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond364) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond364) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond364) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond364) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond364) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond364) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond364) CFA_SP SP+-2
          CFI (cfiCond364) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker365 Using cfiCommon1
          CFI (cfiPicker365) NoFunction
          CFI (cfiPicker365) Picker
        LCALL     ?Subroutine79 & 0xFFFF
??CrossCallReturnLabel_132:
        RET
          CFI EndBlock cfiCond363
          CFI EndBlock cfiCond364
          CFI EndBlock cfiPicker365

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine79:
          CFI Block cfiCond366 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
          CFI Conditional ??CrossCallReturnLabel_131, ??CrossCallReturnLabel_2
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond367 Using cfiCommon0
          CFI (cfiCond367) Function ZDP_SimpleDescMsg
          CFI (cfiCond367) Conditional ??CrossCallReturnLabel_131, ??CrossCallReturnLabel_3
          CFI (cfiCond367) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond367) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond367) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond367) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond367) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond367) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond367) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond367) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond367) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond367) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond367) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond367) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond367) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond367) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond367) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond367) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond367) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond367) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond367) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond367) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond367) CFA_SP SP+-4
          CFI (cfiCond367) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond368 Using cfiCommon0
          CFI (cfiCond368) Function ZDP_SimpleDescMsg
          CFI (cfiCond368) Conditional ??CrossCallReturnLabel_132, ??CrossCallReturnLabel_82
          CFI (cfiCond368) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond368) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond368) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond368) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond368) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond368) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond368) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond368) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond368) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond368) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond368) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond368) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond368) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond368) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond368) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond368) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond368) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond368) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond368) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond368) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond368) CFA_SP SP+-4
          CFI (cfiCond368) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond369 Using cfiCommon0
          CFI (cfiCond369) Function ZDP_MgmtLqiRsp
          CFI (cfiCond369) Conditional ??CrossCallReturnLabel_132, ??CrossCallReturnLabel_83
          CFI (cfiCond369) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond369) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond369) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond369) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond369) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond369) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond369) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond369) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond369) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond369) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond369) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond369) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond369) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond369) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond369) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond369) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond369) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond369) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond369) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond369) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond369) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond369) CFA_SP SP+-4
          CFI (cfiCond369) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker370 Using cfiCommon1
          CFI (cfiPicker370) NoFunction
          CFI (cfiPicker370) Picker
        MOVX      A,@DPTR
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond366
          CFI EndBlock cfiCond367
          CFI EndBlock cfiCond368
          CFI EndBlock cfiCond369
          CFI EndBlock cfiPicker370

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine30:
          CFI Block cfiCond371 Using cfiCommon0
          CFI Function ZDP_MgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_37
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond372 Using cfiCommon0
          CFI (cfiCond372) Function ZDP_MgmtLqiRsp
          CFI (cfiCond372) Conditional ??CrossCallReturnLabel_38
          CFI (cfiCond372) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond372) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond372) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond372) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond372) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond372) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond372) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond372) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond372) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond372) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond372) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond372) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond372) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond372) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond372) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond372) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond372) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond372) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond372) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond372) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond372) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond372) CFA_SP SP+-2
          CFI (cfiCond372) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker373 Using cfiCommon1
          CFI (cfiPicker373) NoFunction
          CFI (cfiPicker373) Picker
        MOVX      @DPTR,A
        ; Setup parameters for call to function fillAndSend
        ; Setup parameters for call to function fillAndSend
        MOV       ?V0,#0x31
        MOV       ?V1,#-0x80
        MOV       R0,#?V0
        RET
          CFI EndBlock cfiCond371
          CFI EndBlock cfiCond372
          CFI EndBlock cfiPicker373

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine22:
          CFI Block cfiCond374 Using cfiCommon0
          CFI Function ZDP_MgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_206
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond375 Using cfiCommon0
          CFI (cfiCond375) Function ZDP_MgmtBindRsp
          CFI (cfiCond375) Conditional ??CrossCallReturnLabel_207
          CFI (cfiCond375) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond375) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond375) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond375) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond375) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond375) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond375) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond375) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond375) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond375) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond375) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond375) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond375) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond375) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond375) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond375) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond375) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond375) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond375) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond375) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond375) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond375) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond375) CFA_SP SP+-2
          CFI (cfiCond375) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker376 Using cfiCommon1
          CFI (cfiPicker376) NoFunction
          CFI (cfiPicker376) Picker
        MOV       A,R1
        MOV       R6,A
        ; Setup parameters for call to function osal_mem_free
        ; Setup parameters for call to function osal_mem_free
        MOV       R2,?V2
        MOV       R3,?V3
          CFI EndBlock cfiCond374
          CFI EndBlock cfiCond375
          CFI EndBlock cfiPicker376
        REQUIRE ??Subroutine120_0
        ; // Fall through to label ??Subroutine120_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine120_0:
          CFI Block cfiCond377 Using cfiCommon0
          CFI Function ZDP_MgmtNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_208
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond378 Using cfiCommon0
          CFI (cfiCond378) Function ZDP_MgmtLqiRsp
          CFI (cfiCond378) Conditional ??CrossCallReturnLabel_206
          CFI (cfiCond378) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond378) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond378) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond378) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond378) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond378) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond378) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond378) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond378) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond378) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond378) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond378) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond378) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond378) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond378) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond378) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond378) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond378) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond378) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond378) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond378) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond378) CFA_SP SP+-2
          CFI (cfiCond378) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond379 Using cfiCommon0
          CFI (cfiCond379) Function ZDP_MgmtBindRsp
          CFI (cfiCond379) Conditional ??CrossCallReturnLabel_207
          CFI (cfiCond379) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond379) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond379) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond379) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond379) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond379) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond379) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond379) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond379) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond379) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond379) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond379) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond379) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond379) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond379) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond379) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond379) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond379) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond379) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond379) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond379) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond379) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond379) CFA_SP SP+-2
          CFI (cfiCond379) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker380 Using cfiCommon1
          CFI (cfiPicker380) NoFunction
          CFI (cfiPicker380) Picker
        LCALL     ?Subroutine97 & 0xFFFF
??CrossCallReturnLabel_209:
        MOV       A,R6
        MOV       R1,A
        RET
          CFI EndBlock cfiCond377
          CFI EndBlock cfiCond378
          CFI EndBlock cfiCond379
          CFI EndBlock cfiPicker380
// 1614 
// 1615 /*********************************************************************
// 1616  * @fn          ZDP_MgmtRtgRsp
// 1617  *
// 1618  * @brief       This builds and send a Mgmt_Rtg_rsp message. This
// 1619  *              function sends a unicast message.
// 1620  *
// 1621  * @param       dstAddr - destination address of the message
// 1622  * @param       Status - message status (ZDP_SUCCESS or other)
// 1623  * @param       RoutingTableEntries - Total number of entries
// 1624  * @param       StartIndex - Starting index within the reporting list
// 1625  * @param       RoutingTableListCount - number of entries included
// 1626  *                                      in this message
// 1627  * @param       RoutingTableList - List of Routing Table entries
// 1628  * @param       SecurityEnable - true to enable security for this message
// 1629  *
// 1630  * @return      ZStatus_t
// 1631  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1632 ZStatus_t ZDP_MgmtRtgRsp( byte TransSeq, zAddrType_t *dstAddr,
ZDP_MgmtRtgRsp:
          CFI Block cfiBlock381 Using cfiCommon0
          CFI Function ZDP_MgmtRtgRsp
        CODE
// 1633                             byte Status,
// 1634                             byte RoutingTableEntries,
// 1635                             byte StartIndex,
// 1636                             byte RoutingListCount,
// 1637                             rtgItem_t *RoutingTableList,
// 1638                             byte SecurityEnable )
// 1639 {
        FUNCALL ZDP_MgmtRtgRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtRtgRsp, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtRtgRsp, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        MOV       A,#-0x14
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
        ; Saved register size: 20
        ; Auto size: 1
        MOV       A,#-0x1
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       A,R1
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
        MOV       ?V2,R2
        MOV       ?V3,R3
        MOV       ?V1,R4
        MOV       ?V0,R5
        MOV       A,#0x16
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       ?V5,A
// 1640   uint8 *buf;
// 1641   uint8 *pBuf;
// 1642   // Status + RoutingTableEntries + StartIndex + RoutingListCount.
// 1643   byte len = 1 + 1 + 1 + 1;
// 1644   byte x;
// 1645 
// 1646   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1647 
// 1648   // Add an array for Routing List data
// 1649   len += (RoutingListCount * ZDP_ROUTINGENTRY_SIZE);
        MOV       B,#0x5
        MUL       AB
        ADD       A,#0x4
        MOV       ?V4,A
// 1650 
// 1651   buf = osal_mem_alloc( (short)(len+1) );
        ; Setup parameters for call to function osal_mem_alloc
        LCALL     ?Subroutine69 & 0xFFFF
??CrossCallReturnLabel_111:
        MOV       ?V6,R2
        MOV       ?V7,R3
        MOV       R6,?V6
        MOV       R7,?V7
// 1652   if ( buf == NULL )
        MOV       A,R2
        ORL       A,R7
        JNZ       ??ZDP_MgmtRtgRsp_0
// 1653   {
// 1654     return afStatus_MEM_FAIL;
        MOV       R1,#0x10
        LJMP      ??ZDP_MgmtRtgRsp_1 & 0xFFFF
// 1655   }
// 1656 
// 1657   pBuf = buf+1;
??ZDP_MgmtRtgRsp_0:
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        MOV       R0,DPL
        MOV       R1,DPH
        MOV       A,R1
        MOV       R3,A
// 1658 
// 1659   *pBuf++ = Status;
        MOV       A,?V1
        MOVX      @DPTR,A
// 1660   *pBuf++ = RoutingTableEntries;
        INC       DPTR
        MOV       A,?V0
        MOVX      @DPTR,A
// 1661   *pBuf++ = StartIndex;
        MOV       A,#0x15
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine117_0 & 0xFFFF
??CrossCallReturnLabel_194:
        LCALL     ??Subroutine107_0 & 0xFFFF
// 1662   *pBuf++ = RoutingListCount;
??CrossCallReturnLabel_159:
        MOV       A,?V5
        MOVX      @DPTR,A
        MOV       A,R0
        ADD       A,#0x4
        MOV       R2,A
        JNC       ??ZDP_MgmtRtgRsp_2
        INC       R3
// 1663 
// 1664   for ( x = 0; x < RoutingListCount; x++ )
??ZDP_MgmtRtgRsp_2:
        MOV       ?V6,#0x0
        MOV       A,#0x17
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine40 & 0xFFFF
??CrossCallReturnLabel_62:
        LJMP      ??ZDP_MgmtRtgRsp_3 & 0xFFFF
// 1665   {
// 1666     *pBuf++ = LO_UINT16( RoutingTableList->dstAddress );  // Destination Address
??ZDP_MgmtRtgRsp_4:
        LCALL     ?Subroutine13 & 0xFFFF
// 1667     *pBuf++ = HI_UINT16( RoutingTableList->dstAddress );
// 1668 
// 1669     *pBuf = (RoutingTableList->status & 0x07);
??CrossCallReturnLabel_6:
        MOV       ?V8,A
        CLR       A
        ADDC      A,R3
        MOV       ?V9,A
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        ANL       A,#0x7
        MOV       DPL,?V8
        MOV       DPH,?V9
        MOVX      @DPTR,A
// 1670     if ( RoutingTableList->options & (ZP_MTO_ROUTE_RC | ZP_MTO_ROUTE_NRC) )
        MOV       A,R4
        ADD       A,#0x6
        MOV       DPL,A
        CLR       A
        ADDC      A,R5
        MOV       DPH,A
        MOVX      A,@DPTR
        ANL       A,#0x18
        JZ        ??ZDP_MgmtRtgRsp_5
// 1671     {
// 1672       uint8 options = 0;
// 1673       options |= ZDO_MGMT_RTG_ENTRY_MANYTOONE;
        MOV       ?V7,#0x2
// 1674 
// 1675       if ( RoutingTableList->options & ZP_RTG_RECORD )
        MOVX      A,@DPTR
        MOV       C,0xE0 /* A   */.2
        JNC       ??ZDP_MgmtRtgRsp_6
// 1676       {
// 1677         options |= ZDO_MGMT_RTG_ENTRY_ROUTE_RECORD_REQUIRED;
        MOV       ?V7,#0x6
// 1678       }
// 1679 
// 1680       if ( RoutingTableList->options & ZP_MTO_ROUTE_NRC )
??ZDP_MgmtRtgRsp_6:
        MOV       C,0xE0 /* A   */.4
        JNC       ??ZDP_MgmtRtgRsp_7
// 1681       {
// 1682         options |= ZDO_MGMT_RTG_ENTRY_MEMORY_CONSTRAINED;
        SETB      C
        MOV       A,?V7
        SETB      0xE0 /* A   */.0
        MOV       ?V7,A
// 1683       }
// 1684 
// 1685       *pBuf |= (options << 3);
??ZDP_MgmtRtgRsp_7:
        MOV       A,?V7
        RLC       A
        RLC       A
        RLC       A
        ANL       A,#0xf8
        MOV       ?V7,A
        MOV       DPL,?V8
        MOV       DPH,?V9
        MOVX      A,@DPTR
        ORL       A,?V7
        MOVX      @DPTR,A
// 1686     }
// 1687     pBuf++;
// 1688 
// 1689     *pBuf++ = LO_UINT16( RoutingTableList->nextHopAddress );  // Next hop
??ZDP_MgmtRtgRsp_5:
        MOV       A,R4
        ADD       A,#0x2
        MOV       ?V8,A
        CLR       A
        ADDC      A,R5
        MOV       ?V9,A
        MOV       DPL,?V8
        MOV       DPH,A
        LCALL     ?Subroutine64 & 0xFFFF
??CrossCallReturnLabel_103:
        MOVX      @DPTR,A
// 1690     *pBuf++ = HI_UINT16( RoutingTableList->nextHopAddress );
        MOV       DPL,?V8
        MOV       DPH,?V9
        INC       DPTR
        LCALL     ?Subroutine64 & 0xFFFF
??CrossCallReturnLabel_104:
        INC       DPTR
        MOVX      @DPTR,A
        MOV       A,R2
        ADD       A,#0x5
        MOV       R2,A
        JNC       ??ZDP_MgmtRtgRsp_8
        INC       R3
// 1691     RoutingTableList++;    // Move to next list entry
??ZDP_MgmtRtgRsp_8:
        MOV       A,R4
        ADD       A,#0x7
        MOV       R4,A
        JNC       ??ZDP_MgmtRtgRsp_9
        INC       R5
// 1692   }
??ZDP_MgmtRtgRsp_9:
        INC       ?V6
??ZDP_MgmtRtgRsp_3:
        MOV       A,?V6
        CLR       C
        SUBB      A,?V5
        JNC       $+5
        LJMP      ??ZDP_MgmtRtgRsp_4 & 0xFFFF
// 1693 
// 1694   FillAndSendBuffer( &TransSeq, dstAddr, Mgmt_Rtg_rsp, len, buf );
        MOV       DPTR,#ZDP_TmpBuf
        LCALL     ?Subroutine26 & 0xFFFF
??CrossCallReturnLabel_27:
        ; Setup parameters for call to function fillAndSend
        MOV       ?V6,#0x32
        MOV       ?V7,#-0x80
        MOV       R0,#?V6
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       R1,?V4
        MOV       R4,?V2
        MOV       R5,?V3
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP101_8
        LCALL     ??Subroutine123_0 & 0xFFFF
??CrossCallReturnLabel_233:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       A,R1
        MOV       ?V2,A
        ; Setup parameters for call to function osal_mem_free
        LCALL     ?Subroutine75 & 0xFFFF
??CrossCallReturnLabel_122:
        MOV       R1,?V2
??ZDP_MgmtRtgRsp_1:
        MOV       A,#0x1
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 20)
        LJMP      ?Subroutine4 & 0xFFFF
// 1695 }
          CFI EndBlock cfiBlock381

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine69:
          CFI Block cfiCond382 Using cfiCommon0
          CFI Function ZDP_MgmtNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_110
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond383 Using cfiCommon0
          CFI (cfiCond383) Function ZDP_MgmtRtgRsp
          CFI (cfiCond383) Conditional ??CrossCallReturnLabel_111
          CFI (cfiCond383) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond383) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond383) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond383) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond383) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond383) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond383) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond383) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond383) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond383) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond383) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond383) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond383) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond383) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond383) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond383) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond383) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond383) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond383) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond383) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond383) CFA_SP SP+-2
          CFI (cfiCond383) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond384 Using cfiCommon0
          CFI (cfiCond384) Function ZDP_MgmtNwkUpdateNotify
          CFI (cfiCond384) Conditional ??CrossCallReturnLabel_112
          CFI (cfiCond384) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond384) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond384) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond384) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond384) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond384) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond384) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond384) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond384) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond384) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond384) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond384) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond384) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond384) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond384) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond384) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond384) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond384) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond384) CFA_SP SP+-2
          CFI (cfiCond384) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker385 Using cfiCommon1
          CFI (cfiPicker385) NoFunction
          CFI (cfiPicker385) Picker
        LCALL     ?Subroutine95 & 0xFFFF
??CrossCallReturnLabel_149:
        RET
          CFI EndBlock cfiCond382
          CFI EndBlock cfiCond383
          CFI EndBlock cfiCond384
          CFI EndBlock cfiPicker385

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine95:
          CFI Block cfiCond386 Using cfiCommon0
          CFI Function ZDP_MgmtNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_149, ??CrossCallReturnLabel_110
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond387 Using cfiCommon0
          CFI (cfiCond387) Function ZDP_MgmtRtgRsp
          CFI (cfiCond387) Conditional ??CrossCallReturnLabel_149, ??CrossCallReturnLabel_111
          CFI (cfiCond387) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond387) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond387) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond387) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond387) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond387) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond387) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond387) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond387) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond387) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond387) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond387) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond387) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond387) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond387) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond387) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond387) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond387) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond387) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond387) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond387) CFA_SP SP+-4
          CFI (cfiCond387) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond388 Using cfiCommon0
          CFI (cfiCond388) Function ZDP_MgmtNwkUpdateNotify
          CFI (cfiCond388) Conditional ??CrossCallReturnLabel_149, ??CrossCallReturnLabel_112
          CFI (cfiCond388) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond388) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond388) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond388) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond388) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond388) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond388) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond388) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond388) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond388) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond388) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond388) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond388) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond388) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond388) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond388) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond388) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond388) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond388) CFA_SP SP+-4
          CFI (cfiCond388) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond389 Using cfiCommon0
          CFI (cfiCond389) Function ZDP_MgmtLqiRsp
          CFI (cfiCond389) Conditional ??CrossCallReturnLabel_150, ??CrossCallReturnLabel_108
          CFI (cfiCond389) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond389) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond389) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond389) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond389) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond389) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond389) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond389) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond389) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond389) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond389) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond389) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond389) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond389) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond389) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond389) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond389) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond389) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond389) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond389) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond389) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond389) CFA_SP SP+-4
          CFI (cfiCond389) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond390 Using cfiCommon0
          CFI (cfiCond390) Function ZDP_MgmtBindRsp
          CFI (cfiCond390) Conditional ??CrossCallReturnLabel_150, ??CrossCallReturnLabel_109
          CFI (cfiCond390) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond390) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond390) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond390) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond390) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond390) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond390) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond390) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond390) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond390) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond390) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond390) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond390) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond390) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond390) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond390) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond390) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond390) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond390) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond390) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond390) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond390) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond390) CFA_SP SP+-4
          CFI (cfiCond390) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker391 Using cfiCommon1
          CFI (cfiPicker391) NoFunction
          CFI (cfiPicker391) Picker
        ADD       A,#0x1
        MOV       R2,A
        CLR       A
        ADDC      A,#0x0
        MOV       R3,A
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        RET
          CFI EndBlock cfiCond386
          CFI EndBlock cfiCond387
          CFI EndBlock cfiCond388
          CFI EndBlock cfiCond389
          CFI EndBlock cfiCond390
          CFI EndBlock cfiPicker391

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine64:
          CFI Block cfiCond392 Using cfiCommon0
          CFI Function ZDP_MgmtRtgRsp
          CFI Conditional ??CrossCallReturnLabel_103
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond393 Using cfiCommon0
          CFI (cfiCond393) Function ZDP_MgmtRtgRsp
          CFI (cfiCond393) Conditional ??CrossCallReturnLabel_104
          CFI (cfiCond393) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond393) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond393) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond393) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond393) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond393) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond393) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond393) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond393) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond393) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond393) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond393) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond393) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond393) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond393) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond393) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond393) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond393) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond393) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond393) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond393) CFA_SP SP+-2
          CFI (cfiCond393) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker394 Using cfiCommon1
          CFI (cfiPicker394) NoFunction
          CFI (cfiPicker394) Picker
        LCALL     ?Subroutine86 & 0xFFFF
??CrossCallReturnLabel_136:
        RET
          CFI EndBlock cfiCond392
          CFI EndBlock cfiCond393
          CFI EndBlock cfiPicker394

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine86:
          CFI Block cfiCond395 Using cfiCommon0
          CFI Function ZDP_MgmtRtgRsp
          CFI Conditional ??CrossCallReturnLabel_136, ??CrossCallReturnLabel_103
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond396 Using cfiCommon0
          CFI (cfiCond396) Function ZDP_MgmtRtgRsp
          CFI (cfiCond396) Conditional ??CrossCallReturnLabel_136, ??CrossCallReturnLabel_104
          CFI (cfiCond396) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond396) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond396) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond396) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond396) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond396) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond396) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond396) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond396) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond396) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond396) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond396) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond396) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond396) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond396) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond396) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond396) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond396) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond396) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond396) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond396) CFA_SP SP+-4
          CFI (cfiCond396) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond397 Using cfiCommon0
          CFI (cfiCond397) Function ZDP_BindUnbindReq
          CFI (cfiCond397) Conditional ??CrossCallReturnLabel_135, ??CrossCallReturnLabel_63
          CFI (cfiCond397) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond397) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond397) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond397) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond397) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond397) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond397) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond397) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond397) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond397) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond397) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond397) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond397) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond397) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond397) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond397) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond397) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond397) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond397) CFA_SP SP+-4
          CFI (cfiCond397) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond398 Using cfiCommon0
          CFI (cfiCond398) Function ZDP_MgmtBindRsp
          CFI (cfiCond398) Conditional ??CrossCallReturnLabel_135, ??CrossCallReturnLabel_64
          CFI (cfiCond398) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond398) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond398) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond398) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond398) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond398) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond398) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond398) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond398) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond398) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond398) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond398) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond398) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond398) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond398) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond398) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond398) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond398) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond398) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond398) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond398) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond398) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond398) CFA_SP SP+-4
          CFI (cfiCond398) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker399 Using cfiCommon1
          CFI (cfiPicker399) NoFunction
          CFI (cfiPicker399) Picker
        MOVX      A,@DPTR
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond395
          CFI EndBlock cfiCond396
          CFI EndBlock cfiCond397
          CFI EndBlock cfiCond398
          CFI EndBlock cfiPicker399
// 1696 
// 1697 /*********************************************************************
// 1698  * @fn          ZDP_MgmtBindRsp
// 1699  *
// 1700  * @brief       This builds and send a Mgmt_Bind_rsp message. This
// 1701  *              function sends a unicast message.
// 1702  *
// 1703  * @param       dstAddr - destination address of the message
// 1704  * @param       Status - message status (ZDP_SUCCESS or other)
// 1705  * @param       BindingTableEntries - Total number of entries
// 1706  * @param       StartIndex - Starting index within the reporting list
// 1707  * @param       BindingTableListCount - number of entries included
// 1708  *                                 in this message
// 1709  * @param       BindingTableList - List of Binding Table entries
// 1710  * @param       SecurityEnable - Security Options
// 1711  *
// 1712  * @return      ZStatus_t
// 1713  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1714 ZStatus_t ZDP_MgmtBindRsp( byte TransSeq, zAddrType_t *dstAddr,
ZDP_MgmtBindRsp:
          CFI Block cfiBlock400 Using cfiCommon0
          CFI Function ZDP_MgmtBindRsp
        CODE
// 1715                             byte Status,
// 1716                             byte BindingTableEntries,
// 1717                             byte StartIndex,
// 1718                             byte BindingTableListCount,
// 1719                             apsBindingItem_t *BindingTableList,
// 1720                             byte SecurityEnable )
// 1721 {
        FUNCALL ZDP_MgmtBindRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtBindRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtBindRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtBindRsp, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtBindRsp, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V12
        REQUIRE ?V13
        MOV       A,#-0x16
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 22)
        ; Saved register size: 22
        ; Auto size: 1
        MOV       A,#-0x1
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       A,R1
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
        MOV       ?V12,R2
        MOV       ?V13,R3
        MOV       ?V10,R4
        MOV       ?V5,R5
        MOV       A,#0x18
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       ?V4,A
// 1722   uint8 *buf;
// 1723   uint8 *pBuf;
// 1724   uint8 maxLen; // maxLen is the maximum packet length to allocate enough memory space
// 1725   uint8 len;    // Actual length varies due to different addrMode
// 1726   uint8 x;
// 1727   byte extZdpBindEntrySize = ZDP_BINDINGENTRY_SIZE + 1 + 1; // One more byte for cluserID and DstAddrMode
// 1728   byte shortZdpBindEntrySize = ZDP_BINDINGENTRY_SIZE + 1 + 1 + 2 - 8 - 1; // clusterID + DstAddrMode + shortAddr - ExtAddr - DstEndpoint
// 1729 
// 1730   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1731 
// 1732   // Status + BindingTableEntries + StartIndex + BindingTableListCount.
// 1733   maxLen = 1 + 1 + 1 + 1;
// 1734   maxLen += (BindingTableListCount * extZdpBindEntrySize );  //max length
// 1735   buf = osal_mem_alloc( maxLen + 1 );  // +1 for transaction ID
        ; Setup parameters for call to function osal_mem_alloc
        MOV       B,#0x15
        MUL       AB
        ADD       A,#0x4
        LCALL     ?Subroutine68 & 0xFFFF
// 1736 
// 1737   if ( buf == NULL )
??CrossCallReturnLabel_109:
        JNZ       ??ZDP_MgmtBindRsp_0
// 1738   {
// 1739     return afStatus_MEM_FAIL;
        MOV       R1,#0x10
        LJMP      ??CrossCallReturnLabel_207 & 0xFFFF
// 1740   }
// 1741 
// 1742   pBuf = buf+1;
??ZDP_MgmtBindRsp_0:
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        MOV       ?V6,DPL
        MOV       ?V7,DPH
        MOV       R2,?V6
        MOV       R3,?V7
// 1743 
// 1744   *pBuf++ = Status;
        MOV       A,?V10
        MOVX      @DPTR,A
// 1745   *pBuf++ = BindingTableEntries;
        INC       DPTR
        MOV       A,?V5
        MOVX      @DPTR,A
// 1746   *pBuf++ = StartIndex;
        MOV       A,#0x17
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine65 & 0xFFFF
??CrossCallReturnLabel_106:
        INC       DPTR
        LCALL     ?Subroutine34 & 0xFFFF
// 1747   *pBuf++ = BindingTableListCount;
??CrossCallReturnLabel_45:
        MOV       A,?V4
        MOVX      @DPTR,A
        MOV       A,R2
        ADD       A,#0x4
        MOV       R2,A
        JNC       ??ZDP_MgmtBindRsp_1
        INC       R3
// 1748 
// 1749   // Initial length = Status + BindingTableEntries + StartIndex + BindingTableListCount.
// 1750   // length += ZDP_BINDINGENTRY_SIZE   -- Version 1.0
// 1751   //           extZdpBindEntrySize     -- Version 1.1 extended address mode
// 1752   //           shortZdpBindEntrySize   -- Version 1.1 group address mode
// 1753 
// 1754   len = 1 + 1 + 1 + 1;
??ZDP_MgmtBindRsp_1:
        MOV       ?V0,#0x4
// 1755   for ( x = 0; x < BindingTableListCount; x++ )
        MOV       ?V1,#0x0
        MOV       A,#0x19
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine125_0 & 0xFFFF
??CrossCallReturnLabel_247:
        SJMP      ??ZDP_MgmtBindRsp_2
// 1756   {
// 1757     pBuf = osal_cpyExtAddr( pBuf, BindingTableList->srcAddr );
// 1758     *pBuf++ = BindingTableList->srcEP;
// 1759 
// 1760     // Cluster ID
// 1761     *pBuf++ = LO_UINT16( BindingTableList->clusterID );
// 1762     *pBuf++ = HI_UINT16( BindingTableList->clusterID );
// 1763 
// 1764     *pBuf++ = BindingTableList->dstAddr.addrMode;
// 1765     if ( BindingTableList->dstAddr.addrMode == Addr64Bit )
// 1766     {
// 1767       len += extZdpBindEntrySize;
// 1768       pBuf = osal_cpyExtAddr( pBuf, BindingTableList->dstAddr.addr.extAddr );
// 1769       *pBuf++ = BindingTableList->dstEP;
// 1770     }
// 1771     else
// 1772     {
// 1773       len += shortZdpBindEntrySize;
??ZDP_MgmtBindRsp_3:
        MOV       A,#0xe
        ADD       A,?V0
        MOV       ?V0,A
// 1774       *pBuf++ = LO_UINT16( BindingTableList->dstAddr.addr.shortAddr );
        LCALL     ?Subroutine13 & 0xFFFF
// 1775       *pBuf++ = HI_UINT16( BindingTableList->dstAddr.addr.shortAddr );
// 1776     }
??CrossCallReturnLabel_7:
        MOV       R2,A
        JNC       ??ZDP_MgmtBindRsp_4
        INC       R3
// 1777     BindingTableList++;    // Move to next list entry
??ZDP_MgmtBindRsp_4:
        MOV       A,R6
        ADD       A,#0x15
        MOV       R6,A
        JNC       ??ZDP_MgmtBindRsp_5
        INC       R7
??ZDP_MgmtBindRsp_5:
        INC       ?V1
??ZDP_MgmtBindRsp_2:
        MOV       A,?V1
        CLR       C
        SUBB      A,?V4
        JNC       ??ZDP_MgmtBindRsp_6
        ; Setup parameters for call to function sAddrExtCpy
        MOV       A,R6
        MOV       R4,A
        MOV       A,R7
        MOV       R5,A
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ??Subroutine124_0 & 0xFFFF
??CrossCallReturnLabel_237:
        LCALL     ?Subroutine32 & 0xFFFF
??CrossCallReturnLabel_42:
        MOV       DPL,R0
        LCALL     ?Subroutine66 & 0xFFFF
??CrossCallReturnLabel_239:
        LCALL     ??Subroutine126_0 & 0xFFFF
??CrossCallReturnLabel_253:
        LCALL     ?Subroutine65 & 0xFFFF
??CrossCallReturnLabel_107:
        INC       DPTR
        MOVX      @DPTR,A
        MOV       A,R6
        ADD       A,#0x13
        MOV       R0,A
        CLR       A
        ADDC      A,R7
        MOV       R1,A
        MOV       DPL,R0
        MOV       DPH,A
        LCALL     ?Subroutine42 & 0xFFFF
??CrossCallReturnLabel_64:
        JNC       ??ZDP_MgmtBindRsp_7
        INC       R3
??ZDP_MgmtBindRsp_7:
        MOV       A,R6
        ADD       A,#0xb
        MOV       R4,A
        CLR       A
        ADDC      A,R7
        MOV       R5,A
        MOV       DPL,R0
        MOV       DPH,R1
        MOVX      A,@DPTR
        XRL       A,#0x3
        JNZ       ??ZDP_MgmtBindRsp_3
        MOV       A,#0x15
        ADD       A,?V0
        MOV       ?V0,A
        ; Setup parameters for call to function sAddrExtCpy
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
        MOV       A,R6
        ADD       A,#0x14
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
        MOV       DPH,A
        MOVX      A,@DPTR
        LCALL     ?Subroutine20 & 0xFFFF
// 1778   }
??CrossCallReturnLabel_156:
        SJMP      ??ZDP_MgmtBindRsp_4
// 1779 
// 1780   FillAndSendBuffer( &TransSeq, dstAddr, Mgmt_Bind_rsp, len, buf );
??ZDP_MgmtBindRsp_6:
        MOV       DPTR,#ZDP_TmpBuf
        MOV       A,?V6
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,?V7
        MOVX      @DPTR,A
        ; Setup parameters for call to function fillAndSend
        MOV       ?V6,#0x33
        MOV       ?V7,#-0x80
        MOV       R0,#?V6
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 25)
        MOV       R1,?V0
        MOV       R4,?V12
        MOV       R5,?V13
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP101_8
        LCALL     ??Subroutine123_0 & 0xFFFF
??CrossCallReturnLabel_234:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 23)
        LCALL     ?Subroutine22 & 0xFFFF
??CrossCallReturnLabel_207:
        LJMP      ?Subroutine7 & 0xFFFF
// 1781 }
          CFI EndBlock cfiBlock400

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine68:
          CFI Block cfiCond401 Using cfiCommon0
          CFI Function ZDP_MgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_108
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond402 Using cfiCommon0
          CFI (cfiCond402) Function ZDP_MgmtBindRsp
          CFI (cfiCond402) Conditional ??CrossCallReturnLabel_109
          CFI (cfiCond402) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond402) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond402) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond402) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond402) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond402) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond402) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond402) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond402) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond402) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond402) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond402) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond402) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond402) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond402) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond402) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond402) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond402) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond402) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond402) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond402) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond402) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond402) CFA_SP SP+-2
          CFI (cfiCond402) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker403 Using cfiCommon1
          CFI (cfiPicker403) NoFunction
          CFI (cfiPicker403) Picker
        LCALL     ?Subroutine95 & 0xFFFF
??CrossCallReturnLabel_150:
        MOV       ?V2,R2
        MOV       ?V3,R3
        MOV       A,R2
        ORL       A,R3
        RET
          CFI EndBlock cfiCond401
          CFI EndBlock cfiCond402
          CFI EndBlock cfiPicker403

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine67:
          CFI Block cfiCond404 Using cfiCommon0
          CFI Function ZDP_MgmtDirectJoinReq
          CFI Conditional ??CrossCallReturnLabel_211
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond405 Using cfiCommon0
          CFI (cfiCond405) Function ZDP_MgmtLeaveReq
          CFI (cfiCond405) Conditional ??CrossCallReturnLabel_211
          CFI (cfiCond405) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond405) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond405) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond405) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond405) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond405) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond405) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond405) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond405) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond405) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond405) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond405) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond405) CFA_SP SP+-2
          CFI (cfiCond405) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond406 Using cfiCommon0
          CFI (cfiCond406) Function ZDP_MgmtNwkDiscReq
          CFI (cfiCond406) Conditional ??CrossCallReturnLabel_211
          CFI (cfiCond406) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond406) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond406) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond406) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond406) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond406) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond406) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond406) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond406) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond406) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond406) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond406) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond406) CFA_SP SP+-2
          CFI (cfiCond406) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond407 Using cfiCommon0
          CFI (cfiCond407) Function ZDP_UserDescSet
          CFI (cfiCond407) Conditional ??CrossCallReturnLabel_212
          CFI (cfiCond407) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond407) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond407) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond407) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond407) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond407) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond407) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond407) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond407) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond407) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond407) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond407) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond407) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond407) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond407) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond407) CFA_SP SP+-2
          CFI (cfiCond407) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiPicker408 Using cfiCommon1
          CFI (cfiPicker408) NoFunction
          CFI (cfiPicker408) Picker
        MOV       A,R6
        MOV       R4,A
        MOV       A,R7
          CFI EndBlock cfiCond404
          CFI EndBlock cfiCond405
          CFI EndBlock cfiCond406
          CFI EndBlock cfiCond407
          CFI EndBlock cfiPicker408
        REQUIRE ??Subroutine121_0
        ; // Fall through to label ??Subroutine121_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine121_0:
          CFI Block cfiCond409 Using cfiCommon0
          CFI Function ZDP_MatchDescReq
          CFI Conditional ??CrossCallReturnLabel_213
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond410 Using cfiCommon0
          CFI (cfiCond410) Function ZDP_MgmtDirectJoinReq
          CFI (cfiCond410) Conditional ??CrossCallReturnLabel_211
          CFI (cfiCond410) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond410) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond410) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond410) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond410) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond410) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond410) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond410) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond410) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond410) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond410) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond410) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond410) CFA_SP SP+-2
          CFI (cfiCond410) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond411 Using cfiCommon0
          CFI (cfiCond411) Function ZDP_MgmtLeaveReq
          CFI (cfiCond411) Conditional ??CrossCallReturnLabel_211
          CFI (cfiCond411) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond411) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond411) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond411) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond411) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond411) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond411) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond411) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond411) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond411) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond411) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond411) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond411) CFA_SP SP+-2
          CFI (cfiCond411) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond412 Using cfiCommon0
          CFI (cfiCond412) Function ZDP_MgmtNwkDiscReq
          CFI (cfiCond412) Conditional ??CrossCallReturnLabel_211
          CFI (cfiCond412) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond412) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond412) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond412) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond412) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond412) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond412) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond412) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond412) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond412) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond412) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond412) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond412) CFA_SP SP+-2
          CFI (cfiCond412) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond413 Using cfiCommon0
          CFI (cfiCond413) Function ZDP_UserDescSet
          CFI (cfiCond413) Conditional ??CrossCallReturnLabel_212
          CFI (cfiCond413) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond413) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond413) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond413) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond413) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond413) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond413) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond413) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond413) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond413) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond413) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond413) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond413) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond413) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond413) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond413) CFA_SP SP+-2
          CFI (cfiCond413) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiPicker414 Using cfiCommon1
          CFI (cfiPicker414) NoFunction
          CFI (cfiPicker414) Picker
        MOV       R5,A
          CFI EndBlock cfiCond409
          CFI EndBlock cfiCond410
          CFI EndBlock cfiCond411
          CFI EndBlock cfiCond412
          CFI EndBlock cfiCond413
          CFI EndBlock cfiPicker414
        REQUIRE ??Subroutine122_0
        ; // Fall through to label ??Subroutine122_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine122_0:
          CFI Block cfiCond415 Using cfiCommon0
          CFI Function ZDP_NwkAddrReq
          CFI Conditional ??CrossCallReturnLabel_214
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond416 Using cfiCommon0
          CFI (cfiCond416) Function ZDP_MgmtPermitJoinReq
          CFI (cfiCond416) Conditional ??CrossCallReturnLabel_214
          CFI (cfiCond416) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond416) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond416) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond416) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond416) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond416) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond416) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond416) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond416) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond416) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond416) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond416) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond416) CFA_SP SP+-2
          CFI (cfiCond416) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond417 Using cfiCommon0
          CFI (cfiCond417) Function ZDP_IEEEAddrReq
          CFI (cfiCond417) Conditional ??CrossCallReturnLabel_215
          CFI (cfiCond417) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond417) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond417) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond417) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond417) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond417) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond417) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond417) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond417) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond417) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond417) CFA_SP SP+-2
          CFI (cfiCond417) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond418 Using cfiCommon0
          CFI (cfiCond418) Function ZDP_DeviceAnnce
          CFI (cfiCond418) Conditional ??CrossCallReturnLabel_215
          CFI (cfiCond418) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond418) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond418) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond418) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond418) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond418) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond418) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond418) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond418) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond418) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond418) CFA_SP SP+-2
          CFI (cfiCond418) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond419 Using cfiCommon0
          CFI (cfiCond419) Function ZDP_ServerDiscReq
          CFI (cfiCond419) Conditional ??CrossCallReturnLabel_216
          CFI (cfiCond419) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond419) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond419) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond419) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond419) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond419) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond419) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond419) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond419) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond419) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond419) CFA_SP SP+-2
          CFI (cfiCond419) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond420 Using cfiCommon0
          CFI (cfiCond420) Function ZDP_EndDeviceBindReq
          CFI (cfiCond420) Conditional ??CrossCallReturnLabel_217
          CFI (cfiCond420) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond420) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond420) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond420) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond420) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond420) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond420) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond420) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond420) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond420) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond420) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond420) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond420) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond420) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond420) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond420) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond420) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond420) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond420) CFA_SP SP+-2
          CFI (cfiCond420) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond421 Using cfiCommon0
          CFI (cfiCond421) Function ZDP_BindUnbindReq
          CFI (cfiCond421) Conditional ??CrossCallReturnLabel_218
          CFI (cfiCond421) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond421) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond421) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond421) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond421) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond421) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond421) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond421) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond421) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond421) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond421) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond421) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond421) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond421) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond421) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond421) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond421) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond421) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond421) CFA_SP SP+-2
          CFI (cfiCond421) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond422 Using cfiCommon0
          CFI (cfiCond422) Function ZDP_MgmtPermitJoinReq
          CFI (cfiCond422) Conditional ??CrossCallReturnLabel_219
          CFI (cfiCond422) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond422) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond422) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond422) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond422) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond422) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond422) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond422) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond422) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond422) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond422) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond422) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond422) CFA_SP SP+-2
          CFI (cfiCond422) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond423 Using cfiCommon0
          CFI (cfiCond423) Function ZDP_MgmtNwkUpdateReq
          CFI (cfiCond423) Conditional ??CrossCallReturnLabel_220
          CFI (cfiCond423) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond423) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond423) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond423) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond423) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond423) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond423) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond423) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond423) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond423) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond423) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond423) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond423) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond423) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond423) CFA_SP SP+-2
          CFI (cfiCond423) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond424 Using cfiCommon0
          CFI (cfiCond424) Function ZDP_MatchDescReq
          CFI (cfiCond424) Conditional ??CrossCallReturnLabel_213
          CFI (cfiCond424) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond424) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond424) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond424) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond424) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond424) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond424) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond424) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond424) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond424) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond424) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond424) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond424) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond424) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond424) CFA_SP SP+-2
          CFI (cfiCond424) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond425 Using cfiCommon0
          CFI (cfiCond425) Function ZDP_MgmtDirectJoinReq
          CFI (cfiCond425) Conditional ??CrossCallReturnLabel_211
          CFI (cfiCond425) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond425) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond425) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond425) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond425) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond425) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond425) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond425) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond425) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond425) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond425) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond425) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond425) CFA_SP SP+-2
          CFI (cfiCond425) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond426 Using cfiCommon0
          CFI (cfiCond426) Function ZDP_MgmtLeaveReq
          CFI (cfiCond426) Conditional ??CrossCallReturnLabel_211
          CFI (cfiCond426) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond426) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond426) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond426) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond426) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond426) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond426) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond426) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond426) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond426) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond426) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond426) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond426) CFA_SP SP+-2
          CFI (cfiCond426) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond427 Using cfiCommon0
          CFI (cfiCond427) Function ZDP_MgmtNwkDiscReq
          CFI (cfiCond427) Conditional ??CrossCallReturnLabel_211
          CFI (cfiCond427) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond427) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond427) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond427) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond427) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond427) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond427) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond427) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond427) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond427) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond427) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond427) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond427) CFA_SP SP+-2
          CFI (cfiCond427) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond428 Using cfiCommon0
          CFI (cfiCond428) Function ZDP_UserDescSet
          CFI (cfiCond428) Conditional ??CrossCallReturnLabel_212
          CFI (cfiCond428) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond428) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond428) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond428) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond428) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond428) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond428) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond428) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond428) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond428) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond428) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond428) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond428) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond428) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond428) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond428) CFA_SP SP+-2
          CFI (cfiCond428) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiPicker429 Using cfiCommon1
          CFI (cfiPicker429) NoFunction
          CFI (cfiPicker429) Picker
        MOV       R2,#ZDP_TransID & 0xff
        MOV       R3,#(ZDP_TransID >> 8) & 0xff
          CFI EndBlock cfiCond415
          CFI EndBlock cfiCond416
          CFI EndBlock cfiCond417
          CFI EndBlock cfiCond418
          CFI EndBlock cfiCond419
          CFI EndBlock cfiCond420
          CFI EndBlock cfiCond421
          CFI EndBlock cfiCond422
          CFI EndBlock cfiCond423
          CFI EndBlock cfiCond424
          CFI EndBlock cfiCond425
          CFI EndBlock cfiCond426
          CFI EndBlock cfiCond427
          CFI EndBlock cfiCond428
          CFI EndBlock cfiPicker429
        REQUIRE ??Subroutine123_0
        ; // Fall through to label ??Subroutine123_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine123_0:
          CFI Block cfiCond430 Using cfiCommon0
          CFI Function ZDP_SendData
          CFI Conditional ??CrossCallReturnLabel_221
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond431 Using cfiCommon0
          CFI (cfiCond431) Function ZDP_ParentAnnce
          CFI (cfiCond431) Conditional ??CrossCallReturnLabel_222
          CFI (cfiCond431) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond431) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond431) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond431) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond431) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond431) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond431) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond431) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond431) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond431) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond431) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond431) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond431) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond431) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond431) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond431) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond431) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond431) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond431) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond431) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond431) CFA_SP SP+-2
          CFI (cfiCond431) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond432 Using cfiCommon0
          CFI (cfiCond432) Function zdpProcessAddrReq
          CFI (cfiCond432) Conditional ??CrossCallReturnLabel_223
          CFI (cfiCond432) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond432) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond432) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond432) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond432) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond432) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond432) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond432) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond432) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond432) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond432) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond432) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond432) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond432) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond432) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond432) CFA_SP SP+-2
          CFI (cfiCond432) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond433 Using cfiCommon0
          CFI (cfiCond433) Function ZDP_NWKAddrOfInterestReq
          CFI (cfiCond433) Conditional ??CrossCallReturnLabel_224
          CFI (cfiCond433) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond433) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond433) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond433) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond433) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond433) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond433) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond433) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond433) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond433) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond433) CFA_SP SP+-2
          CFI (cfiCond433) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond434 Using cfiCommon0
          CFI (cfiCond434) Function ZDP_SimpleDescReq
          CFI (cfiCond434) Conditional ??CrossCallReturnLabel_224
          CFI (cfiCond434) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond434) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond434) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond434) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond434) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond434) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond434) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond434) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond434) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond434) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond434) CFA_SP SP+-2
          CFI (cfiCond434) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond435 Using cfiCommon0
          CFI (cfiCond435) Function ZDP_NodeDescMsg
          CFI (cfiCond435) Conditional ??CrossCallReturnLabel_224
          CFI (cfiCond435) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond435) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond435) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond435) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond435) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond435) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond435) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond435) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond435) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond435) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond435) CFA_SP SP+-2
          CFI (cfiCond435) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond436 Using cfiCommon0
          CFI (cfiCond436) Function ZDP_PowerDescMsg
          CFI (cfiCond436) Conditional ??CrossCallReturnLabel_224
          CFI (cfiCond436) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond436) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond436) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond436) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond436) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond436) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond436) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond436) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond436) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond436) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond436) CFA_SP SP+-2
          CFI (cfiCond436) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond437 Using cfiCommon0
          CFI (cfiCond437) Function ZDP_SimpleDescMsg
          CFI (cfiCond437) Conditional ??CrossCallReturnLabel_225
          CFI (cfiCond437) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond437) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond437) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond437) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond437) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond437) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond437) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond437) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond437) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond437) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond437) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond437) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond437) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond437) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond437) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond437) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond437) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond437) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond437) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond437) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond437) CFA_SP SP+-2
          CFI (cfiCond437) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond438 Using cfiCommon0
          CFI (cfiCond438) Function ZDP_EPRsp
          CFI (cfiCond438) Conditional ??CrossCallReturnLabel_226
          CFI (cfiCond438) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond438) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond438) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond438) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond438) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond438) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond438) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond438) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond438) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond438) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond438) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond438) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond438) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond438) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond438) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond438) CFA_SP SP+-2
          CFI (cfiCond438) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond439 Using cfiCommon0
          CFI (cfiCond439) Function ZDP_UserDescRsp
          CFI (cfiCond439) Conditional ??CrossCallReturnLabel_227
          CFI (cfiCond439) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond439) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond439) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond439) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond439) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond439) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond439) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond439) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond439) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond439) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond439) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond439) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond439) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond439) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond439) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond439) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond439) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond439) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond439) CFA_SP SP+-2
          CFI (cfiCond439) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond440 Using cfiCommon0
          CFI (cfiCond440) Function ZDP_ServerDiscRsp
          CFI (cfiCond440) Conditional ??CrossCallReturnLabel_228
          CFI (cfiCond440) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond440) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond440) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond440) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond440) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond440) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond440) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond440) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond440) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond440) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond440) CFA_SP SP+-2
          CFI (cfiCond440) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond441 Using cfiCommon0
          CFI (cfiCond441) Function ZDP_GenericRsp
          CFI (cfiCond441) Conditional ??CrossCallReturnLabel_229
          CFI (cfiCond441) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond441) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond441) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond441) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond441) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond441) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond441) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond441) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond441) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond441) CFA_SP SP+-2
          CFI (cfiCond441) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond442 Using cfiCommon0
          CFI (cfiCond442) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond442) Conditional ??CrossCallReturnLabel_230
          CFI (cfiCond442) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond442) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond442) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond442) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond442) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond442) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond442) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond442) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond442) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond442) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond442) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond442) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond442) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond442) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond442) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond442) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond442) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond442) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond442) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond442) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond442) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond442) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond442) CFA_SP SP+-2
          CFI (cfiCond442) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond443 Using cfiCommon0
          CFI (cfiCond443) Function ZDP_MgmtLqiRsp
          CFI (cfiCond443) Conditional ??CrossCallReturnLabel_231
          CFI (cfiCond443) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond443) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond443) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond443) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond443) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond443) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond443) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond443) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond443) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond443) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond443) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond443) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond443) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond443) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond443) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond443) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond443) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond443) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond443) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond443) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond443) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond443) CFA_SP SP+-2
          CFI (cfiCond443) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond444 Using cfiCommon0
          CFI (cfiCond444) Function ZDP_MgmtLqiRsp
          CFI (cfiCond444) Conditional ??CrossCallReturnLabel_232
          CFI (cfiCond444) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond444) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond444) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond444) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond444) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond444) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond444) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond444) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond444) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond444) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond444) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond444) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond444) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond444) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond444) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond444) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond444) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond444) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond444) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond444) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond444) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond444) CFA_SP SP+-2
          CFI (cfiCond444) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond445 Using cfiCommon0
          CFI (cfiCond445) Function ZDP_MgmtRtgRsp
          CFI (cfiCond445) Conditional ??CrossCallReturnLabel_233
          CFI (cfiCond445) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond445) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond445) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond445) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond445) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond445) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond445) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond445) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond445) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond445) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond445) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond445) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond445) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond445) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond445) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond445) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond445) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond445) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond445) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond445) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond445) CFA_SP SP+-2
          CFI (cfiCond445) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond446 Using cfiCommon0
          CFI (cfiCond446) Function ZDP_MgmtBindRsp
          CFI (cfiCond446) Conditional ??CrossCallReturnLabel_234
          CFI (cfiCond446) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond446) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond446) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond446) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond446) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond446) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond446) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond446) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond446) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond446) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond446) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond446) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond446) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond446) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond446) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond446) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond446) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond446) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond446) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond446) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond446) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond446) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond446) CFA_SP SP+-2
          CFI (cfiCond446) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond447 Using cfiCommon0
          CFI (cfiCond447) Function ZDP_MgmtNwkUpdateNotify
          CFI (cfiCond447) Conditional ??CrossCallReturnLabel_235
          CFI (cfiCond447) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond447) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond447) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond447) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond447) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond447) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond447) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond447) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond447) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond447) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond447) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond447) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond447) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond447) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond447) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond447) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond447) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond447) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond447) CFA_SP SP+-2
          CFI (cfiCond447) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond448 Using cfiCommon0
          CFI (cfiCond448) Function ZDP_NwkAddrReq
          CFI (cfiCond448) Conditional ??CrossCallReturnLabel_214
          CFI (cfiCond448) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond448) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond448) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond448) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond448) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond448) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond448) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond448) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond448) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond448) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond448) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond448) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond448) CFA_SP SP+-2
          CFI (cfiCond448) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond449 Using cfiCommon0
          CFI (cfiCond449) Function ZDP_MgmtPermitJoinReq
          CFI (cfiCond449) Conditional ??CrossCallReturnLabel_214
          CFI (cfiCond449) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond449) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond449) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond449) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond449) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond449) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond449) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond449) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond449) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond449) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond449) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond449) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond449) CFA_SP SP+-2
          CFI (cfiCond449) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond450 Using cfiCommon0
          CFI (cfiCond450) Function ZDP_IEEEAddrReq
          CFI (cfiCond450) Conditional ??CrossCallReturnLabel_215
          CFI (cfiCond450) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond450) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond450) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond450) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond450) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond450) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond450) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond450) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond450) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond450) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond450) CFA_SP SP+-2
          CFI (cfiCond450) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond451 Using cfiCommon0
          CFI (cfiCond451) Function ZDP_DeviceAnnce
          CFI (cfiCond451) Conditional ??CrossCallReturnLabel_215
          CFI (cfiCond451) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond451) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond451) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond451) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond451) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond451) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond451) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond451) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond451) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond451) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond451) CFA_SP SP+-2
          CFI (cfiCond451) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond452 Using cfiCommon0
          CFI (cfiCond452) Function ZDP_ServerDiscReq
          CFI (cfiCond452) Conditional ??CrossCallReturnLabel_216
          CFI (cfiCond452) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond452) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond452) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond452) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond452) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond452) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond452) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond452) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond452) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond452) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond452) CFA_SP SP+-2
          CFI (cfiCond452) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond453 Using cfiCommon0
          CFI (cfiCond453) Function ZDP_EndDeviceBindReq
          CFI (cfiCond453) Conditional ??CrossCallReturnLabel_217
          CFI (cfiCond453) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond453) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond453) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond453) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond453) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond453) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond453) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond453) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond453) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond453) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond453) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond453) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond453) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond453) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond453) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond453) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond453) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond453) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond453) CFA_SP SP+-2
          CFI (cfiCond453) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond454 Using cfiCommon0
          CFI (cfiCond454) Function ZDP_BindUnbindReq
          CFI (cfiCond454) Conditional ??CrossCallReturnLabel_218
          CFI (cfiCond454) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond454) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond454) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond454) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond454) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond454) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond454) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond454) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond454) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond454) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond454) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond454) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond454) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond454) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond454) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond454) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond454) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond454) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond454) CFA_SP SP+-2
          CFI (cfiCond454) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond455 Using cfiCommon0
          CFI (cfiCond455) Function ZDP_MgmtPermitJoinReq
          CFI (cfiCond455) Conditional ??CrossCallReturnLabel_219
          CFI (cfiCond455) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond455) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond455) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond455) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond455) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond455) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond455) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond455) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond455) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond455) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond455) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond455) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond455) CFA_SP SP+-2
          CFI (cfiCond455) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond456 Using cfiCommon0
          CFI (cfiCond456) Function ZDP_MgmtNwkUpdateReq
          CFI (cfiCond456) Conditional ??CrossCallReturnLabel_220
          CFI (cfiCond456) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond456) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond456) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond456) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond456) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond456) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond456) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond456) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond456) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond456) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond456) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond456) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond456) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond456) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond456) CFA_SP SP+-2
          CFI (cfiCond456) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond457 Using cfiCommon0
          CFI (cfiCond457) Function ZDP_MatchDescReq
          CFI (cfiCond457) Conditional ??CrossCallReturnLabel_213
          CFI (cfiCond457) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond457) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond457) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond457) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond457) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond457) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond457) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond457) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond457) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond457) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond457) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond457) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond457) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond457) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond457) CFA_SP SP+-2
          CFI (cfiCond457) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond458 Using cfiCommon0
          CFI (cfiCond458) Function ZDP_MgmtDirectJoinReq
          CFI (cfiCond458) Conditional ??CrossCallReturnLabel_211
          CFI (cfiCond458) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond458) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond458) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond458) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond458) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond458) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond458) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond458) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond458) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond458) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond458) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond458) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond458) CFA_SP SP+-2
          CFI (cfiCond458) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond459 Using cfiCommon0
          CFI (cfiCond459) Function ZDP_MgmtLeaveReq
          CFI (cfiCond459) Conditional ??CrossCallReturnLabel_211
          CFI (cfiCond459) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond459) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond459) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond459) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond459) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond459) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond459) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond459) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond459) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond459) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond459) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond459) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond459) CFA_SP SP+-2
          CFI (cfiCond459) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond460 Using cfiCommon0
          CFI (cfiCond460) Function ZDP_MgmtNwkDiscReq
          CFI (cfiCond460) Conditional ??CrossCallReturnLabel_211
          CFI (cfiCond460) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond460) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond460) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond460) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond460) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond460) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond460) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond460) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond460) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond460) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond460) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond460) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond460) CFA_SP SP+-2
          CFI (cfiCond460) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond461 Using cfiCommon0
          CFI (cfiCond461) Function ZDP_UserDescSet
          CFI (cfiCond461) Conditional ??CrossCallReturnLabel_212
          CFI (cfiCond461) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond461) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond461) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond461) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond461) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond461) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond461) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond461) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond461) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond461) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond461) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond461) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond461) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond461) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond461) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond461) CFA_SP SP+-2
          CFI (cfiCond461) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiPicker462 Using cfiCommon1
          CFI (cfiPicker462) NoFunction
          CFI (cfiPicker462) Picker
        LCALL     `??fillAndSend::?relay`; Banked call to: fillAndSend
        MOV       A,#0x2
        RET
          CFI EndBlock cfiCond430
          CFI EndBlock cfiCond431
          CFI EndBlock cfiCond432
          CFI EndBlock cfiCond433
          CFI EndBlock cfiCond434
          CFI EndBlock cfiCond435
          CFI EndBlock cfiCond436
          CFI EndBlock cfiCond437
          CFI EndBlock cfiCond438
          CFI EndBlock cfiCond439
          CFI EndBlock cfiCond440
          CFI EndBlock cfiCond441
          CFI EndBlock cfiCond442
          CFI EndBlock cfiCond443
          CFI EndBlock cfiCond444
          CFI EndBlock cfiCond445
          CFI EndBlock cfiCond446
          CFI EndBlock cfiCond447
          CFI EndBlock cfiCond448
          CFI EndBlock cfiCond449
          CFI EndBlock cfiCond450
          CFI EndBlock cfiCond451
          CFI EndBlock cfiCond452
          CFI EndBlock cfiCond453
          CFI EndBlock cfiCond454
          CFI EndBlock cfiCond455
          CFI EndBlock cfiCond456
          CFI EndBlock cfiCond457
          CFI EndBlock cfiCond458
          CFI EndBlock cfiCond459
          CFI EndBlock cfiCond460
          CFI EndBlock cfiCond461
          CFI EndBlock cfiPicker462

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine66:
          CFI Block cfiCond463 Using cfiCommon0
          CFI Function ZDP_MgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_238
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond464 Using cfiCommon0
          CFI (cfiCond464) Function ZDP_MgmtBindRsp
          CFI (cfiCond464) Conditional ??CrossCallReturnLabel_239
          CFI (cfiCond464) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond464) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond464) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond464) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond464) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond464) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond464) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond464) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond464) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond464) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond464) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond464) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond464) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond464) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond464) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond464) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond464) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond464) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond464) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond464) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond464) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond464) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond464) CFA_SP SP+-2
          CFI (cfiCond464) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker465 Using cfiCommon1
          CFI (cfiPicker465) NoFunction
          CFI (cfiPicker465) Picker
        MOV       DPH,A
          CFI EndBlock cfiCond463
          CFI EndBlock cfiCond464
          CFI EndBlock cfiPicker465
        REQUIRE ??Subroutine124_0
        ; // Fall through to label ??Subroutine124_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine124_0:
          CFI Block cfiCond466 Using cfiCommon0
          CFI Function ZDP_BindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_236
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond467 Using cfiCommon0
          CFI (cfiCond467) Function ZDP_MgmtBindRsp
          CFI (cfiCond467) Conditional ??CrossCallReturnLabel_237
          CFI (cfiCond467) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond467) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond467) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond467) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond467) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond467) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond467) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond467) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond467) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond467) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond467) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond467) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond467) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond467) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond467) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond467) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond467) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond467) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond467) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond467) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond467) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond467) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond467) CFA_SP SP+-2
          CFI (cfiCond467) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond468 Using cfiCommon0
          CFI (cfiCond468) Function ZDP_MgmtLqiRsp
          CFI (cfiCond468) Conditional ??CrossCallReturnLabel_238
          CFI (cfiCond468) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond468) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond468) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond468) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond468) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond468) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond468) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond468) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond468) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond468) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond468) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond468) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond468) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond468) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond468) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond468) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond468) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond468) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond468) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond468) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond468) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond468) CFA_SP SP+-2
          CFI (cfiCond468) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond469 Using cfiCommon0
          CFI (cfiCond469) Function ZDP_MgmtBindRsp
          CFI (cfiCond469) Conditional ??CrossCallReturnLabel_239
          CFI (cfiCond469) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond469) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond469) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond469) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond469) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond469) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond469) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond469) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond469) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond469) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond469) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond469) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond469) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond469) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond469) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond469) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond469) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond469) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond469) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond469) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond469) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond469) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond469) CFA_SP SP+-2
          CFI (cfiCond469) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker470 Using cfiCommon1
          CFI (cfiPicker470) NoFunction
          CFI (cfiPicker470) Picker
        LCALL     ?Subroutine87 & 0xFFFF
??CrossCallReturnLabel_243:
        RET
          CFI EndBlock cfiCond466
          CFI EndBlock cfiCond467
          CFI EndBlock cfiCond468
          CFI EndBlock cfiCond469
          CFI EndBlock cfiPicker470

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine87:
          CFI Block cfiCond471 Using cfiCommon0
          CFI Function ZDP_MgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_238
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond472 Using cfiCommon0
          CFI (cfiCond472) Function ZDP_MgmtBindRsp
          CFI (cfiCond472) Conditional ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_239
          CFI (cfiCond472) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond472) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond472) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond472) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond472) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond472) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond472) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond472) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond472) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond472) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond472) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond472) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond472) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond472) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond472) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond472) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond472) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond472) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond472) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond472) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond472) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond472) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond472) CFA_SP SP+-4
          CFI (cfiCond472) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond473 Using cfiCommon0
          CFI (cfiCond473) Function ZDP_BindUnbindReq
          CFI (cfiCond473) Conditional ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_236
          CFI (cfiCond473) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond473) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond473) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond473) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond473) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond473) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond473) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond473) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond473) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond473) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond473) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond473) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond473) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond473) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond473) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond473) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond473) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond473) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond473) CFA_SP SP+-4
          CFI (cfiCond473) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond474 Using cfiCommon0
          CFI (cfiCond474) Function ZDP_MgmtBindRsp
          CFI (cfiCond474) Conditional ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_237
          CFI (cfiCond474) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond474) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond474) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond474) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond474) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond474) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond474) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond474) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond474) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond474) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond474) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond474) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond474) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond474) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond474) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond474) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond474) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond474) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond474) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond474) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond474) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond474) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond474) CFA_SP SP+-4
          CFI (cfiCond474) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond475 Using cfiCommon0
          CFI (cfiCond475) Function ZDP_BindUnbindReq
          CFI (cfiCond475) Conditional ??CrossCallReturnLabel_242, ??CrossCallReturnLabel_105
          CFI (cfiCond475) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond475) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond475) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond475) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond475) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond475) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond475) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond475) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond475) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond475) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond475) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond475) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond475) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond475) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond475) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond475) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond475) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond475) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond475) CFA_SP SP+-4
          CFI (cfiCond475) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond476 Using cfiCommon0
          CFI (cfiCond476) Function ZDP_MgmtBindRsp
          CFI (cfiCond476) Conditional ??CrossCallReturnLabel_242, ??CrossCallReturnLabel_106
          CFI (cfiCond476) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond476) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond476) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond476) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond476) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond476) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond476) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond476) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond476) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond476) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond476) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond476) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond476) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond476) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond476) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond476) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond476) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond476) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond476) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond476) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond476) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond476) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond476) CFA_SP SP+-4
          CFI (cfiCond476) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond477 Using cfiCommon0
          CFI (cfiCond477) Function ZDP_MgmtBindRsp
          CFI (cfiCond477) Conditional ??CrossCallReturnLabel_242, ??CrossCallReturnLabel_107
          CFI (cfiCond477) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond477) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond477) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond477) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond477) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond477) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond477) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond477) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond477) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond477) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond477) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond477) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond477) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond477) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond477) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond477) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond477) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond477) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond477) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond477) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond477) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond477) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond477) CFA_SP SP+-4
          CFI (cfiCond477) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond478 Using cfiCommon0
          CFI (cfiCond478) Function ZDP_MgmtRtgRsp
          CFI (cfiCond478) Conditional ??CrossCallReturnLabel_240, ??CrossCallReturnLabel_6
          CFI (cfiCond478) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond478) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond478) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond478) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond478) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond478) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond478) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond478) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond478) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond478) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond478) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond478) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond478) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond478) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond478) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond478) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond478) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond478) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond478) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond478) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond478) CFA_SP SP+-4
          CFI (cfiCond478) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond479 Using cfiCommon0
          CFI (cfiCond479) Function ZDP_MgmtBindRsp
          CFI (cfiCond479) Conditional ??CrossCallReturnLabel_240, ??CrossCallReturnLabel_7
          CFI (cfiCond479) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond479) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond479) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond479) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond479) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond479) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond479) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond479) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond479) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond479) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond479) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond479) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond479) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond479) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond479) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond479) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond479) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond479) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond479) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond479) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond479) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond479) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond479) CFA_SP SP+-4
          CFI (cfiCond479) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond480 Using cfiCommon0
          CFI (cfiCond480) Function ZDP_MgmtRtgRsp
          CFI (cfiCond480) Conditional ??CrossCallReturnLabel_241, ??CrossCallReturnLabel_6
          CFI (cfiCond480) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond480) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond480) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond480) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond480) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond480) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond480) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond480) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond480) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond480) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond480) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond480) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond480) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond480) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond480) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond480) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond480) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond480) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond480) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond480) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond480) CFA_SP SP+-4
          CFI (cfiCond480) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond481 Using cfiCommon0
          CFI (cfiCond481) Function ZDP_MgmtBindRsp
          CFI (cfiCond481) Conditional ??CrossCallReturnLabel_241, ??CrossCallReturnLabel_7
          CFI (cfiCond481) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond481) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond481) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond481) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond481) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond481) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond481) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond481) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond481) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond481) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond481) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond481) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond481) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond481) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond481) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond481) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond481) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond481) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond481) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond481) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond481) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond481) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond481) CFA_SP SP+-4
          CFI (cfiCond481) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker482 Using cfiCommon1
          CFI (cfiPicker482) NoFunction
          CFI (cfiPicker482) Picker
        MOVX      A,@DPTR
        MOV       DPL,R2
        MOV       DPH,R3
        RET
          CFI EndBlock cfiCond471
          CFI EndBlock cfiCond472
          CFI EndBlock cfiCond473
          CFI EndBlock cfiCond474
          CFI EndBlock cfiCond475
          CFI EndBlock cfiCond476
          CFI EndBlock cfiCond477
          CFI EndBlock cfiCond478
          CFI EndBlock cfiCond479
          CFI EndBlock cfiCond480
          CFI EndBlock cfiCond481
          CFI EndBlock cfiPicker482

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine65:
          CFI Block cfiCond483 Using cfiCommon0
          CFI Function ZDP_BindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_105
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond484 Using cfiCommon0
          CFI (cfiCond484) Function ZDP_MgmtBindRsp
          CFI (cfiCond484) Conditional ??CrossCallReturnLabel_106
          CFI (cfiCond484) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond484) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond484) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond484) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond484) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond484) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond484) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond484) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond484) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond484) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond484) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond484) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond484) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond484) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond484) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond484) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond484) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond484) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond484) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond484) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond484) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond484) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond484) CFA_SP SP+-2
          CFI (cfiCond484) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond485 Using cfiCommon0
          CFI (cfiCond485) Function ZDP_MgmtBindRsp
          CFI (cfiCond485) Conditional ??CrossCallReturnLabel_107
          CFI (cfiCond485) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond485) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond485) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond485) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond485) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond485) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond485) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond485) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond485) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond485) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond485) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond485) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond485) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond485) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond485) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond485) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond485) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond485) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond485) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond485) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond485) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond485) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond485) CFA_SP SP+-2
          CFI (cfiCond485) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker486 Using cfiCommon1
          CFI (cfiPicker486) NoFunction
          CFI (cfiPicker486) Picker
        LCALL     ?Subroutine87 & 0xFFFF
??CrossCallReturnLabel_242:
        INC       DPTR
        RET
          CFI EndBlock cfiCond483
          CFI EndBlock cfiCond484
          CFI EndBlock cfiCond485
          CFI EndBlock cfiPicker486

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine42:
          CFI Block cfiCond487 Using cfiCommon0
          CFI Function ZDP_BindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_63
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond488 Using cfiCommon0
          CFI (cfiCond488) Function ZDP_MgmtBindRsp
          CFI (cfiCond488) Conditional ??CrossCallReturnLabel_64
          CFI (cfiCond488) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond488) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond488) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond488) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond488) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond488) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond488) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond488) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond488) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond488) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond488) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond488) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond488) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond488) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond488) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond488) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond488) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond488) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond488) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond488) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond488) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond488) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond488) CFA_SP SP+-2
          CFI (cfiCond488) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker489 Using cfiCommon1
          CFI (cfiPicker489) NoFunction
          CFI (cfiPicker489) Picker
        LCALL     ?Subroutine86 & 0xFFFF
??CrossCallReturnLabel_135:
        MOVX      @DPTR,A
        MOV       A,R2
        ADD       A,#0x4
        MOV       R2,A
        RET
          CFI EndBlock cfiCond487
          CFI EndBlock cfiCond488
          CFI EndBlock cfiPicker489

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine37:
          CFI Block cfiCond490 Using cfiCommon0
          CFI Function zdpProcessAddrReq
          CFI Conditional ??CrossCallReturnLabel_249
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond491 Using cfiCommon0
          CFI (cfiCond491) Function zdpProcessAddrReq
          CFI (cfiCond491) Conditional ??CrossCallReturnLabel_250
          CFI (cfiCond491) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond491) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond491) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond491) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond491) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond491) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond491) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond491) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond491) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond491) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond491) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond491) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond491) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond491) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond491) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond491) CFA_SP SP+-2
          CFI (cfiCond491) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker492 Using cfiCommon1
          CFI (cfiPicker492) NoFunction
          CFI (cfiPicker492) Picker
        MOV       DPTR,#ZDAppNwkAddr
          CFI EndBlock cfiCond490
          CFI EndBlock cfiCond491
          CFI EndBlock cfiPicker492
        REQUIRE ??Subroutine125_0
        ; // Fall through to label ??Subroutine125_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine125_0:
          CFI Block cfiCond493 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
          CFI Conditional ??CrossCallReturnLabel_244
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond494 Using cfiCommon0
          CFI (cfiCond494) Function ZDP_BindUnbindReq
          CFI (cfiCond494) Conditional ??CrossCallReturnLabel_245
          CFI (cfiCond494) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond494) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond494) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond494) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond494) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond494) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond494) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond494) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond494) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond494) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond494) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond494) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond494) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond494) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond494) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond494) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond494) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond494) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond494) CFA_SP SP+-2
          CFI (cfiCond494) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond495 Using cfiCommon0
          CFI (cfiCond495) Function ZDP_MgmtLqiRsp
          CFI (cfiCond495) Conditional ??CrossCallReturnLabel_246
          CFI (cfiCond495) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond495) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond495) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond495) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond495) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond495) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond495) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond495) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond495) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond495) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond495) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond495) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond495) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond495) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond495) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond495) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond495) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond495) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond495) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond495) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond495) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond495) CFA_SP SP+-2
          CFI (cfiCond495) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond496 Using cfiCommon0
          CFI (cfiCond496) Function ZDP_MgmtBindRsp
          CFI (cfiCond496) Conditional ??CrossCallReturnLabel_247
          CFI (cfiCond496) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond496) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond496) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond496) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond496) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond496) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond496) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond496) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond496) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond496) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond496) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond496) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond496) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond496) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond496) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond496) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond496) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond496) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond496) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond496) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond496) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond496) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond496) CFA_SP SP+-2
          CFI (cfiCond496) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond497 Using cfiCommon0
          CFI (cfiCond497) Function ZDO_RegisterForZDOMsg
          CFI (cfiCond497) Conditional ??CrossCallReturnLabel_248
          CFI (cfiCond497) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond497) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond497) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond497) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond497) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond497) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond497) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond497) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond497) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond497) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond497) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond497) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond497) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond497) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond497) CFA_SP SP+-2
          CFI (cfiCond497) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond498 Using cfiCommon0
          CFI (cfiCond498) Function zdpProcessAddrReq
          CFI (cfiCond498) Conditional ??CrossCallReturnLabel_249
          CFI (cfiCond498) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond498) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond498) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond498) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond498) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond498) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond498) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond498) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond498) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond498) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond498) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond498) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond498) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond498) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond498) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond498) CFA_SP SP+-2
          CFI (cfiCond498) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond499 Using cfiCommon0
          CFI (cfiCond499) Function zdpProcessAddrReq
          CFI (cfiCond499) Conditional ??CrossCallReturnLabel_250
          CFI (cfiCond499) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond499) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond499) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond499) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond499) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond499) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond499) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond499) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond499) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond499) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond499) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond499) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond499) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond499) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond499) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond499) CFA_SP SP+-2
          CFI (cfiCond499) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker500 Using cfiCommon1
          CFI (cfiPicker500) NoFunction
          CFI (cfiPicker500) Picker
        MOVX      A,@DPTR
        MOV       R6,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R7,A
        RET
          CFI EndBlock cfiCond493
          CFI EndBlock cfiCond494
          CFI EndBlock cfiCond495
          CFI EndBlock cfiCond496
          CFI EndBlock cfiCond497
          CFI EndBlock cfiCond498
          CFI EndBlock cfiCond499
          CFI EndBlock cfiPicker500

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine32:
          CFI Block cfiCond501 Using cfiCommon0
          CFI Function ZDP_MgmtNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_41
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond502 Using cfiCommon0
          CFI (cfiCond502) Function ZDP_MgmtBindRsp
          CFI (cfiCond502) Conditional ??CrossCallReturnLabel_42
          CFI (cfiCond502) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond502) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond502) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond502) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond502) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond502) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond502) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond502) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond502) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond502) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond502) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond502) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond502) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond502) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond502) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond502) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond502) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond502) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond502) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond502) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond502) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond502) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond502) CFA_SP SP+-2
          CFI (cfiCond502) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker503 Using cfiCommon1
          CFI (cfiPicker503) NoFunction
          CFI (cfiPicker503) Picker
        MOVX      @DPTR,A
        MOV       A,R6
        ADD       A,#0x9
        MOV       R0,A
        CLR       A
        ADDC      A,R7
        MOV       R1,A
        RET
          CFI EndBlock cfiCond501
          CFI EndBlock cfiCond502
          CFI EndBlock cfiPicker503

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine25:
          CFI Block cfiCond504 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
          CFI Conditional ??CrossCallReturnLabel_251
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond505 Using cfiCommon0
          CFI (cfiCond505) Function ZDP_NodeDescMsg
          CFI (cfiCond505) Conditional ??CrossCallReturnLabel_252
          CFI (cfiCond505) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond505) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond505) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond505) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond505) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond505) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond505) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond505) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond505) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond505) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond505) CFA_SP SP+-2
          CFI (cfiCond505) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker506 Using cfiCommon1
          CFI (cfiPicker506) NoFunction
          CFI (cfiPicker506) Picker
        INC       DPTR
        INC       DPTR
          CFI EndBlock cfiCond504
          CFI EndBlock cfiCond505
          CFI EndBlock cfiPicker506
        REQUIRE ??Subroutine126_0
        ; // Fall through to label ??Subroutine126_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine126_0:
          CFI Block cfiCond507 Using cfiCommon0
          CFI Function ZDP_MgmtBindRsp
          CFI Conditional ??CrossCallReturnLabel_253
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond508 Using cfiCommon0
          CFI (cfiCond508) Function ZDP_NodeDescMsg
          CFI (cfiCond508) Conditional ??CrossCallReturnLabel_251
          CFI (cfiCond508) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond508) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond508) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond508) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond508) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond508) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond508) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond508) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond508) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond508) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond508) CFA_SP SP+-2
          CFI (cfiCond508) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond509 Using cfiCommon0
          CFI (cfiCond509) Function ZDP_NodeDescMsg
          CFI (cfiCond509) Conditional ??CrossCallReturnLabel_252
          CFI (cfiCond509) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond509) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond509) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond509) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond509) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond509) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond509) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond509) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond509) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond509) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond509) CFA_SP SP+-2
          CFI (cfiCond509) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker510 Using cfiCommon1
          CFI (cfiPicker510) NoFunction
          CFI (cfiPicker510) Picker
        INC       DPTR
          CFI EndBlock cfiCond507
          CFI EndBlock cfiCond508
          CFI EndBlock cfiCond509
          CFI EndBlock cfiPicker510
        REQUIRE ??Subroutine127_0
        ; // Fall through to label ??Subroutine127_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine127_0:
          CFI Block cfiCond511 Using cfiCommon0
          CFI Function ZDP_SendData
          CFI Conditional ??CrossCallReturnLabel_255
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond512 Using cfiCommon0
          CFI (cfiCond512) Function ZDP_UserDescSet
          CFI (cfiCond512) Conditional ??CrossCallReturnLabel_254
          CFI (cfiCond512) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond512) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond512) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond512) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond512) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond512) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond512) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond512) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond512) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond512) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond512) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond512) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond512) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond512) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond512) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond512) CFA_SP SP+-2
          CFI (cfiCond512) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond513 Using cfiCommon0
          CFI (cfiCond513) Function ZDP_MgmtBindRsp
          CFI (cfiCond513) Conditional ??CrossCallReturnLabel_253
          CFI (cfiCond513) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond513) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond513) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond513) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond513) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond513) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond513) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond513) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond513) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond513) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond513) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond513) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond513) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond513) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond513) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond513) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond513) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond513) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond513) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond513) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond513) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond513) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond513) CFA_SP SP+-2
          CFI (cfiCond513) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond514 Using cfiCommon0
          CFI (cfiCond514) Function ZDP_NodeDescMsg
          CFI (cfiCond514) Conditional ??CrossCallReturnLabel_251
          CFI (cfiCond514) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond514) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond514) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond514) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond514) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond514) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond514) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond514) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond514) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond514) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond514) CFA_SP SP+-2
          CFI (cfiCond514) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond515 Using cfiCommon0
          CFI (cfiCond515) Function ZDP_NodeDescMsg
          CFI (cfiCond515) Conditional ??CrossCallReturnLabel_252
          CFI (cfiCond515) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond515) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond515) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond515) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond515) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond515) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond515) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond515) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond515) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond515) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond515) CFA_SP SP+-2
          CFI (cfiCond515) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker516 Using cfiCommon1
          CFI (cfiPicker516) NoFunction
          CFI (cfiPicker516) Picker
        LCALL     ??Subroutine108_0 & 0xFFFF
??CrossCallReturnLabel_258:
        INC       DPTR
        RET
          CFI EndBlock cfiCond511
          CFI EndBlock cfiCond512
          CFI EndBlock cfiCond513
          CFI EndBlock cfiCond514
          CFI EndBlock cfiCond515
          CFI EndBlock cfiPicker516

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine13:
          CFI Block cfiCond517 Using cfiCommon0
          CFI Function ZDP_MgmtRtgRsp
          CFI Conditional ??CrossCallReturnLabel_6
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond518 Using cfiCommon0
          CFI (cfiCond518) Function ZDP_MgmtBindRsp
          CFI (cfiCond518) Conditional ??CrossCallReturnLabel_7
          CFI (cfiCond518) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond518) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond518) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond518) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond518) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond518) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond518) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond518) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond518) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond518) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond518) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond518) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond518) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond518) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond518) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond518) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond518) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond518) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond518) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond518) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond518) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond518) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond518) CFA_SP SP+-2
          CFI (cfiCond518) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker519 Using cfiCommon1
          CFI (cfiPicker519) NoFunction
          CFI (cfiPicker519) Picker
        MOV       DPL,R4
        MOV       DPH,R5
        LCALL     ?Subroutine87 & 0xFFFF
??CrossCallReturnLabel_240:
        MOVX      @DPTR,A
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        LCALL     ?Subroutine87 & 0xFFFF
??CrossCallReturnLabel_241:
        INC       DPTR
        MOVX      @DPTR,A
        MOV       A,R2
        ADD       A,#0x2
        RET
          CFI EndBlock cfiCond517
          CFI EndBlock cfiCond518
          CFI EndBlock cfiPicker519
// 1782 
// 1783 /*********************************************************************
// 1784  * @fn          ZDP_MgmtNwkUpdateNotify
// 1785  *
// 1786  * @brief       This builds and send a Mgmt_NWK_Update_notify message. This
// 1787  *              function sends a unicast message.
// 1788  *
// 1789  * @param       dstAddr - destination address of the message
// 1790  * @param       status - message status (ZDP_SUCCESS or other)
// 1791  * @param       scannedChannels - List of channels scanned by the request
// 1792  * @param       totalTransmissions - Total transmissions
// 1793  * @param       transmissionFailures - Sum of transmission failures
// 1794  * @param       listCount - Number of records contained in the energyValues list
// 1795  * @param       energyValues - List of descriptors, one for each of ListCount,
// 1796  *                             of the enegry detect descriptors
// 1797  * @param       txOptions - Transmit options
// 1798  * @param       securityEnable - Security options
// 1799  *
// 1800  * @return      afStatus_t
// 1801  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1802 afStatus_t ZDP_MgmtNwkUpdateNotify( uint8 TransSeq, zAddrType_t *dstAddr,
ZDP_MgmtNwkUpdateNotify:
          CFI Block cfiBlock520 Using cfiCommon0
          CFI Function ZDP_MgmtNwkUpdateNotify
        CODE
// 1803                                     uint8 status, uint32 scannedChannels,
// 1804                                     uint16 totalTransmissions, uint16 transmissionFailures,
// 1805                                     uint8 listCount, uint8 *energyValues, uint8 txOptions,
// 1806                                     uint8 securityEnable )
// 1807 {
        FUNCALL ZDP_MgmtNwkUpdateNotify, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 19, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtNwkUpdateNotify, osal_buffer_uint32
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtNwkUpdateNotify, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtNwkUpdateNotify, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtNwkUpdateNotify, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 19, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        MOV       A,#-0x12
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
        ; Saved register size: 18
        ; Auto size: 1
        MOV       A,#-0x1
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
        MOV       A,R1
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
        MOV       ?V8,R2
        MOV       ?V9,R3
        MOV       ?V7,R4
        MOV       ?V0,R5
// 1808   uint8 *buf;
// 1809   uint8 *pBuf;
// 1810   uint8 len;
// 1811 
// 1812   (void)securityEnable;  // Intentionally unreferenced parameter
// 1813 
// 1814   // Status + ScannedChannels + totalTransmissions + transmissionFailures + ListCount + energyValues
// 1815   len = 1 + 4 + 2 + 2 + 1 + listCount;
        MOV       A,#0xa
        ADD       A,R5
        MOV       ?V1,A
// 1816 
// 1817   buf = osal_mem_alloc( len+1 ); // +1 for transaction ID
        ; Setup parameters for call to function osal_mem_alloc
        LCALL     ?Subroutine69 & 0xFFFF
??CrossCallReturnLabel_112:
        MOV       ?V2,R2
        MOV       ?V3,R3
        MOV       R6,?V2
        MOV       R7,?V3
// 1818   if ( buf == NULL )
        MOV       A,R2
        ORL       A,R7
        JNZ       ??ZDP_MgmtNwkUpdateNotify_0
// 1819   {
// 1820     return afStatus_MEM_FAIL;
        MOV       R1,#0x10
        LJMP      ??ZDP_MgmtNwkUpdateNotify_1 & 0xFFFF
// 1821   }
// 1822 
// 1823   pBuf = buf+1;
??ZDP_MgmtNwkUpdateNotify_0:
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        MOV       ?V2,DPL
        MOV       ?V3,DPH
// 1824 
// 1825   *pBuf++ = status;
        MOV       A,?V7
        LCALL     ??Subroutine106_0 & 0xFFFF
// 1826 
// 1827   pBuf = osal_buffer_uint32( pBuf, scannedChannels );
??CrossCallReturnLabel_154:
        ; Setup parameters for call to function osal_buffer_uint32
        MOV       A,#0x13
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?PUSH_XSTACK8_X_FOUR
          CFI CFA_XSP16 add(XSP16, 23)
        LCALL     `??osal_buffer_uint32::?relay`; Banked call to: osal_buffer_uint32
        MOV       A,#0x4
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
        MOV       A,#0x17
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine49 & 0xFFFF
// 1828 
// 1829   *pBuf++ = LO_UINT16( totalTransmissions );
??CrossCallReturnLabel_78:
        MOVX      @DPTR,A
// 1830   *pBuf++ = HI_UINT16( totalTransmissions );
        MOV       A,R1
        INC       DPTR
        MOVX      @DPTR,A
        MOV       A,#0x19
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine49 & 0xFFFF
// 1831 
// 1832   *pBuf++ = LO_UINT16( transmissionFailures );
??CrossCallReturnLabel_79:
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine27 & 0xFFFF
// 1833   *pBuf++ = HI_UINT16( transmissionFailures );
??CrossCallReturnLabel_34:
        LCALL     ?Subroutine15 & 0xFFFF
// 1834 
// 1835   *pBuf++ = listCount;
??CrossCallReturnLabel_11:
        MOV       A,?V0
        MOVX      @DPTR,A
// 1836 
// 1837   if ( listCount > 0 )
        JZ        ??ZDP_MgmtNwkUpdateNotify_2
// 1838     osal_memcpy( pBuf, energyValues, listCount );
        ; Setup parameters for call to function osal_memcpy
        MOV       A,#0x1b
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine44 & 0xFFFF
??CrossCallReturnLabel_68:
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       R4,?V0
        MOV       R5,#0x0
        MOV       A,R2
        ADD       A,#0x5
        MOV       R2,A
        JNC       ??ZDP_MgmtNwkUpdateNotify_3
        INC       R3
??ZDP_MgmtNwkUpdateNotify_3:
        LCALL     ??Subroutine112_0 & 0xFFFF
??CrossCallReturnLabel_175:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
// 1839 
// 1840   FillAndSendBufferTxOptions( &TransSeq, dstAddr, Mgmt_NWK_Update_notify, len, buf, txOptions );
??ZDP_MgmtNwkUpdateNotify_2:
        MOV       DPTR,#ZDP_TmpBuf
        MOV       A,?V2
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,?V3
        MOVX      @DPTR,A
        MOV       A,#0x1d
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       DPTR,#ZDP_TxOptions
        MOVX      @DPTR,A
        ; Setup parameters for call to function fillAndSend
        MOV       ?V2,#0x38
        MOV       ?V3,#-0x80
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       R1,?V1
        MOV       R4,?V8
        MOV       R5,?V9
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP101_8
        LCALL     ??Subroutine123_0 & 0xFFFF
??CrossCallReturnLabel_235:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
        MOV       A,R1
        MOV       ?V1,A
        ; Setup parameters for call to function osal_mem_free
        LCALL     ?Subroutine75 & 0xFFFF
??CrossCallReturnLabel_123:
        MOV       DPTR,#ZDP_TxOptions
        CLR       A
        MOVX      @DPTR,A
        MOV       R1,?V1
??ZDP_MgmtNwkUpdateNotify_1:
        LJMP      ?Subroutine5 & 0xFFFF
// 1841 }
          CFI EndBlock cfiBlock520

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine75:
          CFI Block cfiCond521 Using cfiCommon0
          CFI Function ZDP_MgmtRtgRsp
          CFI Conditional ??CrossCallReturnLabel_122
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond522 Using cfiCommon0
          CFI (cfiCond522) Function ZDP_MgmtNwkUpdateNotify
          CFI (cfiCond522) Conditional ??CrossCallReturnLabel_123
          CFI (cfiCond522) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond522) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond522) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond522) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond522) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond522) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond522) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond522) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond522) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond522) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond522) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond522) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond522) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond522) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond522) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond522) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond522) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond522) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond522) CFA_SP SP+-2
          CFI (cfiCond522) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker523 Using cfiCommon1
          CFI (cfiPicker523) NoFunction
          CFI (cfiPicker523) Picker
        MOV       A,R6
        MOV       R2,A
        MOV       A,R7
        MOV       R3,A
        LCALL     ?Subroutine97 & 0xFFFF
??CrossCallReturnLabel_210:
        RET
          CFI EndBlock cfiCond521
          CFI EndBlock cfiCond522
          CFI EndBlock cfiPicker523

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine97:
          CFI Block cfiCond524 Using cfiCommon0
          CFI Function ZDP_MgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_209, ??CrossCallReturnLabel_206
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond525 Using cfiCommon0
          CFI (cfiCond525) Function ZDP_MgmtBindRsp
          CFI (cfiCond525) Conditional ??CrossCallReturnLabel_209, ??CrossCallReturnLabel_207
          CFI (cfiCond525) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond525) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond525) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond525) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond525) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond525) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond525) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond525) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond525) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond525) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond525) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond525) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond525) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond525) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond525) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond525) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond525) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond525) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond525) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond525) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond525) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond525) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond525) CFA_SP SP+-4
          CFI (cfiCond525) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond526 Using cfiCommon0
          CFI (cfiCond526) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond526) Conditional ??CrossCallReturnLabel_209, ??CrossCallReturnLabel_208
          CFI (cfiCond526) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond526) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond526) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond526) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond526) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond526) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond526) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond526) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond526) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond526) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond526) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond526) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond526) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond526) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond526) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond526) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond526) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond526) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond526) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond526) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond526) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond526) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond526) CFA_SP SP+-4
          CFI (cfiCond526) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond527 Using cfiCommon0
          CFI (cfiCond527) Function ZDP_MgmtRtgRsp
          CFI (cfiCond527) Conditional ??CrossCallReturnLabel_210, ??CrossCallReturnLabel_122
          CFI (cfiCond527) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond527) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond527) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond527) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond527) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond527) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond527) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond527) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond527) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond527) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond527) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond527) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond527) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond527) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond527) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond527) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond527) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond527) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond527) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond527) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond527) CFA_SP SP+-4
          CFI (cfiCond527) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond528 Using cfiCommon0
          CFI (cfiCond528) Function ZDP_MgmtNwkUpdateNotify
          CFI (cfiCond528) Conditional ??CrossCallReturnLabel_210, ??CrossCallReturnLabel_123
          CFI (cfiCond528) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond528) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond528) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond528) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond528) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond528) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond528) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond528) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond528) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond528) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond528) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond528) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond528) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond528) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond528) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond528) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond528) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond528) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond528) CFA_SP SP+-4
          CFI (cfiCond528) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker529 Using cfiCommon1
          CFI (cfiPicker529) NoFunction
          CFI (cfiPicker529) Picker
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
        MOV       DPTR,#ZDP_TmpBuf
        MOV       A,#(ZDP_Buf + 1) & 0xff
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,#((ZDP_Buf + 1) >> 8) & 0xff
        MOVX      @DPTR,A
        RET
          CFI EndBlock cfiCond524
          CFI EndBlock cfiCond525
          CFI EndBlock cfiCond526
          CFI EndBlock cfiCond527
          CFI EndBlock cfiCond528
          CFI EndBlock cfiPicker529

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine49:
          CFI Block cfiCond530 Using cfiCommon0
          CFI Function ZDP_MgmtNwkUpdateNotify
          CFI Conditional ??CrossCallReturnLabel_78
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond531 Using cfiCommon0
          CFI (cfiCond531) Function ZDP_MgmtNwkUpdateNotify
          CFI (cfiCond531) Conditional ??CrossCallReturnLabel_79
          CFI (cfiCond531) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond531) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond531) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond531) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond531) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond531) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond531) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond531) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond531) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond531) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond531) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond531) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond531) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond531) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond531) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond531) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond531) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond531) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond531) CFA_SP SP+-2
          CFI (cfiCond531) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker532 Using cfiCommon1
          CFI (cfiPicker532) NoFunction
          CFI (cfiPicker532) Picker
        LCALL     ?Subroutine78 & 0xFFFF
??CrossCallReturnLabel_130:
        RET
          CFI EndBlock cfiCond530
          CFI EndBlock cfiCond531
          CFI EndBlock cfiPicker532

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine78:
          CFI Block cfiCond533 Using cfiCommon0
          CFI Function ZDP_EPRsp
          CFI Conditional ??CrossCallReturnLabel_129, ??CrossCallReturnLabel_8
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond534 Using cfiCommon0
          CFI (cfiCond534) Function ZDP_EndDeviceBindReq
          CFI (cfiCond534) Conditional ??CrossCallReturnLabel_129, ??CrossCallReturnLabel_9
          CFI (cfiCond534) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond534) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond534) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond534) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond534) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond534) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond534) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond534) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond534) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond534) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond534) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond534) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond534) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond534) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond534) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond534) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond534) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond534) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond534) CFA_SP SP+-4
          CFI (cfiCond534) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond535 Using cfiCommon0
          CFI (cfiCond535) Function ZDP_BindUnbindReq
          CFI (cfiCond535) Conditional ??CrossCallReturnLabel_129, ??CrossCallReturnLabel_10
          CFI (cfiCond535) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond535) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond535) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond535) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond535) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond535) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond535) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond535) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond535) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond535) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond535) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond535) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond535) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond535) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond535) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond535) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond535) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond535) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond535) CFA_SP SP+-4
          CFI (cfiCond535) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond536 Using cfiCommon0
          CFI (cfiCond536) Function ZDP_MgmtNwkUpdateNotify
          CFI (cfiCond536) Conditional ??CrossCallReturnLabel_130, ??CrossCallReturnLabel_78
          CFI (cfiCond536) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond536) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond536) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond536) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond536) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond536) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond536) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond536) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond536) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond536) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond536) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond536) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond536) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond536) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond536) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond536) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond536) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond536) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond536) CFA_SP SP+-4
          CFI (cfiCond536) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond537 Using cfiCommon0
          CFI (cfiCond537) Function ZDP_MgmtNwkUpdateNotify
          CFI (cfiCond537) Conditional ??CrossCallReturnLabel_130, ??CrossCallReturnLabel_79
          CFI (cfiCond537) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond537) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond537) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond537) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond537) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond537) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond537) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond537) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond537) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond537) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond537) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond537) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond537) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond537) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond537) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond537) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond537) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond537) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond537) CFA_SP SP+-4
          CFI (cfiCond537) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker538 Using cfiCommon1
          CFI (cfiPicker538) NoFunction
          CFI (cfiPicker538) Picker
        MOVX      A,@DPTR
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R1,A
        MOV       A,R0
        MOV       DPL,R2
        MOV       DPH,R3
        RET
          CFI EndBlock cfiCond533
          CFI EndBlock cfiCond534
          CFI EndBlock cfiCond535
          CFI EndBlock cfiCond536
          CFI EndBlock cfiCond537
          CFI EndBlock cfiPicker538

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine44:
          CFI Block cfiCond539 Using cfiCommon0
          CFI Function ZDP_EPRsp
          CFI Conditional ??CrossCallReturnLabel_67
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond540 Using cfiCommon0
          CFI (cfiCond540) Function ZDP_MgmtNwkUpdateNotify
          CFI (cfiCond540) Conditional ??CrossCallReturnLabel_68
          CFI (cfiCond540) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond540) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond540) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond540) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond540) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond540) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond540) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond540) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond540) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond540) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond540) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond540) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond540) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond540) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond540) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond540) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond540) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond540) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond540) CFA_SP SP+-2
          CFI (cfiCond540) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker541 Using cfiCommon1
          CFI (cfiPicker541) NoFunction
          CFI (cfiPicker541) Picker
        MOVX      A,@DPTR
        MOV       ?V4,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V5,A
        MOV       ?V6,#0x0
        MOV       R0,#?V4
        RET
          CFI EndBlock cfiCond539
          CFI EndBlock cfiCond540
          CFI EndBlock cfiPicker541

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine27:
          CFI Block cfiCond542 Using cfiCommon0
          CFI Function ZDP_MgmtNwkUpdateReq
          CFI Conditional ??CrossCallReturnLabel_33
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond543 Using cfiCommon0
          CFI (cfiCond543) Function ZDP_MgmtNwkUpdateNotify
          CFI (cfiCond543) Conditional ??CrossCallReturnLabel_34
          CFI (cfiCond543) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond543) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond543) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond543) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond543) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond543) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond543) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond543) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond543) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond543) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond543) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond543) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond543) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond543) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond543) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond543) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond543) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond543) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond543) CFA_SP SP+-2
          CFI (cfiCond543) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker544 Using cfiCommon1
          CFI (cfiPicker544) NoFunction
          CFI (cfiPicker544) Picker
        LCALL     ?Subroutine92 & 0xFFFF
??CrossCallReturnLabel_144:
        INC       DPTR
        RET
          CFI EndBlock cfiCond542
          CFI EndBlock cfiCond543
          CFI EndBlock cfiPicker544

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine92:
          CFI Block cfiCond545 Using cfiCommon0
          CFI Function ZDP_EPRsp
          CFI Conditional ??CrossCallReturnLabel_143, ??CrossCallReturnLabel_8
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond546 Using cfiCommon0
          CFI (cfiCond546) Function ZDP_EndDeviceBindReq
          CFI (cfiCond546) Conditional ??CrossCallReturnLabel_143, ??CrossCallReturnLabel_9
          CFI (cfiCond546) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond546) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond546) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond546) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond546) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond546) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond546) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond546) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond546) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond546) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond546) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond546) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond546) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond546) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond546) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond546) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond546) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond546) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond546) CFA_SP SP+-4
          CFI (cfiCond546) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond547 Using cfiCommon0
          CFI (cfiCond547) Function ZDP_BindUnbindReq
          CFI (cfiCond547) Conditional ??CrossCallReturnLabel_143, ??CrossCallReturnLabel_10
          CFI (cfiCond547) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond547) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond547) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond547) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond547) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond547) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond547) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond547) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond547) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond547) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond547) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond547) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond547) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond547) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond547) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond547) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond547) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond547) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond547) CFA_SP SP+-4
          CFI (cfiCond547) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond548 Using cfiCommon0
          CFI (cfiCond548) Function ZDP_MgmtNwkUpdateReq
          CFI (cfiCond548) Conditional ??CrossCallReturnLabel_144, ??CrossCallReturnLabel_33
          CFI (cfiCond548) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond548) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond548) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond548) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond548) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond548) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond548) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond548) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond548) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond548) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond548) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond548) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond548) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond548) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond548) CFA_SP SP+-4
          CFI (cfiCond548) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond549 Using cfiCommon0
          CFI (cfiCond549) Function ZDP_MgmtNwkUpdateNotify
          CFI (cfiCond549) Conditional ??CrossCallReturnLabel_144, ??CrossCallReturnLabel_34
          CFI (cfiCond549) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond549) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond549) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond549) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond549) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond549) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond549) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond549) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond549) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond549) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond549) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond549) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond549) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond549) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond549) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond549) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond549) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond549) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond549) CFA_SP SP+-4
          CFI (cfiCond549) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker550 Using cfiCommon1
          CFI (cfiPicker550) NoFunction
          CFI (cfiPicker550) Picker
        MOVX      @DPTR,A
        MOV       A,R1
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond545
          CFI EndBlock cfiCond546
          CFI EndBlock cfiCond547
          CFI EndBlock cfiCond548
          CFI EndBlock cfiCond549
          CFI EndBlock cfiPicker550
// 1842 
// 1843 /*********************************************************************
// 1844  * Functions to register for ZDO Over-the-air messages
// 1845  */
// 1846 
// 1847 /*********************************************************************
// 1848  * @fn          ZDO_RegisterForZDOMsg
// 1849  *
// 1850  * @brief       Call this function to register of an incoming over
// 1851  *              the air ZDO message - probably a response message
// 1852  *              but requests can also be received.
// 1853  *              Messages are delivered to the task with ZDO_CB_MSG
// 1854  *              as the message ID.
// 1855  *
// 1856  * @param       taskID - Where you would like the message delivered
// 1857  * @param       clusterID - What message?
// 1858  *                          ZDO_ALL_MSGS_CLUSTERID - all responses
// 1859  *                          and device announce
// 1860  *
// 1861  * @return      ZSuccess - successful, ZMemError if not
// 1862  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1863 ZStatus_t ZDO_RegisterForZDOMsg( uint8 taskID, uint16 clusterID )
ZDO_RegisterForZDOMsg:
          CFI Block cfiBlock551 Using cfiCommon0
          CFI Function ZDO_RegisterForZDOMsg
        CODE
// 1864 {
        FUNCALL ZDO_RegisterForZDOMsg, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V4
        REQUIRE ?V5
        MOV       A,#-0xe
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
        MOV       ?V2,R1
        MOV       ?V0,R2
        MOV       ?V1,R3
// 1865   ZDO_MsgCB_t *pList;
// 1866   ZDO_MsgCB_t *pLast;
// 1867   ZDO_MsgCB_t *pNew;
// 1868 
// 1869   // Look for duplicate
// 1870   pList = pLast = zdoMsgCBs;
        MOV       DPTR,#zdoMsgCBs
        LCALL     ??Subroutine125_0 & 0xFFFF
??CrossCallReturnLabel_248:
        MOV       A,R6
        MOV       R0,A
        MOV       A,R7
        SJMP      ??CrossCallReturnLabel_283
// 1871   while ( pList )
// 1872   {
// 1873     if ( pList->taskID == taskID && pList->clusterID == clusterID )
??ZDO_RegisterForZDOMsg_0:
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,?V2
        JNZ       ??ZDO_RegisterForZDOMsg_1
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R2
        JNZ       ??ZDO_RegisterForZDOMsg_2
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R3
??ZDO_RegisterForZDOMsg_2:
        JZ        ??CrossCallReturnLabel_28
// 1874       return ( ZSuccess );
// 1875     pLast = pList;
??ZDO_RegisterForZDOMsg_1:
        MOV       A,R0
        MOV       R6,A
        MOV       A,R1
        MOV       R7,A
// 1876     pList = (ZDO_MsgCB_t *)pList->next;
        MOV       DPL,R0
        MOV       DPH,R1
        LCALL     ??Subroutine129_0 & 0xFFFF
// 1877   }
??CrossCallReturnLabel_283:
        MOV       R1,A
        MOV       A,R0
        ORL       A,R1
        JNZ       ??ZDO_RegisterForZDOMsg_0
// 1878 
// 1879   // Add to the list
// 1880   pNew = (ZDO_MsgCB_t *)osal_mem_alloc( sizeof ( ZDO_MsgCB_t ) );
        ; Setup parameters for call to function osal_mem_alloc
        MOV       R2,#0x5
        MOV       R3,#0x0
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V4,R2
        MOV       ?V5,R3
        MOV       R0,?V4
        MOV       R1,?V5
// 1881   if ( pNew )
        MOV       A,R2
        ORL       A,R1
        JZ        ??ZDO_RegisterForZDOMsg_3
// 1882   {
// 1883     pNew->taskID = taskID;
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        MOV       A,?V2
        LCALL     ?Subroutine34 & 0xFFFF
// 1884     pNew->clusterID = clusterID;
??CrossCallReturnLabel_46:
        MOV       A,?V0
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,?V1
        MOVX      @DPTR,A
// 1885     pNew->next = NULL;
        MOV       DPL,R2
        MOV       DPH,R3
        CLR       A
        MOVX      @DPTR,A
        INC       DPTR
        MOVX      @DPTR,A
// 1886     if ( zdoMsgCBs )
        MOV       DPTR,#zdoMsgCBs
        LCALL     ??Subroutine130_0 & 0xFFFF
??CrossCallReturnLabel_261:
        MOV       A,R2
        ORL       A,R3
        JZ        ??ZDO_RegisterForZDOMsg_4
// 1887     {
// 1888       pLast->next = pNew;
        MOV       DPL,R6
        MOV       DPH,R7
        SJMP      ??ZDO_RegisterForZDOMsg_5
// 1889     }
// 1890     else
// 1891       zdoMsgCBs = pNew;
??ZDO_RegisterForZDOMsg_4:
        MOV       DPTR,#zdoMsgCBs
??ZDO_RegisterForZDOMsg_5:
        LCALL     ?Subroutine26 & 0xFFFF
// 1892     return ( ZSuccess );
??CrossCallReturnLabel_28:
        MOV       R1,#0x0
        SJMP      ??ZDO_RegisterForZDOMsg_6
// 1893   }
// 1894   else
// 1895     return ( ZMemError );
??ZDO_RegisterForZDOMsg_3:
        MOV       R1,#0x10
??ZDO_RegisterForZDOMsg_6:
        LJMP      ??Subroutine102_0 & 0xFFFF
// 1896 }
          CFI EndBlock cfiBlock551

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine84:
          CFI Block cfiCond552 Using cfiCommon0
          CFI Function ZDP_UserDescSet
          CFI Conditional ??CrossCallReturnLabel_280
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond553 Using cfiCommon0
          CFI (cfiCond553) Function ZDP_UserDescRsp
          CFI (cfiCond553) Conditional ??CrossCallReturnLabel_281
          CFI (cfiCond553) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond553) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond553) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond553) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond553) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond553) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond553) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond553) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond553) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond553) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond553) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond553) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond553) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond553) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond553) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond553) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond553) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond553) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond553) CFA_SP SP+-2
          CFI (cfiCond553) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker554 Using cfiCommon1
          CFI (cfiPicker554) NoFunction
          CFI (cfiPicker554) Picker
        MOV       A,R2
        MOV       R6,A
        MOV       A,R3
        MOV       R7,A
          CFI EndBlock cfiCond552
          CFI EndBlock cfiCond553
          CFI EndBlock cfiPicker554
        REQUIRE ??Subroutine128_0
        ; // Fall through to label ??Subroutine128_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine128_0:
          CFI Block cfiCond555 Using cfiCommon0
          CFI Function ZDP_DeviceAnnce
          CFI Conditional ??CrossCallReturnLabel_286
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond556 Using cfiCommon0
          CFI (cfiCond556) Function ZDP_UserDescSet
          CFI (cfiCond556) Conditional ??CrossCallReturnLabel_280
          CFI (cfiCond556) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond556) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond556) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond556) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond556) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond556) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond556) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond556) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond556) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond556) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond556) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond556) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond556) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond556) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond556) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond556) CFA_SP SP+-2
          CFI (cfiCond556) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond557 Using cfiCommon0
          CFI (cfiCond557) Function ZDP_UserDescRsp
          CFI (cfiCond557) Conditional ??CrossCallReturnLabel_281
          CFI (cfiCond557) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond557) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond557) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond557) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond557) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond557) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond557) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond557) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond557) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond557) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond557) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond557) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond557) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond557) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond557) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond557) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond557) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond557) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond557) CFA_SP SP+-2
          CFI (cfiCond557) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker558 Using cfiCommon1
          CFI (cfiPicker558) NoFunction
          CFI (cfiPicker558) Picker
        MOV       DPTR,#ZDP_TmpBuf
          CFI EndBlock cfiCond555
          CFI EndBlock cfiCond556
          CFI EndBlock cfiCond557
          CFI EndBlock cfiPicker558
        REQUIRE ??Subroutine129_0
        ; // Fall through to label ??Subroutine129_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine129_0:
          CFI Block cfiCond559 Using cfiCommon0
          CFI Function fillAndSend
          CFI Conditional ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_69
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond560 Using cfiCommon0
          CFI (cfiCond560) Function ZDP_NwkAddrReq
          CFI (cfiCond560) Conditional ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_70
          CFI (cfiCond560) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond560) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond560) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond560) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond560) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond560) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond560) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond560) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond560) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond560) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond560) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond560) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond560) CFA_SP SP+-4
          CFI (cfiCond560) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond561 Using cfiCommon0
          CFI (cfiCond561) Function ZDP_UserDescSet
          CFI (cfiCond561) Conditional ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_47
          CFI (cfiCond561) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond561) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond561) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond561) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond561) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond561) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond561) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond561) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond561) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond561) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond561) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond561) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond561) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond561) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond561) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond561) CFA_SP SP+-4
          CFI (cfiCond561) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond562 Using cfiCommon0
          CFI (cfiCond562) Function ZDP_NodeDescMsg
          CFI (cfiCond562) Conditional ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_48
          CFI (cfiCond562) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond562) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond562) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond562) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond562) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond562) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond562) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond562) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond562) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond562) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond562) CFA_SP SP+-4
          CFI (cfiCond562) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond563 Using cfiCommon0
          CFI (cfiCond563) Function ZDP_PowerDescMsg
          CFI (cfiCond563) Conditional ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_49
          CFI (cfiCond563) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond563) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond563) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond563) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond563) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond563) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond563) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond563) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond563) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond563) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond563) CFA_SP SP+-4
          CFI (cfiCond563) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond564 Using cfiCommon0
          CFI (cfiCond564) Function ZDP_UserDescRsp
          CFI (cfiCond564) Conditional ??CrossCallReturnLabel_282
          CFI (cfiCond564) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond564) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond564) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond564) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond564) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond564) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond564) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond564) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond564) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond564) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond564) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond564) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond564) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond564) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond564) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond564) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond564) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond564) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond564) CFA_SP SP+-2
          CFI (cfiCond564) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond565 Using cfiCommon0
          CFI (cfiCond565) Function ZDO_RegisterForZDOMsg
          CFI (cfiCond565) Conditional ??CrossCallReturnLabel_283
          CFI (cfiCond565) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond565) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond565) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond565) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond565) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond565) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond565) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond565) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond565) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond565) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond565) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond565) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond565) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond565) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond565) CFA_SP SP+-2
          CFI (cfiCond565) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond566 Using cfiCommon0
          CFI (cfiCond566) Function ZDP_IEEEAddrReq
          CFI (cfiCond566) Conditional ??CrossCallReturnLabel_287, ??CrossCallReturnLabel_267
          CFI (cfiCond566) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond566) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond566) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond566) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond566) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond566) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond566) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond566) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond566) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond566) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond566) CFA_SP SP+-4
          CFI (cfiCond566) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond567 Using cfiCommon0
          CFI (cfiCond567) Function ZDP_MatchDescReq
          CFI (cfiCond567) Conditional ??CrossCallReturnLabel_287, ??CrossCallReturnLabel_268
          CFI (cfiCond567) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond567) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond567) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond567) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond567) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond567) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond567) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond567) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond567) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond567) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond567) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond567) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond567) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond567) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond567) CFA_SP SP+-4
          CFI (cfiCond567) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond568 Using cfiCommon0
          CFI (cfiCond568) Function ZDP_ServerDiscReq
          CFI (cfiCond568) Conditional ??CrossCallReturnLabel_287, ??CrossCallReturnLabel_269
          CFI (cfiCond568) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond568) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond568) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond568) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond568) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond568) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond568) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond568) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond568) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond568) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond568) CFA_SP SP+-4
          CFI (cfiCond568) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond569 Using cfiCommon0
          CFI (cfiCond569) Function ZDP_SimpleDescMsg
          CFI (cfiCond569) Conditional ??CrossCallReturnLabel_287, ??CrossCallReturnLabel_270
          CFI (cfiCond569) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond569) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond569) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond569) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond569) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond569) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond569) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond569) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond569) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond569) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond569) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond569) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond569) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond569) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond569) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond569) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond569) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond569) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond569) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond569) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond569) CFA_SP SP+-4
          CFI (cfiCond569) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond570 Using cfiCommon0
          CFI (cfiCond570) Function ZDP_SendData
          CFI (cfiCond570) Conditional ??CrossCallReturnLabel_287, ??CrossCallReturnLabel_271
          CFI (cfiCond570) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond570) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond570) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond570) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond570) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond570) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond570) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond570) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond570) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond570) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond570) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond570) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond570) CFA_SP SP+-4
          CFI (cfiCond570) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond571 Using cfiCommon0
          CFI (cfiCond571) Function ZDP_GenericRsp
          CFI (cfiCond571) Conditional ??CrossCallReturnLabel_287, ??CrossCallReturnLabel_272
          CFI (cfiCond571) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond571) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond571) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond571) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond571) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond571) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond571) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond571) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond571) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond571) CFA_SP SP+-4
          CFI (cfiCond571) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond572 Using cfiCommon0
          CFI (cfiCond572) Function ZDP_EndDeviceBindReq
          CFI (cfiCond572) Conditional ??CrossCallReturnLabel_287, ??CrossCallReturnLabel_273
          CFI (cfiCond572) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond572) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond572) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond572) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond572) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond572) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond572) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond572) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond572) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond572) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond572) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond572) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond572) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond572) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond572) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond572) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond572) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond572) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond572) CFA_SP SP+-4
          CFI (cfiCond572) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond573 Using cfiCommon0
          CFI (cfiCond573) Function ZDP_MgmtPermitJoinReq
          CFI (cfiCond573) Conditional ??CrossCallReturnLabel_287, ??CrossCallReturnLabel_274
          CFI (cfiCond573) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond573) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond573) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond573) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond573) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond573) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond573) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond573) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond573) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond573) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond573) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond573) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond573) CFA_SP SP+-4
          CFI (cfiCond573) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond574 Using cfiCommon0
          CFI (cfiCond574) Function ZDO_SendMsgCBs
          CFI (cfiCond574) Conditional ??CrossCallReturnLabel_287, ??CrossCallReturnLabel_275
          CFI (cfiCond574) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond574) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond574) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond574) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond574) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond574) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond574) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond574) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond574) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond574) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond574) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond574) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond574) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond574) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond574) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond574) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond574) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond574) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond574) CFA_SP SP+-4
          CFI (cfiCond574) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond575 Using cfiCommon0
          CFI (cfiCond575) Function ZDP_IncomingData
          CFI (cfiCond575) Conditional ??CrossCallReturnLabel_287, ??CrossCallReturnLabel_276
          CFI (cfiCond575) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond575) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond575) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond575) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond575) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond575) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond575) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond575) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond575) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond575) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond575) CFA_SP SP+-4
          CFI (cfiCond575) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond576 Using cfiCommon0
          CFI (cfiCond576) Function ZDP_IncomingData
          CFI (cfiCond576) Conditional ??CrossCallReturnLabel_287, ??CrossCallReturnLabel_277
          CFI (cfiCond576) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond576) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond576) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond576) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond576) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond576) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond576) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond576) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond576) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond576) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond576) CFA_SP SP+-4
          CFI (cfiCond576) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond577 Using cfiCommon0
          CFI (cfiCond577) Function ZDP_IncomingData
          CFI (cfiCond577) Conditional ??CrossCallReturnLabel_287, ??CrossCallReturnLabel_278
          CFI (cfiCond577) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond577) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond577) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond577) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond577) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond577) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond577) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond577) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond577) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond577) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond577) CFA_SP SP+-4
          CFI (cfiCond577) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond578 Using cfiCommon0
          CFI (cfiCond578) Function ZDP_IncomingData
          CFI (cfiCond578) Conditional ??CrossCallReturnLabel_287, ??CrossCallReturnLabel_279
          CFI (cfiCond578) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond578) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond578) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond578) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond578) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond578) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond578) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond578) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond578) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond578) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond578) CFA_SP SP+-4
          CFI (cfiCond578) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond579 Using cfiCommon0
          CFI (cfiCond579) Function ZDP_DeviceAnnce
          CFI (cfiCond579) Conditional ??CrossCallReturnLabel_286
          CFI (cfiCond579) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond579) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond579) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond579) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond579) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond579) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond579) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond579) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond579) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond579) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond579) CFA_SP SP+-2
          CFI (cfiCond579) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond580 Using cfiCommon0
          CFI (cfiCond580) Function ZDP_UserDescSet
          CFI (cfiCond580) Conditional ??CrossCallReturnLabel_280
          CFI (cfiCond580) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond580) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond580) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond580) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond580) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond580) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond580) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond580) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond580) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond580) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond580) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond580) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond580) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond580) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond580) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond580) CFA_SP SP+-2
          CFI (cfiCond580) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond581 Using cfiCommon0
          CFI (cfiCond581) Function ZDP_UserDescRsp
          CFI (cfiCond581) Conditional ??CrossCallReturnLabel_281
          CFI (cfiCond581) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond581) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond581) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond581) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond581) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond581) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond581) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond581) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond581) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond581) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond581) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond581) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond581) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond581) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond581) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond581) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond581) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond581) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond581) CFA_SP SP+-2
          CFI (cfiCond581) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker582 Using cfiCommon1
          CFI (cfiPicker582) NoFunction
          CFI (cfiPicker582) Picker
        MOVX      A,@DPTR
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond559
          CFI EndBlock cfiCond560
          CFI EndBlock cfiCond561
          CFI EndBlock cfiCond562
          CFI EndBlock cfiCond563
          CFI EndBlock cfiCond564
          CFI EndBlock cfiCond565
          CFI EndBlock cfiCond566
          CFI EndBlock cfiCond567
          CFI EndBlock cfiCond568
          CFI EndBlock cfiCond569
          CFI EndBlock cfiCond570
          CFI EndBlock cfiCond571
          CFI EndBlock cfiCond572
          CFI EndBlock cfiCond573
          CFI EndBlock cfiCond574
          CFI EndBlock cfiCond575
          CFI EndBlock cfiCond576
          CFI EndBlock cfiCond577
          CFI EndBlock cfiCond578
          CFI EndBlock cfiCond579
          CFI EndBlock cfiCond580
          CFI EndBlock cfiCond581
          CFI EndBlock cfiPicker582

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine34:
          CFI Block cfiCond583 Using cfiCommon0
          CFI Function ZDP_MgmtBindRsp
          CFI Conditional ??CrossCallReturnLabel_45
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond584 Using cfiCommon0
          CFI (cfiCond584) Function ZDO_RegisterForZDOMsg
          CFI (cfiCond584) Conditional ??CrossCallReturnLabel_46
          CFI (cfiCond584) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond584) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond584) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond584) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond584) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond584) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond584) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond584) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond584) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond584) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond584) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond584) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond584) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond584) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond584) CFA_SP SP+-2
          CFI (cfiCond584) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker585 Using cfiCommon1
          CFI (cfiPicker585) NoFunction
          CFI (cfiPicker585) Picker
        LCALL     ?Subroutine94 & 0xFFFF
??CrossCallReturnLabel_147:
        RET
          CFI EndBlock cfiCond583
          CFI EndBlock cfiCond584
          CFI EndBlock cfiPicker585

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine94:
          CFI Block cfiCond586 Using cfiCommon0
          CFI Function ZDP_MgmtBindRsp
          CFI Conditional ??CrossCallReturnLabel_147, ??CrossCallReturnLabel_45
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond587 Using cfiCommon0
          CFI (cfiCond587) Function ZDO_RegisterForZDOMsg
          CFI (cfiCond587) Conditional ??CrossCallReturnLabel_147, ??CrossCallReturnLabel_46
          CFI (cfiCond587) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond587) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond587) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond587) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond587) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond587) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond587) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond587) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond587) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond587) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond587) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond587) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond587) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond587) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond587) CFA_SP SP+-4
          CFI (cfiCond587) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond588 Using cfiCommon0
          CFI (cfiCond588) Function ZDP_MgmtNwkUpdateNotify
          CFI (cfiCond588) Conditional ??CrossCallReturnLabel_148, ??CrossCallReturnLabel_11
          CFI (cfiCond588) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond588) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond588) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond588) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond588) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond588) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond588) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond588) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond588) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond588) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond588) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond588) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond588) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond588) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond588) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond588) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond588) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond588) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond588) CFA_SP SP+-4
          CFI (cfiCond588) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond589 Using cfiCommon0
          CFI (cfiCond589) Function ZDP_IncomingData
          CFI (cfiCond589) Conditional ??CrossCallReturnLabel_148, ??CrossCallReturnLabel_12
          CFI (cfiCond589) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond589) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond589) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond589) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond589) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond589) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond589) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond589) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond589) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond589) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond589) CFA_SP SP+-4
          CFI (cfiCond589) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond590 Using cfiCommon0
          CFI (cfiCond590) Function ZDP_IncomingData
          CFI (cfiCond590) Conditional ??CrossCallReturnLabel_148, ??CrossCallReturnLabel_13
          CFI (cfiCond590) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond590) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond590) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond590) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond590) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond590) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond590) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond590) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond590) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond590) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond590) CFA_SP SP+-4
          CFI (cfiCond590) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiPicker591 Using cfiCommon1
          CFI (cfiPicker591) NoFunction
          CFI (cfiPicker591) Picker
        MOVX      @DPTR,A
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond586
          CFI EndBlock cfiCond587
          CFI EndBlock cfiCond588
          CFI EndBlock cfiCond589
          CFI EndBlock cfiCond590
          CFI EndBlock cfiPicker591

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine26:
          CFI Block cfiCond592 Using cfiCommon0
          CFI Function fillAndSend
          CFI Conditional ??CrossCallReturnLabel_26
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond593 Using cfiCommon0
          CFI (cfiCond593) Function ZDP_MgmtRtgRsp
          CFI (cfiCond593) Conditional ??CrossCallReturnLabel_27
          CFI (cfiCond593) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond593) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond593) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond593) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond593) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond593) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond593) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond593) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond593) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond593) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond593) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond593) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond593) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond593) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond593) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond593) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond593) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond593) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond593) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond593) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond593) CFA_SP SP+-2
          CFI (cfiCond593) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond594 Using cfiCommon0
          CFI (cfiCond594) Function ZDO_RegisterForZDOMsg
          CFI (cfiCond594) Conditional ??CrossCallReturnLabel_28
          CFI (cfiCond594) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond594) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond594) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond594) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond594) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond594) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond594) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond594) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond594) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond594) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond594) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond594) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond594) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond594) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond594) CFA_SP SP+-2
          CFI (cfiCond594) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond595 Using cfiCommon0
          CFI (cfiCond595) Function ZDP_IncomingData
          CFI (cfiCond595) Conditional ??CrossCallReturnLabel_29
          CFI (cfiCond595) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond595) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond595) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond595) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond595) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond595) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond595) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond595) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond595) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond595) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond595) CFA_SP SP+-2
          CFI (cfiCond595) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond596 Using cfiCommon0
          CFI (cfiCond596) Function ZDP_IncomingData
          CFI (cfiCond596) Conditional ??CrossCallReturnLabel_30
          CFI (cfiCond596) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond596) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond596) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond596) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond596) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond596) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond596) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond596) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond596) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond596) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond596) CFA_SP SP+-2
          CFI (cfiCond596) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond597 Using cfiCommon0
          CFI (cfiCond597) Function ZDP_IncomingData
          CFI (cfiCond597) Conditional ??CrossCallReturnLabel_31
          CFI (cfiCond597) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond597) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond597) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond597) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond597) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond597) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond597) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond597) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond597) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond597) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond597) CFA_SP SP+-2
          CFI (cfiCond597) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond598 Using cfiCommon0
          CFI (cfiCond598) Function ZDP_IncomingData
          CFI (cfiCond598) Conditional ??CrossCallReturnLabel_32
          CFI (cfiCond598) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond598) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond598) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond598) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond598) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond598) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond598) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond598) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond598) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond598) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond598) CFA_SP SP+-2
          CFI (cfiCond598) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiPicker599 Using cfiCommon1
          CFI (cfiPicker599) NoFunction
          CFI (cfiPicker599) Picker
        MOV       A,R0
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R1
        MOVX      @DPTR,A
        RET
          CFI EndBlock cfiCond592
          CFI EndBlock cfiCond593
          CFI EndBlock cfiCond594
          CFI EndBlock cfiCond595
          CFI EndBlock cfiCond596
          CFI EndBlock cfiCond597
          CFI EndBlock cfiCond598
          CFI EndBlock cfiPicker599
// 1897 
// 1898 /*********************************************************************
// 1899  * @fn          ZDO_RemoveRegisteredCB
// 1900  *
// 1901  * @brief       Call this function if you don't want to receive the
// 1902  *              incoming message.
// 1903  *
// 1904  * @param       taskID - Where the messages are being delivered.
// 1905  * @param       clusterID - What message?
// 1906  *
// 1907  * @return      ZSuccess - successful, ZFailure if not found
// 1908  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1909 ZStatus_t ZDO_RemoveRegisteredCB( uint8 taskID, uint16 clusterID )
ZDO_RemoveRegisteredCB:
          CFI Block cfiBlock600 Using cfiCommon0
          CFI Function ZDO_RemoveRegisteredCB
        CODE
// 1910 {
        FUNCALL ZDO_RemoveRegisteredCB, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV       A,#-0x9
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
        MOV       A,R1
        MOV       R6,A
// 1911   ZDO_MsgCB_t *pList;
// 1912   ZDO_MsgCB_t *pLast = NULL;
        MOV       R4,#0x0
        MOV       R5,#0x0
// 1913 
// 1914   pList = zdoMsgCBs;
        MOV       DPTR,#zdoMsgCBs
        SJMP      ??ZDO_RemoveRegisteredCB_0
// 1915   while ( pList )
// 1916   {
// 1917     if ( pList->taskID == taskID && pList->clusterID == clusterID )
// 1918     {
// 1919       if ( pLast )
// 1920       {
// 1921         // remove this one from the linked list
// 1922         pLast->next = pList->next;
// 1923       }
// 1924       else if ( pList->next )
// 1925       {
// 1926         // remove the first one from the linked list
// 1927         zdoMsgCBs = pList->next;
// 1928       }
// 1929       else
// 1930       {
// 1931         // remove the only item from the list
// 1932         zdoMsgCBs = (ZDO_MsgCB_t *)NULL;
// 1933       }
// 1934       osal_mem_free( pList );
// 1935       return ( ZSuccess );
// 1936     }
// 1937     pLast = pList;
??ZDO_RemoveRegisteredCB_1:
        MOV       A,R0
        MOV       R4,A
        MOV       A,R1
        MOV       R5,A
// 1938     pList = pList->next;
        MOV       DPL,R0
        MOV       DPH,R1
??ZDO_RemoveRegisteredCB_0:
        LCALL     ??Subroutine110_0 & 0xFFFF
??CrossCallReturnLabel_160:
        ORL       A,R1
        JZ        ??ZDO_RemoveRegisteredCB_2
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R6
        JNZ       ??ZDO_RemoveRegisteredCB_1
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R2
        JNZ       ??ZDO_RemoveRegisteredCB_3
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R3
??ZDO_RemoveRegisteredCB_3:
        JNZ       ??ZDO_RemoveRegisteredCB_1
        MOV       DPL,R0
        MOV       DPH,R1
        LCALL     ??Subroutine130_0 & 0xFFFF
??CrossCallReturnLabel_262:
        MOV       A,R4
        ORL       A,R5
        JZ        ??ZDO_RemoveRegisteredCB_4
        MOV       DPL,R4
        MOV       DPH,R5
        SJMP      ??ZDO_RemoveRegisteredCB_5
??ZDO_RemoveRegisteredCB_4:
        MOV       A,R2
        ORL       A,R3
        MOV       DPTR,#zdoMsgCBs
        JZ        ??ZDO_RemoveRegisteredCB_6
??ZDO_RemoveRegisteredCB_5:
        MOV       A,R2
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R3
        SJMP      ??ZDO_RemoveRegisteredCB_7
??ZDO_RemoveRegisteredCB_6:
        CLR       A
        MOVX      @DPTR,A
        INC       DPTR
??ZDO_RemoveRegisteredCB_7:
        MOVX      @DPTR,A
        ; Setup parameters for call to function osal_mem_free
        MOV       A,R0
        MOV       R2,A
        MOV       A,R1
        MOV       R3,A
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
        MOV       R1,#0x0
        SJMP      ??ZDO_RemoveRegisteredCB_8
// 1939   }
// 1940 
// 1941   return ( ZFailure );
??ZDO_RemoveRegisteredCB_2:
        MOV       R1,#0x1
??ZDO_RemoveRegisteredCB_8:
        LJMP      ?Subroutine6 & 0xFFFF
// 1942 }
          CFI EndBlock cfiBlock600
// 1943 
// 1944 /*********************************************************************
// 1945  * @fn          ZDO_SendMsgCBs
// 1946  *
// 1947  * @brief       This function sends messages to registered tasks.
// 1948  *              Local to ZDO and shouldn't be called outside of ZDO.
// 1949  *
// 1950  * @param       inMsg - incoming message
// 1951  *
// 1952  * @return      TRUE if sent to at least 1 task, FALSE if not
// 1953  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1954 uint8 ZDO_SendMsgCBs( zdoIncomingMsg_t *inMsg )
ZDO_SendMsgCBs:
          CFI Block cfiBlock601 Using cfiCommon0
          CFI Function ZDO_SendMsgCBs
        CODE
// 1955 {
        FUNCALL ZDO_SendMsgCBs, osal_msg_allocate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_SendMsgCBs, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_SendMsgCBs, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_SendMsgCBs, osal_msg_send
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        MOV       A,#-0x12
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
        ; Saved register size: 18
        ; Auto size: 0
        MOV       ?V2,R2
        MOV       ?V3,R3
// 1956   uint8 ret = FALSE;
        MOV       ?V4,#0x0
// 1957   ZDO_MsgCB_t *pList = zdoMsgCBs;
        MOV       DPTR,#zdoMsgCBs
        LCALL     ?Subroutine57 & 0xFFFF
??CrossCallReturnLabel_89:
        ADD       A,#0x10
        MOV       ?V8,A
        CLR       A
        ADDC      A,?V3
        MOV       ?V9,A
        LJMP      ??CrossCallReturnLabel_93 & 0xFFFF
// 1958   while ( pList )
// 1959   {
// 1960     if ( (pList->clusterID == inMsg->clusterID)
// 1961        || ((pList->clusterID == ZDO_ALL_MSGS_CLUSTERID)
// 1962            && ((inMsg->clusterID & ZDO_RESPONSE_BIT) || (inMsg->clusterID == Device_annce))) )
??ZDO_SendMsgCBs_0:
        MOV       A,?V2
        ADD       A,#0xc
        MOV       DPL,A
        CLR       A
        ADDC      A,?V3
        MOV       DPH,A
        LCALL     ??Subroutine131_0 & 0xFFFF
??CrossCallReturnLabel_275:
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ??Subroutine130_0 & 0xFFFF
??CrossCallReturnLabel_263:
        MOV       A,R0
        XRL       A,R2
        JNZ       ??ZDO_SendMsgCBs_1
        MOV       A,R1
        XRL       A,R3
??ZDO_SendMsgCBs_1:
        JZ        ??ZDO_SendMsgCBs_2
        MOV       A,#-0x1
        XRL       A,R2
        JNZ       ??ZDO_SendMsgCBs_3
        MOV       A,#-0x1
        XRL       A,R3
??ZDO_SendMsgCBs_3:
        JZ        $+5
        LJMP      ??ZDO_SendMsgCBs_4 & 0xFFFF
        MOV       A,R1
        ANL       A,#0x80
        JNZ       ??ZDO_SendMsgCBs_2
        MOV       A,#0x13
        XRL       A,R0
        ORL       A,R1
        JZ        $+5
        LJMP      ??ZDO_SendMsgCBs_4 & 0xFFFF
// 1963     {
// 1964       zdoIncomingMsg_t *msgPtr;
// 1965 
// 1966       // Send the address to the task
// 1967       msgPtr = (zdoIncomingMsg_t *)osal_msg_allocate( sizeof( zdoIncomingMsg_t ) + inMsg->asduLen );
??ZDO_SendMsgCBs_2:
        ; Setup parameters for call to function osal_msg_allocate
        MOV       DPL,?V8
        MOV       DPH,?V9
        MOVX      A,@DPTR
        ADD       A,#0x17
        MOV       R2,A
        CLR       A
        ADDC      A,#0x0
        MOV       R3,A
        LCALL     `??osal_msg_allocate::?relay`; Banked call to: osal_msg_allocate
        MOV       ?V6,R2
        MOV       ?V7,R3
        MOV       R6,?V6
        MOV       R7,?V7
// 1968       if ( msgPtr )
        MOV       A,R2
        ORL       A,R7
        JZ        ??ZDO_SendMsgCBs_4
// 1969       {
// 1970         // copy struct
// 1971         osal_memcpy( msgPtr, inMsg, sizeof( zdoIncomingMsg_t ));
        ; Setup parameters for call to function osal_memcpy
        MOV       ?V4,?V2
        MOV       ?V5,?V3
        MOV       ?V6,#0x0
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       R4,#0x17
        LCALL     ?Subroutine73 & 0xFFFF
??CrossCallReturnLabel_170:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 18)
// 1972 
// 1973         if ( inMsg->asduLen )
        MOV       DPL,?V8
        MOV       DPH,?V9
        MOVX      A,@DPTR
        JZ        ??ZDO_SendMsgCBs_5
// 1974         {
// 1975           msgPtr->asdu = (byte*)(((byte*)msgPtr) + sizeof( zdoIncomingMsg_t ));
        MOV       A,R6
        ADD       A,#0x17
        MOV       R2,A
        CLR       A
        ADDC      A,R7
        MOV       R3,A
        MOV       A,R6
        ADD       A,#0x13
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
        MOV       DPH,A
        MOV       A,R2
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R3
        MOVX      @DPTR,A
// 1976           osal_memcpy( msgPtr->asdu, inMsg->asdu, inMsg->asduLen );
        ; Setup parameters for call to function osal_memcpy
        MOV       A,?V2
        ADD       A,#0x13
        MOV       DPL,A
        CLR       A
        ADDC      A,?V3
        MOV       DPH,A
        MOVX      A,@DPTR
        MOV       ?V4,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V5,A
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       DPL,?V8
        MOV       DPH,?V9
        MOVX      A,@DPTR
        MOV       R4,A
        LCALL     ?Subroutine73 & 0xFFFF
// 1977         }
??CrossCallReturnLabel_171:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 18)
// 1978 
// 1979         msgPtr->hdr.event = ZDO_CB_MSG;
??ZDO_SendMsgCBs_5:
        MOV       DPL,R6
        MOV       DPH,R7
        MOV       A,#-0x2d
        MOVX      @DPTR,A
// 1980         osal_msg_send( pList->taskID, (uint8 *)msgPtr );
        ; Setup parameters for call to function osal_msg_send
        MOV       A,R6
        MOV       R2,A
        MOV       A,R7
        MOV       R3,A
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R1,A
        LCALL     `??osal_msg_send::?relay`; Banked call to: osal_msg_send
// 1981         ret = TRUE;
        MOV       ?V4,#0x1
// 1982       }
// 1983     }
// 1984     pList = (ZDO_MsgCB_t *)pList->next;
??ZDO_SendMsgCBs_4:
        MOV       DPL,?V0
        MOV       DPH,?V1
        LCALL     ?Subroutine58 & 0xFFFF
// 1985   }
??CrossCallReturnLabel_93:
        MOV       A,?V0
        ORL       A,?V1
        JZ        $+5
        LJMP      ??ZDO_SendMsgCBs_0 & 0xFFFF
// 1986   return ( ret );
        MOV       R1,?V4
        LJMP      ??Subroutine116_0 & 0xFFFF
// 1987 }
          CFI EndBlock cfiBlock601

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine57:
          CFI Block cfiCond602 Using cfiCommon0
          CFI Function ZDP_NwkAddrReq
          CFI Conditional ??CrossCallReturnLabel_88
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond603 Using cfiCommon0
          CFI (cfiCond603) Function ZDO_SendMsgCBs
          CFI (cfiCond603) Conditional ??CrossCallReturnLabel_89
          CFI (cfiCond603) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond603) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond603) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond603) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond603) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond603) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond603) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond603) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond603) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond603) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond603) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond603) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond603) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond603) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond603) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond603) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond603) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond603) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond603) CFA_SP SP+-2
          CFI (cfiCond603) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker604 Using cfiCommon1
          CFI (cfiPicker604) NoFunction
          CFI (cfiPicker604) Picker
        MOVX      A,@DPTR
        MOV       ?V0,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V1,A
        ; Setup parameters for call to function sAddrExtCmp
        MOV       A,R2
        RET
          CFI EndBlock cfiCond602
          CFI EndBlock cfiCond603
          CFI EndBlock cfiPicker604

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine51:
          CFI Block cfiCond605 Using cfiCommon0
          CFI Function ZDP_ParentAnnce
          CFI Conditional ??CrossCallReturnLabel_264
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond606 Using cfiCommon0
          CFI (cfiCond606) Function zdpProcessAddrReq
          CFI (cfiCond606) Conditional ??CrossCallReturnLabel_265
          CFI (cfiCond606) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond606) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond606) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond606) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond606) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond606) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond606) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond606) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond606) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond606) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond606) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond606) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond606) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond606) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond606) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond606) CFA_SP SP+-2
          CFI (cfiCond606) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond607 Using cfiCommon0
          CFI (cfiCond607) Function ZDP_BindUnbindReq
          CFI (cfiCond607) Conditional ??CrossCallReturnLabel_266
          CFI (cfiCond607) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond607) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond607) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond607) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond607) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond607) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond607) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond607) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond607) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond607) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond607) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond607) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond607) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond607) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond607) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond607) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond607) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond607) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond607) CFA_SP SP+-2
          CFI (cfiCond607) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker608 Using cfiCommon1
          CFI (cfiPicker608) NoFunction
          CFI (cfiPicker608) Picker
        MOV       DPTR,#ZDP_TmpBuf
          CFI EndBlock cfiCond605
          CFI EndBlock cfiCond606
          CFI EndBlock cfiCond607
          CFI EndBlock cfiPicker608
        REQUIRE ??Subroutine130_0
        ; // Fall through to label ??Subroutine130_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine130_0:
          CFI Block cfiCond609 Using cfiCommon0
          CFI Function zdpProcessAddrReq
          CFI Conditional ??CrossCallReturnLabel_260
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond610 Using cfiCommon0
          CFI (cfiCond610) Function ZDO_RegisterForZDOMsg
          CFI (cfiCond610) Conditional ??CrossCallReturnLabel_261
          CFI (cfiCond610) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond610) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond610) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond610) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond610) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond610) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond610) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond610) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond610) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond610) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond610) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond610) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond610) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond610) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond610) CFA_SP SP+-2
          CFI (cfiCond610) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond611 Using cfiCommon0
          CFI (cfiCond611) Function ZDO_RemoveRegisteredCB
          CFI (cfiCond611) Conditional ??CrossCallReturnLabel_262
          CFI (cfiCond611) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond611) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond611) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond611) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond611) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond611) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond611) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond611) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond611) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond611) CFA_SP SP+-2
          CFI (cfiCond611) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond612 Using cfiCommon0
          CFI (cfiCond612) Function ZDO_SendMsgCBs
          CFI (cfiCond612) Conditional ??CrossCallReturnLabel_263
          CFI (cfiCond612) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond612) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond612) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond612) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond612) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond612) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond612) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond612) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond612) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond612) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond612) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond612) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond612) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond612) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond612) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond612) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond612) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond612) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond612) CFA_SP SP+-2
          CFI (cfiCond612) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond613 Using cfiCommon0
          CFI (cfiCond613) Function ZDP_ParentAnnce
          CFI (cfiCond613) Conditional ??CrossCallReturnLabel_264
          CFI (cfiCond613) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond613) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond613) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond613) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond613) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond613) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond613) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond613) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond613) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond613) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond613) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond613) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond613) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond613) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond613) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond613) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond613) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond613) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond613) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond613) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond613) CFA_SP SP+-2
          CFI (cfiCond613) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond614 Using cfiCommon0
          CFI (cfiCond614) Function zdpProcessAddrReq
          CFI (cfiCond614) Conditional ??CrossCallReturnLabel_265
          CFI (cfiCond614) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond614) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond614) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond614) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond614) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond614) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond614) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond614) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond614) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond614) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond614) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond614) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond614) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond614) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond614) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond614) CFA_SP SP+-2
          CFI (cfiCond614) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond615 Using cfiCommon0
          CFI (cfiCond615) Function ZDP_BindUnbindReq
          CFI (cfiCond615) Conditional ??CrossCallReturnLabel_266
          CFI (cfiCond615) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond615) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond615) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond615) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond615) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond615) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond615) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond615) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond615) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond615) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond615) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond615) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond615) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond615) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond615) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond615) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond615) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond615) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond615) CFA_SP SP+-2
          CFI (cfiCond615) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker616 Using cfiCommon1
          CFI (cfiPicker616) NoFunction
          CFI (cfiPicker616) Picker
        MOVX      A,@DPTR
        MOV       R2,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R3,A
        RET
          CFI EndBlock cfiCond609
          CFI EndBlock cfiCond610
          CFI EndBlock cfiCond611
          CFI EndBlock cfiCond612
          CFI EndBlock cfiCond613
          CFI EndBlock cfiCond614
          CFI EndBlock cfiCond615
          CFI EndBlock cfiPicker616
// 1988 
// 1989 /*********************************************************************
// 1990  * Incoming message processor
// 1991  */
// 1992 
// 1993 /*********************************************************************
// 1994  * @fn          ZDP_IncomingData
// 1995  *
// 1996  * @brief       This function indicates the transfer of a data PDU (ASDU)
// 1997  *              from the APS sub-layer to the ZDO.
// 1998  *
// 1999  * @param       pData - Incoming Message
// 2000  *
// 2001  * @return      none
// 2002  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2003 void ZDP_IncomingData( afIncomingMSGPacket_t *pData )
ZDP_IncomingData:
          CFI Block cfiBlock617 Using cfiCommon0
          CFI Function ZDP_IncomingData
        CODE
// 2004 {
        FUNCALL ZDP_IncomingData, ZDO_SendMsgCBs
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 33, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 33, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_IncomingData, ZDApp_InMsgCB
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 33, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 33, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 23
        MOV       A,#-0x17
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 33)
// 2005   uint8 x = 0;
        MOV       R6,#0x0
// 2006   uint8 handled;
// 2007   zdoIncomingMsg_t inMsg;
// 2008 
// 2009   inMsg.srcAddr.addrMode = Addr16Bit;
        MOV       A,#0xa
        LCALL     ?XSTACK_DISP0_8
        MOV       A,#0x2
        LCALL     ?Subroutine15 & 0xFFFF
// 2010   inMsg.srcAddr.addr.shortAddr = pData->srcAddr.addr.shortAddr;
??CrossCallReturnLabel_12:
        INC       DPTR
        INC       DPTR
        LCALL     ??Subroutine131_0 & 0xFFFF
??CrossCallReturnLabel_276:
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine26 & 0xFFFF
// 2011   inMsg.wasBroadcast = pData->wasBroadcast;
??CrossCallReturnLabel_29:
        MOV       A,R2
        ADD       A,#0x15
        MOV       DPL,A
        CLR       A
        ADDC      A,R3
        MOV       DPH,A
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0xb
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine15 & 0xFFFF
// 2012   inMsg.clusterID = pData->clusterId;
??CrossCallReturnLabel_13:
        LCALL     ??Subroutine131_0 & 0xFFFF
??CrossCallReturnLabel_277:
        MOV       A,#0xc
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine26 & 0xFFFF
// 2013   inMsg.SecurityUse = pData->SecurityUse;
??CrossCallReturnLabel_30:
        MOV       A,R2
        ADD       A,#0x19
        MOV       DPL,A
        CLR       A
        ADDC      A,R3
        MOV       DPH,A
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0xe
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
// 2014 
// 2015   inMsg.asduLen = pData->cmd.DataLength-1;
        MOV       A,R2
        ADD       A,#0x20
        MOV       DPL,A
        CLR       A
        ADDC      A,R3
        MOV       DPH,A
        MOVX      A,@DPTR
        DEC       A
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x10
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
// 2016   inMsg.asdu = pData->cmd.Data+1;
        MOV       A,R2
        ADD       A,#0x22
        MOV       R0,A
        CLR       A
        ADDC      A,R3
        MOV       R1,A
        MOV       DPL,R0
        MOV       DPH,A
        MOVX      A,@DPTR
        ADD       A,#0x1
        MOV       R4,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,#0x0
        MOV       R5,A
        MOV       A,#0x13
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R4
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R5
        LCALL     ??Subroutine108_0 & 0xFFFF
// 2017   inMsg.TransSeq = pData->cmd.Data[0];
??CrossCallReturnLabel_259:
        LCALL     ??Subroutine113_0 & 0xFFFF
??CrossCallReturnLabel_176:
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0xf
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
// 2018   inMsg.macDestAddr = pData->macDestAddr;
        MOV       A,R2
        ADD       A,#0x12
        MOV       DPL,A
        CLR       A
        ADDC      A,R3
        MOV       DPH,A
        LCALL     ??Subroutine131_0 & 0xFFFF
??CrossCallReturnLabel_278:
        MOV       A,#0x11
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine26 & 0xFFFF
// 2019   inMsg.macSrcAddr = pData->macSrcAddr;
??CrossCallReturnLabel_31:
        MOV       A,R2
        ADD       A,#0x24
        MOV       DPL,A
        CLR       A
        ADDC      A,R3
        MOV       DPH,A
        LCALL     ??Subroutine131_0 & 0xFFFF
??CrossCallReturnLabel_279:
        MOV       A,#0x15
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine26 & 0xFFFF
// 2020 
// 2021   handled = ZDO_SendMsgCBs( &inMsg );
??CrossCallReturnLabel_32:
        ; Setup parameters for call to function ZDO_SendMsgCBs
        MOV       R2,?XSP + 0
        MOV       R3,?XSP + 1
        LCALL     `??ZDO_SendMsgCBs::?relay`; Banked call to: ZDO_SendMsgCBs
        MOV       A,R1
        MOV       R4,A
        SJMP      ??ZDP_IncomingData_0
// 2022 
// 2023 #if (defined MT_ZDO_CB_FUNC)
// 2024 #if !defined MT_TASK
// 2025   if (zgZdoDirectCB)
// 2026 #endif
// 2027   {
// 2028     MT_ZdoDirectCB( pData, &inMsg );
// 2029   }
// 2030 #endif
// 2031 
// 2032   while ( zdpMsgProcs[x].clusterID != 0xFFFF )
// 2033   {
// 2034     if ( zdpMsgProcs[x].clusterID == inMsg.clusterID )
// 2035     {
// 2036       zdpMsgProcs[x].pFn( &inMsg );
// 2037       return;
// 2038     }
// 2039     x++;
??ZDP_IncomingData_1:
        INC       R6
??ZDP_IncomingData_0:
        MOV       A,R6
        MOV       ?V0,A
        MOV       ?V1,#0x0
        MOV       A,#0x2
        MOV       R0,#?V0
        LCALL     ?S_SHL
        MOV       A,#zdpMsgProcs & 0xff
        ADD       A,?V0
        MOV       R0,A
        MOV       A,#(zdpMsgProcs >> 8) & 0xff
        ADDC      A,?V1
        MOV       R1,A
        MOV       DPL,R0
        MOV       DPH,A
        CLR       A
        MOVC      A,@A+DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x1
        MOVC      A,@A+DPTR
        MOV       DPH,A
        POP       DPL
          CFI CFA_SP SP+0
        MOV       R2,DPL
        MOV       R3,DPH
        MOV       A,#-0x1
        XRL       A,R2
        JNZ       ??ZDP_IncomingData_2
        MOV       A,#-0x1
        XRL       A,R3
??ZDP_IncomingData_2:
        JZ        ??ZDP_IncomingData_3
        MOV       A,#0xc
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        XRL       A,R2
        JNZ       ??ZDP_IncomingData_4
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R3
??ZDP_IncomingData_4:
        JNZ       ??ZDP_IncomingData_1
        ; Setup parameters for indirect call
        MOV       R2,?XSP + 0
        MOV       R3,?XSP + 1
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        INC       DPTR
        CLR       A
        MOVC      A,@A+DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x1
        MOVC      A,@A+DPTR
        MOV       DPH,A
        POP       DPL
          CFI CFA_SP SP+0
        LCALL     ?CALL_IND
        SJMP      ??ZDP_IncomingData_5
// 2040   }
// 2041 
// 2042   // Handle unhandled messages
// 2043   if ( !handled )
??ZDP_IncomingData_3:
        MOV       A,R4
        JNZ       ??ZDP_IncomingData_5
// 2044     ZDApp_InMsgCB( &inMsg );
        ; Setup parameters for call to function ZDApp_InMsgCB
        MOV       R2,?XSP + 0
        MOV       R3,?XSP + 1
        LCALL     `??ZDApp_InMsgCB::?relay`; Banked call to: ZDApp_InMsgCB
// 2045 }
??ZDP_IncomingData_5:
        MOV       A,#0x17
        LJMP      ??Subroutine104_0 & 0xFFFF
          CFI EndBlock cfiBlock617

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine55:
          CFI Block cfiCond618 Using cfiCommon0
          CFI Function ZDP_IEEEAddrReq
          CFI Conditional ??CrossCallReturnLabel_267
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond619 Using cfiCommon0
          CFI (cfiCond619) Function ZDP_MatchDescReq
          CFI (cfiCond619) Conditional ??CrossCallReturnLabel_268
          CFI (cfiCond619) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond619) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond619) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond619) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond619) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond619) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond619) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond619) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond619) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond619) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond619) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond619) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond619) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond619) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond619) CFA_SP SP+-2
          CFI (cfiCond619) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond620 Using cfiCommon0
          CFI (cfiCond620) Function ZDP_ServerDiscReq
          CFI (cfiCond620) Conditional ??CrossCallReturnLabel_269
          CFI (cfiCond620) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond620) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond620) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond620) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond620) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond620) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond620) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond620) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond620) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond620) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond620) CFA_SP SP+-2
          CFI (cfiCond620) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond621 Using cfiCommon0
          CFI (cfiCond621) Function ZDP_SimpleDescMsg
          CFI (cfiCond621) Conditional ??CrossCallReturnLabel_270
          CFI (cfiCond621) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond621) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond621) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond621) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond621) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond621) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond621) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond621) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond621) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond621) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond621) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond621) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond621) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond621) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond621) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond621) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond621) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond621) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond621) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond621) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond621) CFA_SP SP+-2
          CFI (cfiCond621) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker622 Using cfiCommon1
          CFI (cfiPicker622) NoFunction
          CFI (cfiPicker622) Picker
        MOV       A,R1
        MOV       R6,A
        MOV       DPTR,#ZDP_TmpBuf
          CFI EndBlock cfiCond618
          CFI EndBlock cfiCond619
          CFI EndBlock cfiCond620
          CFI EndBlock cfiCond621
          CFI EndBlock cfiPicker622
        REQUIRE ??Subroutine131_0
        ; // Fall through to label ??Subroutine131_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine131_0:
          CFI Block cfiCond623 Using cfiCommon0
          CFI Function ZDP_SendData
          CFI Conditional ??CrossCallReturnLabel_271
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond624 Using cfiCommon0
          CFI (cfiCond624) Function ZDP_GenericRsp
          CFI (cfiCond624) Conditional ??CrossCallReturnLabel_272
          CFI (cfiCond624) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond624) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond624) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond624) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond624) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond624) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond624) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond624) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond624) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond624) CFA_SP SP+-2
          CFI (cfiCond624) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond625 Using cfiCommon0
          CFI (cfiCond625) Function ZDP_EndDeviceBindReq
          CFI (cfiCond625) Conditional ??CrossCallReturnLabel_273
          CFI (cfiCond625) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond625) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond625) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond625) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond625) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond625) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond625) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond625) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond625) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond625) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond625) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond625) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond625) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond625) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond625) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond625) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond625) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond625) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond625) CFA_SP SP+-2
          CFI (cfiCond625) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond626 Using cfiCommon0
          CFI (cfiCond626) Function ZDP_MgmtPermitJoinReq
          CFI (cfiCond626) Conditional ??CrossCallReturnLabel_274
          CFI (cfiCond626) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond626) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond626) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond626) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond626) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond626) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond626) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond626) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond626) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond626) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond626) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond626) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond626) CFA_SP SP+-2
          CFI (cfiCond626) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond627 Using cfiCommon0
          CFI (cfiCond627) Function ZDO_SendMsgCBs
          CFI (cfiCond627) Conditional ??CrossCallReturnLabel_275
          CFI (cfiCond627) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond627) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond627) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond627) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond627) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond627) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond627) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond627) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond627) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond627) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond627) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond627) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond627) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond627) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond627) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond627) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond627) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond627) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond627) CFA_SP SP+-2
          CFI (cfiCond627) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond628 Using cfiCommon0
          CFI (cfiCond628) Function ZDP_IncomingData
          CFI (cfiCond628) Conditional ??CrossCallReturnLabel_276
          CFI (cfiCond628) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond628) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond628) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond628) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond628) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond628) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond628) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond628) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond628) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond628) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond628) CFA_SP SP+-2
          CFI (cfiCond628) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond629 Using cfiCommon0
          CFI (cfiCond629) Function ZDP_IncomingData
          CFI (cfiCond629) Conditional ??CrossCallReturnLabel_277
          CFI (cfiCond629) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond629) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond629) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond629) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond629) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond629) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond629) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond629) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond629) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond629) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond629) CFA_SP SP+-2
          CFI (cfiCond629) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond630 Using cfiCommon0
          CFI (cfiCond630) Function ZDP_IncomingData
          CFI (cfiCond630) Conditional ??CrossCallReturnLabel_278
          CFI (cfiCond630) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond630) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond630) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond630) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond630) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond630) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond630) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond630) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond630) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond630) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond630) CFA_SP SP+-2
          CFI (cfiCond630) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond631 Using cfiCommon0
          CFI (cfiCond631) Function ZDP_IncomingData
          CFI (cfiCond631) Conditional ??CrossCallReturnLabel_279
          CFI (cfiCond631) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond631) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond631) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond631) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond631) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond631) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond631) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond631) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond631) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond631) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond631) CFA_SP SP+-2
          CFI (cfiCond631) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond632 Using cfiCommon0
          CFI (cfiCond632) Function ZDP_IEEEAddrReq
          CFI (cfiCond632) Conditional ??CrossCallReturnLabel_267
          CFI (cfiCond632) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond632) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond632) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond632) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond632) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond632) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond632) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond632) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond632) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond632) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond632) CFA_SP SP+-2
          CFI (cfiCond632) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond633 Using cfiCommon0
          CFI (cfiCond633) Function ZDP_MatchDescReq
          CFI (cfiCond633) Conditional ??CrossCallReturnLabel_268
          CFI (cfiCond633) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond633) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond633) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond633) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond633) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond633) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond633) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond633) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond633) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond633) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond633) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond633) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond633) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond633) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond633) CFA_SP SP+-2
          CFI (cfiCond633) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond634 Using cfiCommon0
          CFI (cfiCond634) Function ZDP_ServerDiscReq
          CFI (cfiCond634) Conditional ??CrossCallReturnLabel_269
          CFI (cfiCond634) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond634) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond634) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond634) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond634) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond634) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond634) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond634) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond634) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond634) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond634) CFA_SP SP+-2
          CFI (cfiCond634) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond635 Using cfiCommon0
          CFI (cfiCond635) Function ZDP_SimpleDescMsg
          CFI (cfiCond635) Conditional ??CrossCallReturnLabel_270
          CFI (cfiCond635) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond635) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond635) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond635) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond635) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond635) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond635) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond635) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond635) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond635) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond635) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond635) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond635) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond635) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond635) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond635) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond635) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond635) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond635) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond635) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond635) CFA_SP SP+-2
          CFI (cfiCond635) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker636 Using cfiCommon1
          CFI (cfiPicker636) NoFunction
          CFI (cfiPicker636) Picker
        LCALL     ??Subroutine129_0 & 0xFFFF
??CrossCallReturnLabel_287:
        MOV       R1,A
        RET
          CFI EndBlock cfiCond623
          CFI EndBlock cfiCond624
          CFI EndBlock cfiCond625
          CFI EndBlock cfiCond626
          CFI EndBlock cfiCond627
          CFI EndBlock cfiCond628
          CFI EndBlock cfiCond629
          CFI EndBlock cfiCond630
          CFI EndBlock cfiCond631
          CFI EndBlock cfiCond632
          CFI EndBlock cfiCond633
          CFI EndBlock cfiCond634
          CFI EndBlock cfiCond635
          CFI EndBlock cfiPicker636

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine15:
          CFI Block cfiCond637 Using cfiCommon0
          CFI Function ZDP_MgmtNwkUpdateNotify
          CFI Conditional ??CrossCallReturnLabel_11
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond638 Using cfiCommon0
          CFI (cfiCond638) Function ZDP_IncomingData
          CFI (cfiCond638) Conditional ??CrossCallReturnLabel_12
          CFI (cfiCond638) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond638) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond638) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond638) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond638) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond638) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond638) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond638) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond638) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond638) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond638) CFA_SP SP+-2
          CFI (cfiCond638) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond639 Using cfiCommon0
          CFI (cfiCond639) Function ZDP_IncomingData
          CFI (cfiCond639) Conditional ??CrossCallReturnLabel_13
          CFI (cfiCond639) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond639) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond639) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond639) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond639) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond639) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond639) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond639) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond639) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond639) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond639) CFA_SP SP+-2
          CFI (cfiCond639) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiPicker640 Using cfiCommon1
          CFI (cfiPicker640) NoFunction
          CFI (cfiPicker640) Picker
        LCALL     ?Subroutine94 & 0xFFFF
??CrossCallReturnLabel_148:
        INC       DPTR
        RET
          CFI EndBlock cfiCond637
          CFI EndBlock cfiCond638
          CFI EndBlock cfiCond639
          CFI EndBlock cfiPicker640

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for ZDP_TmpBuf>`:
        DATA16
        DW ZDP_Buf + 1H

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??fillAndSend::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    fillAndSend

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_SendData::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_SendData

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_NWKAddrOfInterestReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_NWKAddrOfInterestReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_NwkAddrReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_NwkAddrReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_IEEEAddrReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_IEEEAddrReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_MatchDescReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_MatchDescReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_SimpleDescReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_SimpleDescReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_UserDescSet::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_UserDescSet

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_ServerDiscReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_ServerDiscReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_DeviceAnnce::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_DeviceAnnce

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_ParentAnnce::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_ParentAnnce

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zdpProcessAddrReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zdpProcessAddrReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_NodeDescMsg::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_NodeDescMsg

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_PowerDescMsg::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_PowerDescMsg

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_SimpleDescMsg::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_SimpleDescMsg

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_EPRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_EPRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_UserDescRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_UserDescRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_ServerDiscRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_ServerDiscRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_GenericRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_GenericRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_EndDeviceBindReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_EndDeviceBindReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_BindUnbindReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_BindUnbindReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_MgmtNwkDiscReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_MgmtNwkDiscReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_MgmtDirectJoinReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_MgmtDirectJoinReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_MgmtPermitJoinReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_MgmtPermitJoinReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_MgmtLeaveReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_MgmtLeaveReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_MgmtNwkUpdateReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_MgmtNwkUpdateReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_MgmtNwkDiscRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_MgmtNwkDiscRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_MgmtLqiRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_MgmtLqiRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_MgmtRtgRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_MgmtRtgRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_MgmtBindRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_MgmtBindRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_MgmtNwkUpdateNotify::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_MgmtNwkUpdateNotify

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_RegisterForZDOMsg::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_RegisterForZDOMsg

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_RemoveRegisteredCB::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_RemoveRegisteredCB

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_SendMsgCBs::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_SendMsgCBs

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_IncomingData::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_IncomingData

        END
// 2046 
// 2047 /*********************************************************************
// 2048 *********************************************************************/
// 2049 
// 
// 6 757 bytes in segment BANKED_CODE
//   210 bytes in segment BANK_RELAYS
//    29 bytes in segment CODE_C
//     2 bytes in segment XDATA_I
//     2 bytes in segment XDATA_ID
//    84 bytes in segment XDATA_Z
// 
//   241 bytes of CODE     memory
// 6 757 bytes of HUGECODE memory
//    86 bytes of XDATA    memory
//
//Errors: none
//Warnings: none
