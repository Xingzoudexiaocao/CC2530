###############################################################################
#
# IAR C/C++ Compiler V10.30.1.6000 for 8051               06/Nov/2019  12:21:35
# Copyright 2004-2018 IAR Systems AB.
# PC-locked license - IAR Embedded Workbench for 8051
#
#    Core               =  plain
#    Code model         =  banked
#    Data model         =  large
#    Calling convention =  xdata reentrant
#    Constant location  =  data_rom
#    Dptr setup         =  1,16
#                          
#    Source file        =  
#        C:\Users\hhhho\Desktop\毕设\Z-Stack1.2.2a-spp-v001\Z-Stack1.2.2a-spp-v001\Projects\zstack\Prj\Source\iic.c
#    Command line       =  
#        -f C:\Users\hhhho\AppData\Local\Temp\EW6969.tmp
#        (C:\Users\hhhho\Desktop\毕设\Z-Stack1.2.2a-spp-v001\Z-Stack1.2.2a-spp-v001\Projects\zstack\Prj\Source\iic.c
#        -D ZTOOL_P1 -D SECURE=1 -D xNV_INIT -D xNV_RESTORE -D
#        LCD_SUPPORTED=FALSE -D MULTICAST_ENABLED=FALSE -D FEATURE_SYSTEM_STATS
#        -lC
#        C:\Users\hhhho\Desktop\毕设\Z-Stack1.2.2a-spp-v001\Z-Stack1.2.2a-spp-v001\Projects\zstack\Prj\SampleApp\CC2530DB\CoordinatorEB\List
#        -lA
#        C:\Users\hhhho\Desktop\毕设\Z-Stack1.2.2a-spp-v001\Z-Stack1.2.2a-spp-v001\Projects\zstack\Prj\SampleApp\CC2530DB\CoordinatorEB\List
#        --diag_suppress Pe001,Pa010 -o
#        C:\Users\hhhho\Desktop\毕设\Z-Stack1.2.2a-spp-v001\Z-Stack1.2.2a-spp-v001\Projects\zstack\Prj\SampleApp\CC2530DB\CoordinatorEB\Obj
#        -e --debug --core=plain --dptr=16,1 --data_model=large
#        --code_model=banked --calling_convention=xdata_reentrant
#        --place_constants=data_rom --nr_virtual_regs 16 -f
#        C:\Users\hhhho\Desktop\毕设\Z-Stack1.2.2a-spp-v001\Z-Stack1.2.2a-spp-v001\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\..\Tools\CC2530DB\f8wCoord.cfg
#        (-DCPU32MHZ -DROOT=__near_func -DMAC_CFG_APP_PENDING_QUEUE=TRUE
#        -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8 -DMAC_CFG_RX_MAX=5
#        -DZDO_COORDINATOR -DRTR_NWK) -f
#        C:\Users\hhhho\Desktop\毕设\Z-Stack1.2.2a-spp-v001\Z-Stack1.2.2a-spp-v001\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg
#        (-DZIGBEEPRO -DSECURE=1 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR
#        -DDEFAULT_CHANLIST=0x00000800 -DZDAPP_CONFIG_PAN_ID=0xFFFF
#        -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MASK=0x007F
#        -DBEACON_REQUEST_DELAY=100 -DBEACON_REQ_DELAY_MASK=0x00FF
#        -DLINK_STATUS_JITTER_MASK=0x007F -DROUTE_EXPIRY_TIME=30
#        -DAPSC_ACK_WAIT_DURATION_POLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7
#        -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3
#        -DNWK_MAX_DATA_RETRIES=2 -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9
#        -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40 -DNWK_MAX_BINDING_ENTRIES=4
#        -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07,
#        0x09, 0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C,
#        0x0D}" -DMAC_MAX_FRAME_SIZE=116 -DZDNWKMGR_MIN_TRANSMISSIONS=20
#        "-DCONST=const __code" -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE
#        -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100
#        -DREJOIN_POLL_RATE=440 -DREJOIN_BACKOFF=900000 -DREJOIN_SCAN=900000)
#        -f
#        C:\Users\hhhho\Desktop\毕设\Z-Stack1.2.2a-spp-v001\Z-Stack1.2.2a-spp-v001\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\..\Tools\CC2530DB\f8wZCL.cfg
#        -I
#        C:\Users\hhhho\Desktop\毕设\Z-Stack1.2.2a-spp-v001\Z-Stack1.2.2a-spp-v001\Projects\zstack\Prj\SampleApp\CC2530DB\
#        -I
#        C:\Users\hhhho\Desktop\毕设\Z-Stack1.2.2a-spp-v001\Z-Stack1.2.2a-spp-v001\Projects\zstack\Prj\SampleApp\CC2530DB\..\Source\
#        -I
#        C:\Users\hhhho\Desktop\毕设\Z-Stack1.2.2a-spp-v001\Z-Stack1.2.2a-spp-v001\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\Source\
#        -I
#        C:\Users\hhhho\Desktop\毕设\Z-Stack1.2.2a-spp-v001\Z-Stack1.2.2a-spp-v001\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\..\ZMain\TI2530DB\
#        -I
#        C:\Users\hhhho\Desktop\毕设\Z-Stack1.2.2a-spp-v001\Z-Stack1.2.2a-spp-v001\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\..\..\..\Components\hal\include\
#        -I
#        C:\Users\hhhho\Desktop\毕设\Z-Stack1.2.2a-spp-v001\Z-Stack1.2.2a-spp-v001\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\
#        -I
#        C:\Users\hhhho\Desktop\毕设\Z-Stack1.2.2a-spp-v001\Z-Stack1.2.2a-spp-v001\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\..\..\..\Components\mac\include\
#        -I
#        C:\Users\hhhho\Desktop\毕设\Z-Stack1.2.2a-spp-v001\Z-Stack1.2.2a-spp-v001\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\..\..\..\Components\mac\high_level\
#        -I
#        C:\Users\hhhho\Desktop\毕设\Z-Stack1.2.2a-spp-v001\Z-Stack1.2.2a-spp-v001\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\
#        -I
#        C:\Users\hhhho\Desktop\毕设\Z-Stack1.2.2a-spp-v001\Z-Stack1.2.2a-spp-v001\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\single_chip\
#        -I
#        C:\Users\hhhho\Desktop\毕设\Z-Stack1.2.2a-spp-v001\Z-Stack1.2.2a-spp-v001\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\..\..\..\Components\mt\
#        -I
#        C:\Users\hhhho\Desktop\毕设\Z-Stack1.2.2a-spp-v001\Z-Stack1.2.2a-spp-v001\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\..\..\..\Components\osal\include\
#        -I
#        C:\Users\hhhho\Desktop\毕设\Z-Stack1.2.2a-spp-v001\Z-Stack1.2.2a-spp-v001\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\..\..\..\Components\services\saddr\
#        -I
#        C:\Users\hhhho\Desktop\毕设\Z-Stack1.2.2a-spp-v001\Z-Stack1.2.2a-spp-v001\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\..\..\..\Components\services\sdata\
#        -I
#        C:\Users\hhhho\Desktop\毕设\Z-Stack1.2.2a-spp-v001\Z-Stack1.2.2a-spp-v001\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\..\..\..\Components\stack\af\
#        -I
#        C:\Users\hhhho\Desktop\毕设\Z-Stack1.2.2a-spp-v001\Z-Stack1.2.2a-spp-v001\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\..\..\..\Components\stack\nwk\
#        -I
#        C:\Users\hhhho\Desktop\毕设\Z-Stack1.2.2a-spp-v001\Z-Stack1.2.2a-spp-v001\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\..\..\..\Components\stack\sapi\
#        -I
#        C:\Users\hhhho\Desktop\毕设\Z-Stack1.2.2a-spp-v001\Z-Stack1.2.2a-spp-v001\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\..\..\..\Components\stack\sec\
#        -I
#        C:\Users\hhhho\Desktop\毕设\Z-Stack1.2.2a-spp-v001\Z-Stack1.2.2a-spp-v001\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\..\..\..\Components\stack\sys\
#        -I
#        C:\Users\hhhho\Desktop\毕设\Z-Stack1.2.2a-spp-v001\Z-Stack1.2.2a-spp-v001\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\..\..\..\Components\stack\zcl\
#        -I
#        C:\Users\hhhho\Desktop\毕设\Z-Stack1.2.2a-spp-v001\Z-Stack1.2.2a-spp-v001\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\..\..\..\Components\stack\zdo\
#        -I
#        C:\Users\hhhho\Desktop\毕设\Z-Stack1.2.2a-spp-v001\Z-Stack1.2.2a-spp-v001\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\..\..\..\Components\zmac\
#        -I
#        C:\Users\hhhho\Desktop\毕设\Z-Stack1.2.2a-spp-v001\Z-Stack1.2.2a-spp-v001\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\..\..\..\Components\zmac\f8w\
#        -Ohz --require_prototypes)
#    Locale             =  Chinese (Simplified)_CHN.936
#    List file          =  
#        C:\Users\hhhho\Desktop\毕设\Z-Stack1.2.2a-spp-v001\Z-Stack1.2.2a-spp-v001\Projects\zstack\Prj\SampleApp\CC2530DB\CoordinatorEB\List\iic.lst
#    Object file        =  
#        C:\Users\hhhho\Desktop\毕设\Z-Stack1.2.2a-spp-v001\Z-Stack1.2.2a-spp-v001\Projects\zstack\Prj\SampleApp\CC2530DB\CoordinatorEB\Obj\iic.r51
#
###############################################################################

C:\Users\hhhho\Desktop\毕设\Z-Stack1.2.2a-spp-v001\Z-Stack1.2.2a-spp-v001\Projects\zstack\Prj\Source\iic.c
      1          
      2          /*描述：显示加速度计和陀螺仪的6位原始数据
      3          ****************************************/
      4          #include "ioCC2530.h"

   \                                 In  segment SFR_AN, at 0x80
   \   union <unnamed> volatile __sfr _A_P0
   \                     _A_P0:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xd0
   \   union <unnamed> volatile __sfr _A_PSW
   \                     _A_PSW:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xf3
   \   unsigned char volatile __sfr P0SEL
   \                     P0SEL:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xfd
   \   unsigned char volatile __sfr P0DIR
   \                     P0DIR:
   \   000000                DS 1
      5          #include "iic.h"
      6          #include "OnBoard.h"
      7          #include "hal_types.h"
      8           
      9          
     10          /*
     11            引脚定义
     12          */
     13          #define SDA P0_4
     14          #define SCL P0_5
     15          
     16          
     17          
     18          
     19           
     20          
     21           
     22           
     23           
     24           

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     25          void ALLInit(void)
   \                     ALLInit:
     26          {
   \   000000   C082         PUSH      DPL
   \   000002   C083         PUSH      DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
     27          //   Init_IO();
     28             InitMPU6050();
   \   000004                ; Setup parameters for call to function InitMPU6050
   \   000004   12....       LCALL     `??InitMPU6050::?relay`; Banked call to: InitMPU6050
     29          }
   \   000007   80..         SJMP      ?Subroutine0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   D083         POP       DPH
   \   000002   D082         POP       DPL
   \   000004   02....       LJMP      ?BRET
     30           
     31           
     32          /****************us延时函数 32M晶振 单周期MCU********************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     33          void delay_us(unsigned int u)
   \                     delay_us:
     34          {
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000   74F6         MOV       A,#-0xa
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
     35             u=4*u;
     36             MicroWait(u);
   \   000005                ; Setup parameters for call to function Onboard_wait
   \   000005   8A..         MOV       ?V0,R2
   \   000007   8B..         MOV       ?V1,R3
   \   000009   7402         MOV       A,#0x2
   \   00000B   78..         MOV       R0,#?V0
   \   00000D   12....       LCALL     ?S_SHL
   \   000010   AA..         MOV       R2,?V0
   \   000012   AB..         MOV       R3,?V1
   \   000014   12....       LCALL     `??Onboard_wait::?relay`; Banked call to: Onboard_wait
     37          }
   \   000017   7F02         MOV       R7,#0x2
   \   000019   02....       LJMP      ?BANKED_LEAVE_XDATA
     38           
     39           
     40          /*****************************MPU6050*******************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     41          void WriteSDA_0(void) 
   \                     WriteSDA_0:
     42          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
     43              P0SEL&=~0x10;
   \   000000   12....       LCALL     ?Subroutine5 & 0xFFFF
     44              P0DIR|=0x10;
     45              SDA=0;
   \                     ??CrossCallReturnLabel_5:
   \   000003   C284         CLR       0x80.4
     46          }
   \   000005   02....       LJMP      ?BRET
   \   000008                REQUIRE P0SEL
   \   000008                REQUIRE P0DIR
   \   000008                REQUIRE _A_P0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine5:
   \   000000   53F3EF       ANL       0xf3,#0xef
   \   000003   43FD10       ORL       0xfd,#0x10
   \   000006   22           RET
     47           
     48           

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     49          void WriteSDA_1(void) 
   \                     WriteSDA_1:
     50          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
     51              P0SEL&=~0x10;
   \   000000   12....       LCALL     ?Subroutine5 & 0xFFFF
     52              P0DIR|=0x10;
     53              SDA=1;
   \                     ??CrossCallReturnLabel_6:
   \   000003   D284         SETB      0x80.4
     54          }
   \   000005   02....       LJMP      ?BRET
   \   000008                REQUIRE P0SEL
   \   000008                REQUIRE P0DIR
   \   000008                REQUIRE _A_P0
     55              

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     56          void WriteSCL_0(void)  
   \                     WriteSCL_0:
     57          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
     58              P0SEL&=~0x20;
   \   000000   53F3DF       ANL       0xf3,#0xdf
     59              P0DIR|=0x20;
   \   000003   43FD20       ORL       0xfd,#0x20
     60              SCL=0;
   \   000006   C285         CLR       0x80.5
     61          }
   \   000008   02....       LJMP      ?BRET
   \   00000B                REQUIRE P0SEL
   \   00000B                REQUIRE P0DIR
   \   00000B                REQUIRE _A_P0
     62           
     63           

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     64          void WriteSCL_1(void)  
   \                     WriteSCL_1:
     65          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
     66              P0SEL&=~0x20;
   \   000000   53F3DF       ANL       0xf3,#0xdf
     67              P0DIR|=0x20;
   \   000003   43FD20       ORL       0xfd,#0x20
     68              SCL=1;
   \   000006   D285         SETB      0x80.5
     69          }
   \   000008   02....       LJMP      ?BRET
   \   00000B                REQUIRE P0SEL
   \   00000B                REQUIRE P0DIR
   \   00000B                REQUIRE _A_P0
     70          
     71           

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     72          void ReadSDA(void)//sda输入,=0
   \                     ReadSDA:
     73          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
     74              P0SEL&=~0x10;P0DIR&=~0x10;
   \   000000   53F3EF       ANL       0xf3,#0xef
   \   000003   53FDEF       ANL       0xfd,#0xef
     75          }
   \   000006   02....       LJMP      ?BRET
   \   000009                REQUIRE P0SEL
   \   000009                REQUIRE P0DIR
     76          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     77          void SDA_OUT(void)//sda输出,=1
   \                     SDA_OUT:
     78          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
     79              P0SEL&=~0x10;
   \   000000   12....       LCALL     ?Subroutine5 & 0xFFFF
     80              P0DIR|=0x10;
     81          }
   \                     ??CrossCallReturnLabel_7:
   \   000003   02....       LJMP      ?BRET
   \   000006                REQUIRE P0SEL
   \   000006                REQUIRE P0DIR
     82           
     83          //void Init_IO(void)
     84          //{
     85          //  P0DIR|=0xc0;
     86          //  P0SEL&=0x3f;
     87          //}
     88          // 
     89          /**************************************
     90          起始信号
     91          **************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     92          void MPU6050_Start(void)  
   \                     MPU6050_Start:
     93          {
   \   000000   C082         PUSH      DPL
   \   000002   C083         PUSH      DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
     94              WriteSDA_1();
   \   000004                ; Setup parameters for call to function WriteSDA_1
   \   000004   12....       LCALL     `??WriteSDA_1::?relay`; Banked call to: WriteSDA_1
     95              WriteSCL_1();
   \   000007                ; Setup parameters for call to function WriteSCL_1
   \   000007   12....       LCALL     ?Subroutine3 & 0xFFFF
     96              delay_us(5);
     97              WriteSDA_0();
   \                     ??CrossCallReturnLabel_0:
   \   00000A                ; Setup parameters for call to function WriteSDA_0
   \   00000A   12....       LCALL     `??WriteSDA_0::?relay`; Banked call to: WriteSDA_0
     98              delay_us(5);
   \   00000D                ; Setup parameters for call to function delay_us
   \   00000D   12....       LCALL     ??Subroutine6_0 & 0xFFFF
     99              WriteSCL_0();
    100              delay_us(5);
    101          }
   \                     ??CrossCallReturnLabel_10:
   \   000010   80..         SJMP      ?Subroutine0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine3:
   \   000000   12....       LCALL     `??WriteSCL_1::?relay`; Banked call to: WriteSCL_1
   \   000003                ; Setup parameters for call to function delay_us
   \   000003                ; Setup parameters for call to function delay_us
   \   000003                ; Setup parameters for call to function delay_us
   \   000003   7A05         MOV       R2,#0x5
   \   000005   7B00         MOV       R3,#0x0
   \   000007   12....       LCALL     `??delay_us::?relay`; Banked call to: delay_us
   \   00000A   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine6_0:
   \   000000   7A05         MOV       R2,#0x5
   \   000002   7B00         MOV       R3,#0x0
   \   000004   12....       LCALL     `??delay_us::?relay`; Banked call to: delay_us
   \   000007                ; Setup parameters for call to function WriteSCL_0
   \   000007                ; Setup parameters for call to function WriteSCL_0
   \   000007                ; Setup parameters for call to function WriteSCL_0
   \   000007                REQUIRE ??Subroutine7_0
   \   000007                ; // Fall through to label ??Subroutine7_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine7_0:
   \   000000   12....       LCALL     `??WriteSCL_0::?relay`; Banked call to: WriteSCL_0
   \   000003                ; Setup parameters for call to function delay_us
   \   000003                ; Setup parameters for call to function delay_us
   \   000003                ; Setup parameters for call to function delay_us
   \   000003                ; Setup parameters for call to function delay_us
   \   000003   7A05         MOV       R2,#0x5
   \   000005   7B00         MOV       R3,#0x0
   \   000007   12....       LCALL     `??delay_us::?relay`; Banked call to: delay_us
   \   00000A   22           RET
    102           
    103           
    104          /**************************************
    105          停止信号
    106          **************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    107          void MPU6050_Stop()  
   \                     MPU6050_Stop:
    108          {    
   \   000000   C082         PUSH      DPL
   \   000002   C083         PUSH      DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    109             WriteSDA_0();
   \   000004                ; Setup parameters for call to function WriteSDA_0
   \   000004   12....       LCALL     `??WriteSDA_0::?relay`; Banked call to: WriteSDA_0
    110             WriteSCL_1();
   \   000007                ; Setup parameters for call to function WriteSCL_1
   \   000007   12....       LCALL     ?Subroutine3 & 0xFFFF
    111             delay_us(5);
    112             WriteSDA_1();
   \                     ??CrossCallReturnLabel_1:
   \   00000A                ; Setup parameters for call to function WriteSDA_1
   \   00000A   12....       LCALL     `??WriteSDA_1::?relay`; Banked call to: WriteSDA_1
    113          }
   \   00000D                REQUIRE ?Subroutine0
   \   00000D                ; // Fall through to label ?Subroutine0
    114           
    115           
    116          //I2C发送应答信号
    117          //入口参数:ack (0:ACK 1:NAK)

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    118          void MPU6050_SendACK(unsigned char ack)
   \                     MPU6050_SendACK:
    119          {
   \   000000   74F7         MOV       A,#-0x9
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV       A,R1
    120              
    121              SDA=ack;                     //写应答信号
   \   000006   A2E0         MOV       C,0xE0 /* A   */.0
   \   000008   9284         MOV       0x80.4,C
    122              WriteSCL_1();                   //拉高时钟线
   \   00000A                ; Setup parameters for call to function WriteSCL_1
   \   00000A   12....       LCALL     ?Subroutine2 & 0xFFFF
    123              delay_us(5);//Delay5us();    //延时
    124              WriteSCL_0();                   //拉低时钟线
    125              delay_us(5);//Delay5us();    //延时
    126          }
   \                     ??CrossCallReturnLabel_8:
   \   00000D   80..         SJMP      ??Subroutine8_0
   \   00000F                REQUIRE _A_P0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine2:
   \   000000   12....       LCALL     `??WriteSCL_1::?relay`; Banked call to: WriteSCL_1
   \   000003                ; Setup parameters for call to function delay_us
   \   000003                ; Setup parameters for call to function delay_us
   \   000003                REQUIRE ??Subroutine6_0
   \   000003                ; // Fall through to label ??Subroutine6_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine8_0:
   \   000000   7F01         MOV       R7,#0x1
   \   000002   02....       LJMP      ?BANKED_LEAVE_XDATA
    127           
    128           
    129          /**************************************
    130          发送应答信号
    131          **************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    132          unsigned char MPU6050_RecvACK()
   \                     MPU6050_RecvACK:
    133          {
   \   000000   C082         PUSH      DPL
   \   000002   C083         PUSH      DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    134              ReadSDA();
   \   000004                ; Setup parameters for call to function ReadSDA
   \   000004   12....       LCALL     `??ReadSDA::?relay`; Banked call to: ReadSDA
    135              WriteSCL_1();                       //拉高时钟线
   \   000007                ; Setup parameters for call to function WriteSCL_1
   \   000007   12....       LCALL     ?Subroutine3 & 0xFFFF
    136              delay_us(5);//Delay5us();    //延时
    137              CY=SDA;                      //读应答信号
   \                     ??CrossCallReturnLabel_2:
   \   00000A   A284         MOV       C,0x80.4
   \   00000C   92D7         MOV       0xd0.7,C
    138              WriteSCL_0();                       //拉低时钟线
   \   00000E                ; Setup parameters for call to function WriteSCL_0
   \   00000E   12....       LCALL     ??Subroutine7_0 & 0xFFFF
    139              delay_us(5);//Delay5us();    //延时
    140              P0DIR|=0x00;
   \                     ??CrossCallReturnLabel_11:
   \   000011   85FDFD       MOV       0xfd,0xfd
    141              return CY;
   \   000014   A2D7         MOV       C,0xd0.7
   \   000016   E4           CLR       A
   \   000017   33           RLC       A
   \   000018   F9           MOV       R1,A
   \   000019   80..         SJMP      ?Subroutine0
   \   00001B                REQUIRE _A_PSW
   \   00001B                REQUIRE _A_P0
   \   00001B                REQUIRE P0DIR
    142          }
    143           
    144           
    145          /**************************************
    146          向IIC总线发送一个字节数据
    147          **************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    148          void MPU6050_SendByte(unsigned char data)
   \                     MPU6050_SendByte:
    149          {
   \   000000   74F7         MOV       A,#-0x9
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV       A,R1
   \   000006   FF           MOV       R7,A
    150              unsigned char i;
    151              SDA_OUT();
   \   000007                ; Setup parameters for call to function SDA_OUT
   \   000007   12....       LCALL     `??SDA_OUT::?relay`; Banked call to: SDA_OUT
    152              
    153              for(i=0;i<8;i++)         //8位计数器
   \   00000A   7E08         MOV       R6,#0x8
    154              {       
    155                  if(data&0x80)
   \                     ??MPU6050_SendByte_0:
   \   00000C   EF           MOV       A,R7
   \   00000D   A2E7         MOV       C,0xE0 /* A   */.7
   \   00000F   5005         JNC       ??MPU6050_SendByte_1
    156                  {WriteSDA_1();}
   \   000011                ; Setup parameters for call to function WriteSDA_1
   \   000011   12....       LCALL     `??WriteSDA_1::?relay`; Banked call to: WriteSDA_1
   \   000014   8003         SJMP      ??MPU6050_SendByte_2
    157                  else 
    158                  {WriteSDA_0();}
   \                     ??MPU6050_SendByte_1:
   \   000016                ; Setup parameters for call to function WriteSDA_0
   \   000016   12....       LCALL     `??WriteSDA_0::?relay`; Banked call to: WriteSDA_0
    159                  
    160                  data<<=1;
   \                     ??MPU6050_SendByte_2:
   \   000019   EF           MOV       A,R7
   \   00001A   C3           CLR       C
   \   00001B   33           RLC       A
   \   00001C   FF           MOV       R7,A
    161                  WriteSCL_1();            //拉高时钟线
   \   00001D                ; Setup parameters for call to function WriteSCL_1
   \   00001D   12....       LCALL     ?Subroutine2 & 0xFFFF
    162                  delay_us(5);          //延时
    163                  WriteSCL_0();            //拉低时钟线
    164                  delay_us(5);          //延时
    165              }
   \                     ??CrossCallReturnLabel_9:
   \   000020   1E           DEC       R6
   \   000021   EE           MOV       A,R6
   \   000022   70E8         JNZ       ??MPU6050_SendByte_0
    166              MPU6050_RecvACK();
   \   000024                ; Setup parameters for call to function MPU6050_RecvACK
   \   000024   12....       LCALL     `??MPU6050_RecvACK::?relay`; Banked call to: MPU6050_RecvACK
    167          }
   \   000027   80..         SJMP      ??Subroutine8_0
    168           
    169           
    170          /**************************************
    171          从IIC总线接收一个字节数据
    172          **************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   EE           MOV       A,R6
   \   000001   F9           MOV       R1,A
   \   000002                REQUIRE ??Subroutine8_0
   \   000002                ; // Fall through to label ??Subroutine8_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    173          unsigned char MPU6050_RecvByte()
   \                     MPU6050_RecvByte:
    174          {
   \   000000   74F7         MOV       A,#-0x9
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
    175              unsigned char i;
    176              unsigned char dat = 0;
   \   000005   7E00         MOV       R6,#0x0
    177              WriteSDA_1();                  //使能内部上拉,准备读取数据,
   \   000007                ; Setup parameters for call to function WriteSDA_1
   \   000007   12....       LCALL     `??WriteSDA_1::?relay`; Banked call to: WriteSDA_1
    178              for (i=0; i<8; i++)         //8位计数器
   \   00000A   7F08         MOV       R7,#0x8
    179              {
    180                  dat <<= 1;
    181                  SCL = 1;                //拉高时钟线
   \                     ??MPU6050_RecvByte_0:
   \   00000C   D285         SETB      0x80.5
    182                  delay_us(5);                 //延时
   \   00000E                ; Setup parameters for call to function delay_us
   \   00000E   7A05         MOV       R2,#0x5
   \   000010   7B00         MOV       R3,#0x0
   \   000012   12....       LCALL     `??delay_us::?relay`; Banked call to: delay_us
    183                  dat |= SDA;             //读数据               
   \   000015   A284         MOV       C,0x80.4
   \   000017   E4           CLR       A
   \   000018   33           RLC       A
   \   000019   F8           MOV       R0,A
   \   00001A   EE           MOV       A,R6
   \   00001B   33           RLC       A
   \   00001C   48           ORL       A,R0
   \   00001D   FE           MOV       R6,A
    184                  SCL = 0;                //拉低时钟线
   \   00001E   C285         CLR       0x80.5
    185                   delay_us(5);                 //延时
   \   000020                ; Setup parameters for call to function delay_us
   \   000020   7A05         MOV       R2,#0x5
   \   000022   7B00         MOV       R3,#0x0
   \   000024   12....       LCALL     `??delay_us::?relay`; Banked call to: delay_us
    186              }
   \   000027   DFE3         DJNZ      R7,??MPU6050_RecvByte_0
    187              return dat;
   \   000029   80..         SJMP      ?Subroutine1
   \   00002B                REQUIRE _A_P0
    188           
    189          }
    190           
    191           
    192          //******单字节写入*******************************************

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    193          void Single_WriteI2C(unsigned char REG_Address,unsigned char REG_data)
   \                     Single_WriteI2C:
    194          {
   \   000000   74F7         MOV       A,#-0x9
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV       A,R1
   \   000006   FF           MOV       R7,A
   \   000007   EA           MOV       A,R2
   \   000008   FE           MOV       R6,A
    195              MPU6050_Start();                  //起始信号
   \   000009                ; Setup parameters for call to function MPU6050_Start
   \   000009   12....       LCALL     ?Subroutine4 & 0xFFFF
    196              MPU6050_SendByte(0xD0);   //发送设备地址+写信号
    197              MPU6050_SendByte(REG_Address);    //内部寄存器地址，
    198              MPU6050_SendByte(REG_data);       //内部寄存器数据，
   \                     ??CrossCallReturnLabel_3:
   \   00000C                ; Setup parameters for call to function MPU6050_SendByte
   \   00000C   EE           MOV       A,R6
   \   00000D   F9           MOV       R1,A
   \   00000E   12....       LCALL     `??MPU6050_SendByte::?relay`; Banked call to: MPU6050_SendByte
    199              MPU6050_Stop();                   //发送停止信号
   \   000011                ; Setup parameters for call to function MPU6050_Stop
   \   000011   12....       LCALL     `??MPU6050_Stop::?relay`; Banked call to: MPU6050_Stop
    200          }
   \   000014   80..         SJMP      ??Subroutine8_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine4:
   \   000000   12....       LCALL     `??MPU6050_Start::?relay`; Banked call to: MPU6050_Start
   \   000003                ; Setup parameters for call to function MPU6050_SendByte
   \   000003                ; Setup parameters for call to function MPU6050_SendByte
   \   000003   79D0         MOV       R1,#-0x30
   \   000005   12....       LCALL     `??MPU6050_SendByte::?relay`; Banked call to: MPU6050_SendByte
   \   000008                ; Setup parameters for call to function MPU6050_SendByte
   \   000008                ; Setup parameters for call to function MPU6050_SendByte
   \   000008   EF           MOV       A,R7
   \   000009   F9           MOV       R1,A
   \   00000A   12....       LCALL     `??MPU6050_SendByte::?relay`; Banked call to: MPU6050_SendByte
   \   00000D   22           RET
    201           
    202           
    203          //********单字节读取*****************************************

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    204          unsigned char Single_ReadI2C(unsigned char REG_Address)
   \                     Single_ReadI2C:
    205          {
   \   000000   74F7         MOV       A,#-0x9
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV       A,R1
   \   000006   FF           MOV       R7,A
    206          unsigned char REG_data;
    207          MPU6050_Start();                   //起始信号
   \   000007                ; Setup parameters for call to function MPU6050_Start
   \   000007   12....       LCALL     ?Subroutine4 & 0xFFFF
    208          MPU6050_SendByte(0xD0);    //发送设备地址+写信号
    209          MPU6050_SendByte(REG_Address);     //发送存储单元地址，从0开始	
    210          MPU6050_Start();                   //起始信号
   \                     ??CrossCallReturnLabel_4:
   \   00000A                ; Setup parameters for call to function MPU6050_Start
   \   00000A   12....       LCALL     `??MPU6050_Start::?relay`; Banked call to: MPU6050_Start
    211          MPU6050_SendByte(0xD0+1);  //发送设备地址+读信号
   \   00000D                ; Setup parameters for call to function MPU6050_SendByte
   \   00000D   79D1         MOV       R1,#-0x2f
   \   00000F   12....       LCALL     `??MPU6050_SendByte::?relay`; Banked call to: MPU6050_SendByte
    212          REG_data=MPU6050_RecvByte();       //读出寄存器数据
   \   000012                ; Setup parameters for call to function MPU6050_RecvByte
   \   000012   12....       LCALL     `??MPU6050_RecvByte::?relay`; Banked call to: MPU6050_RecvByte
   \   000015   E9           MOV       A,R1
   \   000016   FE           MOV       R6,A
    213          MPU6050_SendACK(1);                //接收应答信号
   \   000017                ; Setup parameters for call to function MPU6050_SendACK
   \   000017   7901         MOV       R1,#0x1
   \   000019   12....       LCALL     `??MPU6050_SendACK::?relay`; Banked call to: MPU6050_SendACK
    214          MPU6050_Stop();                    //停止信号
   \   00001C                ; Setup parameters for call to function MPU6050_Stop
   \   00001C   12....       LCALL     `??MPU6050_Stop::?relay`; Banked call to: MPU6050_Stop
    215          return REG_data;
   \   00001F   80..         SJMP      ?Subroutine1
    216          }
    217          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    218          void InitMPU6050()
   \                     InitMPU6050:
    219          {
   \   000000   C082         PUSH      DPL
   \   000002   C083         PUSH      DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    220          	Single_WriteI2C(PWR_MGMT_1, 0x00);	//解除休眠状态
   \   000004                ; Setup parameters for call to function Single_WriteI2C
   \   000004   7A00         MOV       R2,#0x0
   \   000006   796B         MOV       R1,#0x6b
   \   000008   12....       LCALL     `??Single_WriteI2C::?relay`; Banked call to: Single_WriteI2C
    221          	Single_WriteI2C(SMPLRT_DIV, 0x07);
   \   00000B                ; Setup parameters for call to function Single_WriteI2C
   \   00000B   7A07         MOV       R2,#0x7
   \   00000D   7919         MOV       R1,#0x19
   \   00000F   12....       LCALL     `??Single_WriteI2C::?relay`; Banked call to: Single_WriteI2C
    222          	Single_WriteI2C(CONFIG, 0x06);
   \   000012                ; Setup parameters for call to function Single_WriteI2C
   \   000012   7A06         MOV       R2,#0x6
   \   000014   791A         MOV       R1,#0x1a
   \   000016   12....       LCALL     `??Single_WriteI2C::?relay`; Banked call to: Single_WriteI2C
    223          	Single_WriteI2C(GYRO_CONFIG, 0x18);
   \   000019                ; Setup parameters for call to function Single_WriteI2C
   \   000019   7A18         MOV       R2,#0x18
   \   00001B   791B         MOV       R1,#0x1b
   \   00001D   12....       LCALL     `??Single_WriteI2C::?relay`; Banked call to: Single_WriteI2C
    224          	Single_WriteI2C(ACCEL_CONFIG, 0x01);
   \   000020                ; Setup parameters for call to function Single_WriteI2C
   \   000020   7A01         MOV       R2,#0x1
   \   000022   791C         MOV       R1,#0x1c
   \   000024   12....       LCALL     `??Single_WriteI2C::?relay`; Banked call to: Single_WriteI2C
    225          }
   \   000027   02....       LJMP      ?Subroutine0 & 0xFFFF
    226          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    227          int GetData(unsigned char REG_Address)
   \                     GetData:
    228          {
   \   000000                REQUIRE ?V0
   \   000000   74F7         MOV       A,#-0x9
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   89..         MOV       ?V0,R1
    229          	unsigned char H,L;
    230          	H=Single_ReadI2C(REG_Address);
   \   000007                ; Setup parameters for call to function Single_ReadI2C
   \   000007   12....       LCALL     `??Single_ReadI2C::?relay`; Banked call to: Single_ReadI2C
   \   00000A   E9           MOV       A,R1
    231          	L=Single_ReadI2C(REG_Address+1);
    232          	return (H<<8)+L;   //合成数据
   \   00000B   FF           MOV       R7,A
   \   00000C                ; Setup parameters for call to function Single_ReadI2C
   \   00000C   7401         MOV       A,#0x1
   \   00000E   25..         ADD       A,?V0
   \   000010   F9           MOV       R1,A
   \   000011   12....       LCALL     `??Single_ReadI2C::?relay`; Banked call to: Single_ReadI2C
   \   000014   E9           MOV       A,R1
   \   000015   FA           MOV       R2,A
   \   000016   EF           MOV       A,R7
   \   000017   FB           MOV       R3,A
   \   000018   02....       LJMP      ??Subroutine8_0 & 0xFFFF
    233          }
    234          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    235          unsigned int absi( int val) 
   \                     absi:
    236          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    237            if (val<0) return -1*val;
   \   000000   C3           CLR       C
   \   000001   EB           MOV       A,R3
   \   000002   9400         SUBB      A,#0x0
   \   000004   A2D2         MOV       C,0xD0 /* PSW */.2
   \   000006   65D0         XRL       A,PSW
   \   000008   33           RLC       A
   \   000009   500B         JNC       ??absi_0
   \   00000B   C3           CLR       C
   \   00000C   E4           CLR       A
   \   00000D   9A           SUBB      A,R2
   \   00000E   F8           MOV       R0,A
   \   00000F   E4           CLR       A
   \   000010   9B           SUBB      A,R3
   \   000011   F9           MOV       R1,A
   \   000012   E8           MOV       A,R0
   \   000013   FA           MOV       R2,A
   \   000014   E9           MOV       A,R1
   \   000015   FB           MOV       R3,A
    238            else return val;
   \                     ??absi_0:
   \   000016   02....       LJMP      ?BRET
    239            
    240          }
    241          
    242          

   Maximum stack usage in bytes:

   ISTACK XSTACK Function
   ------ ------ --------
      2      0   ALLInit
        2      0   -> InitMPU6050
      0      9   GetData
        0      9   -> Single_ReadI2C
      2      0   InitMPU6050
        2      0   -> Single_WriteI2C
      2      9   MPU6050_RecvACK
        2      0   -> ReadSDA
        2      0   -> WriteSCL_0
        2      0   -> WriteSCL_1
        2      0   -> delay_us
      0     18   MPU6050_RecvByte
        0      9   -> WriteSDA_1
        0      9   -> delay_us
      0     18   MPU6050_SendACK
        0      9   -> WriteSCL_0
        0      9   -> WriteSCL_1
        0      9   -> delay_us
      0     18   MPU6050_SendByte
        0      9   -> MPU6050_RecvACK
        0      9   -> SDA_OUT
        0      9   -> WriteSCL_0
        0      9   -> WriteSCL_1
        0      9   -> WriteSDA_0
        0      9   -> WriteSDA_1
        0      9   -> delay_us
      2      9   MPU6050_Start
        2      0   -> WriteSCL_0
        2      0   -> WriteSCL_1
        2      0   -> WriteSDA_0
        2      0   -> WriteSDA_1
        2      0   -> delay_us
      2      9   MPU6050_Stop
        2      0   -> WriteSCL_1
        2      0   -> WriteSDA_0
        2      0   -> WriteSDA_1
        2      0   -> delay_us
      0      0   ReadSDA
      0      9   SDA_OUT
      0     18   Single_ReadI2C
        0      9   -> MPU6050_RecvByte
        0      9   -> MPU6050_SendACK
        0      9   -> MPU6050_SendByte
        0      9   -> MPU6050_Start
        0      9   -> MPU6050_Stop
      0      9   Single_WriteI2C
        0      9   -> MPU6050_SendByte
        0      9   -> MPU6050_Start
        0      9   -> MPU6050_Stop
      0      9   WriteSCL_0
      0      9   WriteSCL_1
      0      9   WriteSDA_0
      0      9   WriteSDA_1
      0      0   absi
      0     19   delay_us
        0     10   -> Onboard_wait


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
       7  ??Subroutine6_0
      11  ??Subroutine7_0
       5  ??Subroutine8_0
       7  ?Subroutine0
       2  ?Subroutine1
       3  ?Subroutine2
      11  ?Subroutine3
      14  ?Subroutine4
       7  ?Subroutine5
       9  ALLInit
      27  GetData
      42  InitMPU6050
      27  MPU6050_RecvACK
      43  MPU6050_RecvByte
      15  MPU6050_SendACK
      41  MPU6050_SendByte
      18  MPU6050_Start
      13  MPU6050_Stop
       1  P0DIR
       1  P0SEL
       9  ReadSDA
       6  SDA_OUT
      33  Single_ReadI2C
      22  Single_WriteI2C
      11  WriteSCL_0
      11  WriteSCL_1
       8  WriteSDA_0
       8  WriteSDA_1
       1  _A_P0
       1  _A_PSW
      25  absi
      28  delay_us
     114  -- Other

 
 463 bytes in segment BANKED_CODE
 114 bytes in segment BANK_RELAYS
   4 bytes in segment SFR_AN
 
 114 bytes of CODE     memory
   0 bytes of DATA     memory (+ 4 bytes shared)
 463 bytes of HUGECODE memory

Errors: none
Warnings: none
