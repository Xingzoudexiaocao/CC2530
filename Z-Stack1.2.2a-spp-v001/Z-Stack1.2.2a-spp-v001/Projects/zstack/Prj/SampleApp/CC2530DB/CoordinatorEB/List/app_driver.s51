///////////////////////////////////////////////////////////////////////////////
//
// IAR C/C++ Compiler V10.30.1.6000 for 8051              06/Nov/2019  12:21:35
// Copyright 2004-2018 IAR Systems AB.
// PC-locked license - IAR Embedded Workbench for 8051
//
//    Core               =  plain
//    Code model         =  banked
//    Data model         =  large
//    Calling convention =  xdata reentrant
//    Constant location  =  data_rom
//    Dptr setup         =  1,16
//                          
//    Source file        =  
//        C:\Users\hhhho\Desktop\毕设\Z-Stack1.2.2a-spp-v001\Z-Stack1.2.2a-spp-v001\Projects\zstack\Prj\SampleApp\Source\app_driver.c
//    Command line       =  
//        -f C:\Users\hhhho\AppData\Local\Temp\EW631D.tmp
//        (C:\Users\hhhho\Desktop\毕设\Z-Stack1.2.2a-spp-v001\Z-Stack1.2.2a-spp-v001\Projects\zstack\Prj\SampleApp\Source\app_driver.c
//        -D ZTOOL_P1 -D SECURE=1 -D xNV_INIT -D xNV_RESTORE -D
//        LCD_SUPPORTED=FALSE -D MULTICAST_ENABLED=FALSE -D
//        FEATURE_SYSTEM_STATS -lC
//        C:\Users\hhhho\Desktop\毕设\Z-Stack1.2.2a-spp-v001\Z-Stack1.2.2a-spp-v001\Projects\zstack\Prj\SampleApp\CC2530DB\CoordinatorEB\List
//        -lA
//        C:\Users\hhhho\Desktop\毕设\Z-Stack1.2.2a-spp-v001\Z-Stack1.2.2a-spp-v001\Projects\zstack\Prj\SampleApp\CC2530DB\CoordinatorEB\List
//        --diag_suppress Pe001,Pa010 -o
//        C:\Users\hhhho\Desktop\毕设\Z-Stack1.2.2a-spp-v001\Z-Stack1.2.2a-spp-v001\Projects\zstack\Prj\SampleApp\CC2530DB\CoordinatorEB\Obj
//        -e --debug --core=plain --dptr=16,1 --data_model=large
//        --code_model=banked --calling_convention=xdata_reentrant
//        --place_constants=data_rom --nr_virtual_regs 16 -f
//        C:\Users\hhhho\Desktop\毕设\Z-Stack1.2.2a-spp-v001\Z-Stack1.2.2a-spp-v001\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\..\Tools\CC2530DB\f8wCoord.cfg
//        (-DCPU32MHZ -DROOT=__near_func -DMAC_CFG_APP_PENDING_QUEUE=TRUE
//        -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8 -DMAC_CFG_RX_MAX=5
//        -DZDO_COORDINATOR -DRTR_NWK) -f
//        C:\Users\hhhho\Desktop\毕设\Z-Stack1.2.2a-spp-v001\Z-Stack1.2.2a-spp-v001\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg
//        (-DZIGBEEPRO -DSECURE=1 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR
//        -DDEFAULT_CHANLIST=0x00000800 -DZDAPP_CONFIG_PAN_ID=0xFFFF
//        -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MASK=0x007F
//        -DBEACON_REQUEST_DELAY=100 -DBEACON_REQ_DELAY_MASK=0x00FF
//        -DLINK_STATUS_JITTER_MASK=0x007F -DROUTE_EXPIRY_TIME=30
//        -DAPSC_ACK_WAIT_DURATION_POLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7
//        -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3
//        -DNWK_MAX_DATA_RETRIES=2 -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9
//        -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40 -DNWK_MAX_BINDING_ENTRIES=4
//        -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07,
//        0x09, 0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C,
//        0x0D}" -DMAC_MAX_FRAME_SIZE=116 -DZDNWKMGR_MIN_TRANSMISSIONS=20
//        "-DCONST=const __code" -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE
//        -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100
//        -DREJOIN_POLL_RATE=440 -DREJOIN_BACKOFF=900000 -DREJOIN_SCAN=900000)
//        -f
//        C:\Users\hhhho\Desktop\毕设\Z-Stack1.2.2a-spp-v001\Z-Stack1.2.2a-spp-v001\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\..\Tools\CC2530DB\f8wZCL.cfg
//        -I
//        C:\Users\hhhho\Desktop\毕设\Z-Stack1.2.2a-spp-v001\Z-Stack1.2.2a-spp-v001\Projects\zstack\Prj\SampleApp\CC2530DB\
//        -I
//        C:\Users\hhhho\Desktop\毕设\Z-Stack1.2.2a-spp-v001\Z-Stack1.2.2a-spp-v001\Projects\zstack\Prj\SampleApp\CC2530DB\..\Source\
//        -I
//        C:\Users\hhhho\Desktop\毕设\Z-Stack1.2.2a-spp-v001\Z-Stack1.2.2a-spp-v001\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\Source\
//        -I
//        C:\Users\hhhho\Desktop\毕设\Z-Stack1.2.2a-spp-v001\Z-Stack1.2.2a-spp-v001\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\..\ZMain\TI2530DB\
//        -I
//        C:\Users\hhhho\Desktop\毕设\Z-Stack1.2.2a-spp-v001\Z-Stack1.2.2a-spp-v001\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\..\..\..\Components\hal\include\
//        -I
//        C:\Users\hhhho\Desktop\毕设\Z-Stack1.2.2a-spp-v001\Z-Stack1.2.2a-spp-v001\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\
//        -I
//        C:\Users\hhhho\Desktop\毕设\Z-Stack1.2.2a-spp-v001\Z-Stack1.2.2a-spp-v001\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\..\..\..\Components\mac\include\
//        -I
//        C:\Users\hhhho\Desktop\毕设\Z-Stack1.2.2a-spp-v001\Z-Stack1.2.2a-spp-v001\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\..\..\..\Components\mac\high_level\
//        -I
//        C:\Users\hhhho\Desktop\毕设\Z-Stack1.2.2a-spp-v001\Z-Stack1.2.2a-spp-v001\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\
//        -I
//        C:\Users\hhhho\Desktop\毕设\Z-Stack1.2.2a-spp-v001\Z-Stack1.2.2a-spp-v001\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\single_chip\
//        -I
//        C:\Users\hhhho\Desktop\毕设\Z-Stack1.2.2a-spp-v001\Z-Stack1.2.2a-spp-v001\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\..\..\..\Components\mt\
//        -I
//        C:\Users\hhhho\Desktop\毕设\Z-Stack1.2.2a-spp-v001\Z-Stack1.2.2a-spp-v001\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\..\..\..\Components\osal\include\
//        -I
//        C:\Users\hhhho\Desktop\毕设\Z-Stack1.2.2a-spp-v001\Z-Stack1.2.2a-spp-v001\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\..\..\..\Components\services\saddr\
//        -I
//        C:\Users\hhhho\Desktop\毕设\Z-Stack1.2.2a-spp-v001\Z-Stack1.2.2a-spp-v001\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\..\..\..\Components\services\sdata\
//        -I
//        C:\Users\hhhho\Desktop\毕设\Z-Stack1.2.2a-spp-v001\Z-Stack1.2.2a-spp-v001\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\..\..\..\Components\stack\af\
//        -I
//        C:\Users\hhhho\Desktop\毕设\Z-Stack1.2.2a-spp-v001\Z-Stack1.2.2a-spp-v001\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\..\..\..\Components\stack\nwk\
//        -I
//        C:\Users\hhhho\Desktop\毕设\Z-Stack1.2.2a-spp-v001\Z-Stack1.2.2a-spp-v001\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\..\..\..\Components\stack\sapi\
//        -I
//        C:\Users\hhhho\Desktop\毕设\Z-Stack1.2.2a-spp-v001\Z-Stack1.2.2a-spp-v001\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\..\..\..\Components\stack\sec\
//        -I
//        C:\Users\hhhho\Desktop\毕设\Z-Stack1.2.2a-spp-v001\Z-Stack1.2.2a-spp-v001\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\..\..\..\Components\stack\sys\
//        -I
//        C:\Users\hhhho\Desktop\毕设\Z-Stack1.2.2a-spp-v001\Z-Stack1.2.2a-spp-v001\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\..\..\..\Components\stack\zcl\
//        -I
//        C:\Users\hhhho\Desktop\毕设\Z-Stack1.2.2a-spp-v001\Z-Stack1.2.2a-spp-v001\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\..\..\..\Components\stack\zdo\
//        -I
//        C:\Users\hhhho\Desktop\毕设\Z-Stack1.2.2a-spp-v001\Z-Stack1.2.2a-spp-v001\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\..\..\..\Components\zmac\
//        -I
//        C:\Users\hhhho\Desktop\毕设\Z-Stack1.2.2a-spp-v001\Z-Stack1.2.2a-spp-v001\Projects\zstack\Prj\SampleApp\CC2530DB\..\..\..\..\..\Components\zmac\f8w\
//        -Ohz --require_prototypes)
//    Locale             =  Chinese (Simplified)_CHN.936
//    List file          =  
//        C:\Users\hhhho\Desktop\毕设\Z-Stack1.2.2a-spp-v001\Z-Stack1.2.2a-spp-v001\Projects\zstack\Prj\SampleApp\CC2530DB\CoordinatorEB\List\app_driver.s51
//
///////////////////////////////////////////////////////////////////////////////

        NAME app_driver

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__iar_require _formatted_write", ""
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__register_banks", "*"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?V0
        EXTERN ?V1
        EXTERN ?V2
        EXTERN ?V3
        EXTERN ?ALLOC_XSTACK8
        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?BRET
        EXTERN ?DEALLOC_XSTACK8
        EXTERN ?PUSH_XSTACK_I_TWO
        EXTERN ?XSP
        EXTERN ?XSTACK_DISP0_8
        EXTERN ?XSTACK_DISP101_8

        PUBLIC `??printDebugString::?relay`
        FUNCTION `??printDebugString::?relay`,0203H
        PUBLIC `??printDebugStringNum::?relay`
        FUNCTION `??printDebugStringNum::?relay`,0203H
        PUBLIC `??printInt::?relay`
        FUNCTION `??printInt::?relay`,0203H
        PUBLIC `??printResString::?relay`
        FUNCTION `??printResString::?relay`,0203H
        PUBLIC `??uartInit::?relay`
        FUNCTION `??uartInit::?relay`,0203H
        PUBLIC printDebugString
        FUNCTION printDebugString,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        PUBLIC printDebugStringNum
        FUNCTION printDebugStringNum,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 31, STACK
        PUBLIC printInt
        FUNCTION printInt,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 3, STACK
        LOCFRAME XSTACK, 2, STACK
        PUBLIC printResString
        FUNCTION printResString,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        PUBLIC uartInit
        FUNCTION uartInit,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 38, STACK
        
          CFI Names cfiNames0
          CFI StackFrame CFA_SP SP IDATA
          CFI StackFrame CFA_PSP16 PSP16 XDATA
          CFI StackFrame CFA_XSP16 XSP16 XDATA
          CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
          CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
          CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
          CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
          CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
          CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
          CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
          CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
          CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
          CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
          CFI VirtualResource ?RET:24
          CFI Resource ?BRET_EXT:8
          CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
          CFI ResourceParts PSP16 PSPH, PSPL
          CFI ResourceParts XSP16 XSPH, XSPL
          CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign -1
          CFI ReturnAddress ?RET CODE
          CFI CFA_DOVERLAY Used
          CFI CFA_IOVERLAY Used
          CFI CFA_SP SP+-3
          CFI CFA_PSP16 PSP16+0
          CFI CFA_XSP16 XSP16+0
          CFI `PSW.CY` SameValue
          CFI `B.BR0` SameValue
          CFI `B.BR1` SameValue
          CFI `B.BR2` SameValue
          CFI `B.BR3` SameValue
          CFI `B.BR4` SameValue
          CFI `B.BR5` SameValue
          CFI `B.BR6` SameValue
          CFI `B.BR7` SameValue
          CFI `VB.BR8` SameValue
          CFI `VB.BR9` SameValue
          CFI `VB.BR10` SameValue
          CFI `VB.BR11` SameValue
          CFI `VB.BR12` SameValue
          CFI `VB.BR13` SameValue
          CFI `VB.BR14` SameValue
          CFI `VB.BR15` SameValue
          CFI VB SameValue
          CFI B Undefined
          CFI A Undefined
          CFI PSW SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R0 Undefined
          CFI R1 Undefined
          CFI R2 Undefined
          CFI R3 Undefined
          CFI R4 Undefined
          CFI R5 Undefined
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI V8 SameValue
          CFI V9 SameValue
          CFI V10 SameValue
          CFI V11 SameValue
          CFI V12 SameValue
          CFI V13 SameValue
          CFI V14 SameValue
          CFI V15 SameValue
          CFI PSPH Undefined
          CFI PSPL Undefined
          CFI XSPH Undefined
          CFI XSPL Undefined
          CFI ?RET Concat
          CFI ?BRET_EXT Frame(CFA_SP, 3)
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndCommon cfiCommon0
        
HalUARTOpen         SYMBOL "HalUARTOpen"
`??HalUARTOpen::?relay` SYMBOL "?relay", HalUARTOpen
HalUARTWrite        SYMBOL "HalUARTWrite"
`??HalUARTWrite::?relay` SYMBOL "?relay", HalUARTWrite
osal_strlen         SYMBOL "osal_strlen"
`??osal_strlen::?relay` SYMBOL "?relay", osal_strlen
sprintf             SYMBOL "sprintf"
`??sprintf::?relay` SYMBOL "?relay", sprintf
printDebugString    SYMBOL "printDebugString"
`??printDebugString::?relay` SYMBOL "?relay", printDebugString
printDebugStringNum SYMBOL "printDebugStringNum"
`??printDebugStringNum::?relay` SYMBOL "?relay", printDebugStringNum
printInt            SYMBOL "printInt"
`??printInt::?relay` SYMBOL "?relay", printInt
printResString      SYMBOL "printResString"
`??printResString::?relay` SYMBOL "?relay", printResString
uartInit            SYMBOL "uartInit"
`??uartInit::?relay` SYMBOL "?relay", uartInit

        EXTERN `??HalUARTOpen::?relay`
        FUNCTION `??HalUARTOpen::?relay`,00H
        EXTERN `??HalUARTWrite::?relay`
        FUNCTION `??HalUARTWrite::?relay`,00H
        EXTERN `??osal_strlen::?relay`
        FUNCTION `??osal_strlen::?relay`,00H
        EXTERN `??sprintf::?relay`
        FUNCTION `??sprintf::?relay`,00H
        EXTERN HalUARTOpen
        FUNCTION HalUARTOpen,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN HalUARTWrite
        FUNCTION HalUARTWrite,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_strlen
        FUNCTION osal_strlen,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN sprintf
        FUNCTION sprintf,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 31, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC

// C:\Users\hhhho\Desktop\毕设\Z-Stack1.2.2a-spp-v001\Z-Stack1.2.2a-spp-v001\Projects\zstack\Prj\SampleApp\Source\app_driver.c
//    1 #include "OSAL.h"
//    2 #include "ZGlobals.h"
//    3 #include "OnBoard.h"
//    4 
//    5 #include "hal_uart.h"
//    6 
//    7 #include "app_driver.h"
//    8 #include <stdio.h>
//    9 
//   10 
//   11 //static byte key_rspTaskID = 0;
//   12 //static uint16 key_event = 0;
//   13 //static uint16 key_time = 0;
//   14 
//   15 //void keyInit( byte task, uint16 event, uint16 time )
//   16 //{
//   17 //  key_rspTaskID = task;
//   18 //  key_event = event;
//   19 //  key_time = time;
//   20 //  
//   21 //  //P0中断优先级最高
//   22 //  //  IP0 |= (1<<5);
//   23 //  //  IP1 |= (1<<5);
//   24 //  
//   25 //  // P00
//   26 //  P0SEL &= ~0x01;       // 0:GPIO
//   27 //  P0DIR &= ~0x01;       // 0:input    1:output
//   28 //  P0INP |= 0x01;        // 0:上下拉    1:三态
//   29 //  P0IEN |= 0X01;        // P00 设置为中断方式
//   30 //  PICTL |= 0x01;        // 下降沿触发  
//   31 //  
//   32 //  // P01
//   33 //  P0SEL &= ~0x02;       // 0:GPIO
//   34 //  P0DIR &= ~0x02;       // 0:input    1:output
//   35 //  P0INP |= 0x02;        // 0:上下拉    1:三态
//   36 //  P0IEN |= 0X02;        // P00 设置为中断方式
//   37 //  PICTL |= 0x02;        // 下降沿触发  
//   38 //  
//   39 //  IEN1 |= 0X20;         // 允许P0口中断;
//   40 //  P0IFG = 0x00;         // 初始化中断标志位
//   41 //  EA = 1; 
//   42 //}
//   43 
//   44 //uint8 readKeyPress(void)
//   45 //{
//   46 //  uint8 key = 0;
//   47 //  
//   48 //  if(P0_0==0)
//   49 //  {
//   50 //    key |= 0x01;
//   51 //  }
//   52 //  else
//   53 //  {
//   54 //    key &= ~0x01;
//   55 //  }
//   56 //  
//   57 //  if(P0_1==0)
//   58 //  {
//   59 //    key |= 0x02;
//   60 //  }
//   61 //  else
//   62 //  {
//   63 //    key &= ~0x02;
//   64 //  }
//   65 //  
//   66 //  return key;
//   67 //}
//   68 
//   69  /**************************************************************************************************
//   70 * @fn      halKeyPort0Isr
//   71 *
//   72 * @brief   Port0 ISR
//   73 *
//   74 * @param
//   75 *
//   76 * @return
//   77 **************************************************************************************************/
//   78 //HAL_ISR_FUNCTION( halKeyPort0Isr, P0INT_VECTOR )
//   79 //{
//   80 //  HAL_ENTER_ISR()
//   81 ////  P0SEL |= 0x0C;        //串口IO处理
//   82 //
//   83 //  if(key_event)osal_start_timerEx( key_rspTaskID, key_event,key_time);
//   84 //  
//   85 //  //清中断标志
//   86 //  P0IFG = 0;             
//   87 //  P0IF = 0;           
//   88 //  HAL_EXIT_ISR();
//   89 //}
//   90 
//   91 

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//   92 void uartInit( uint8 buad, halUARTCBack_t serialCallBack )
uartInit:
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function uartInit
        CODE
//   93 {
        FUNCALL uartInit, HalUARTOpen
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 38, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV       A,#-0x9
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 29
        MOV       A,#-0x1d
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 38)
//   94   halUARTCfg_t uartConfig;
//   95 
//   96   // configure UART
//   97   uartConfig.configured           = TRUE;
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOV       A,#0x1
        MOVX      @DPTR,A
//   98   uartConfig.baudRate             = buad;
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R1
        MOVX      @DPTR,A
//   99   uartConfig.flowControl          = FALSE;
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        CLR       A
        MOVX      @DPTR,A
//  100   uartConfig.flowControlThreshold = 64;
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        MOV       A,#0x40
        MOVX      @DPTR,A
        INC       DPTR
        CLR       A
        MOVX      @DPTR,A
//  101   uartConfig.rx.maxBufSize        = 255;
        MOV       A,#0xa
        LCALL     ?XSTACK_DISP0_8
        MOV       A,#-0x1
        MOVX      @DPTR,A
        INC       DPTR
        CLR       A
        MOVX      @DPTR,A
//  102   uartConfig.tx.maxBufSize        = 255;
        MOV       A,#0x12
        LCALL     ?XSTACK_DISP0_8
        MOV       A,#-0x1
        MOVX      @DPTR,A
        INC       DPTR
        CLR       A
        MOVX      @DPTR,A
//  103   uartConfig.idleTimeout          = 6;
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        MOV       A,#0x6
        MOVX      @DPTR,A
//  104   uartConfig.intEnable            = TRUE;
        MOV       A,#0x16
        LCALL     ?XSTACK_DISP0_8
        MOV       A,#0x1
        MOVX      @DPTR,A
//  105   uartConfig.callBackFunc         = serialCallBack;
        MOV       A,#0x1b
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R2
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R3
        MOVX      @DPTR,A
//  106 
//  107   // start UART
//  108   // Note: Assumes no issue opening UART port.
//  109   (void)HalUARTOpen( 0, &uartConfig );
        ; Setup parameters for call to function HalUARTOpen
        MOV       R2,?XSP + 0
        MOV       R3,?XSP + 1
        MOV       R1,#0x0
        LCALL     `??HalUARTOpen::?relay`; Banked call to: HalUARTOpen
//  110 
//  111   return;
        MOV       A,#0x1d
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 9)
        SJMP      ??Subroutine1_0
//  112 }
          CFI EndBlock cfiBlock0
//  113 
//  114 

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  115 void printDebugString( char *str )
printDebugString:
        CODE
        FUNCALL printDebugString, osal_strlen
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL printDebugString, HalUARTWrite
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?Subroutine0
        ; // Fall through to label ?Subroutine0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine0:
          CFI Block cfiBlock1 Using cfiCommon0
          CFI NoFunction
//  116 {
        MOV       A,#-0x9
        LCALL     ?BANKED_ENTER_XDATA
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        ; Saved register size: 9
        ; Auto size: 0
        ; Saved register size: 9
        ; Auto size: 0
        MOV       A,R2
        MOV       R6,A
        MOV       A,R3
        MOV       R7,A
//  117   HalUARTWrite(0,str,osal_strlen(str)); 
        ; Setup parameters for call to function HalUARTWrite
        ; Setup parameters for call to function osal_strlen
        ; Setup parameters for call to function HalUARTWrite
        ; Setup parameters for call to function osal_strlen
        LCALL     `??osal_strlen::?relay`; Banked call to: osal_strlen
        MOV       A,R2
        MOV       R4,A
        MOV       A,R3
        MOV       R5,A
        MOV       A,R6
        MOV       R2,A
        MOV       A,R7
        MOV       R3,A
        MOV       R1,#0x0
        LCALL     `??HalUARTWrite::?relay`; Banked call to: HalUARTWrite
//  118 }
          CFI EndBlock cfiBlock1
        REQUIRE ??Subroutine1_0
        ; // Fall through to label ??Subroutine1_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine1_0:
          CFI Block cfiBlock2 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       R7,#0x1
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock2
//  119 

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  120 void printDebugStringNum( char *str, uint16 num )
printDebugStringNum:
          CFI Block cfiBlock3 Using cfiCommon0
          CFI Function printDebugStringNum
        CODE
//  121 {
        FUNCALL printDebugStringNum, osal_strlen
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL printDebugStringNum, HalUARTWrite
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL printDebugStringNum, sprintf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 31, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 31, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL printDebugStringNum, osal_strlen
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL printDebugStringNum, HalUARTWrite
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 15
        MOV       A,#-0xf
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 27)
        MOV       A,R2
        MOV       R6,A
        MOV       A,R3
        MOV       R7,A
        MOV       ?V0,R4
        MOV       ?V1,R5
//  122   char buf[15];
//  123   
//  124   HalUARTWrite(0,str,osal_strlen(str)); 
        ; Setup parameters for call to function osal_strlen
        LCALL     `??osal_strlen::?relay`; Banked call to: osal_strlen
        MOV       ?V2,R2
        MOV       ?V3,R3
        MOV       R4,?V2
        MOV       R5,?V3
        ; Setup parameters for call to function HalUARTWrite
        MOV       A,R6
        MOV       R2,A
        MOV       A,R7
        MOV       R3,A
        MOV       R1,#0x0
        LCALL     `??HalUARTWrite::?relay`; Banked call to: HalUARTWrite
//  125   sprintf(buf,"%d - %x\n",num,num);
        ; Setup parameters for call to function sprintf
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 29)
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 31)
        MOV       R4,#`?<Constant "%d - %x\\n">` & 0xff
        MOV       R5,#(`?<Constant "%d - %x\\n">` >> 8) & 0xff
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP101_8
        LCALL     `??sprintf::?relay`; Banked call to: sprintf
        MOV       A,#0x4
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 27)
//  126   HalUARTWrite(0,buf,osal_strlen(buf)); 
        ; Setup parameters for call to function osal_strlen
        MOV       R2,?XSP + 0
        MOV       R3,?XSP + 1
        LCALL     `??osal_strlen::?relay`; Banked call to: osal_strlen
        MOV       ?V0,R2
        MOV       ?V1,R3
        MOV       R4,?V0
        MOV       R5,?V1
        ; Setup parameters for call to function HalUARTWrite
        MOV       R2,?XSP + 0
        MOV       R3,?XSP + 1
        MOV       R1,#0x0
        LCALL     `??HalUARTWrite::?relay`; Banked call to: HalUARTWrite
//  127 }
        MOV       A,#0xf
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
        MOV       R7,#0x4
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock3
//  128 

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  129 void printResString( char *str )
printResString:
          CFI Block cfiBlock4 Using cfiCommon0
          CFI Function printResString
        CODE
        FUNCALL printResString, osal_strlen
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL printResString, HalUARTWrite
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LJMP      ?Subroutine0 & 0xFFFF
          CFI EndBlock cfiBlock4
//  130 {
//  131   HalUARTWrite(0,str,osal_strlen(str)); 
//  132 }
//  133 

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  134 void printInt( unsigned int PrintInt )
printInt:
          CFI Block cfiBlock5 Using cfiCommon0
          CFI Function printInt
        CODE
//  135 {
        FUNCALL printInt, HalUARTWrite
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 2, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 2, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH      DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH      DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 2
        MOV       A,#-0x2
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 2)
//  136   unsigned char PrintChar[2];
//  137 //  PrintChar[0]  = PrintInt/10000;
//  138 //  PrintChar[1]  = PrintInt/1000%10;
//  139 //  PrintChar[2]  = PrintInt/100%10;
//  140 //  PrintChar[3]  = PrintInt/10%10;
//  141 //  PrintChar[4]  = PrintInt%10;
//  142 
//  143   PrintChar[0] = (PrintInt>>8) & 0x00ff;
        MOV       A,R3
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
//  144   PrintChar[1] = PrintInt & 0x00ff;
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R2
        MOVX      @DPTR,A
//  145   HalUARTWrite(0,PrintChar,2); 
        ; Setup parameters for call to function HalUARTWrite
        MOV       R4,#0x2
        MOV       R5,#0x0
        MOV       R2,?XSP + 0
        MOV       R3,?XSP + 1
        MOV       R1,#0x0
        LCALL     `??HalUARTWrite::?relay`; Banked call to: HalUARTWrite
//  146 }
        MOV       A,#0x2
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 XSP16+0
        POP       DPH
          CFI DPH0 SameValue
          CFI CFA_SP SP+-4
        POP       DPL
          CFI DPL0 SameValue
          CFI CFA_SP SP+-3
        LJMP      ?BRET
          CFI EndBlock cfiBlock5

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??uartInit::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    uartInit

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??printDebugString::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    printDebugString

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??printDebugStringNum::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    printDebugStringNum

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??printResString::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    printResString

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??printInt::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    printInt

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "%d - %x\\n">`:
        DB "%d - %x\012"

        END
//  147 
//  148 
//  149 
// 
// 287 bytes in segment BANKED_CODE
//  30 bytes in segment BANK_RELAYS
//   9 bytes in segment XDATA_ROM_C
// 
//  30 bytes of CODE     memory
//   9 bytes of CONST    memory
// 287 bytes of HUGECODE memory
//
//Errors: none
//Warnings: 4
